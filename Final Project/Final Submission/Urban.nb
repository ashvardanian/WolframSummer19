(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1873575,      37811]
NotebookOptionsPosition[   1862090,      37614]
NotebookOutlinePosition[   1862504,      37632]
CellTagsIndexPosition[   1862461,      37629]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantifying the influence of Urban Design on Quality of Life", "Title",
 CellChangeTimes->{{3.771101273954318*^9, 3.771101323714347*^9}, {
  3.771771724379664*^9, 
  3.771771732107984*^9}},ExpressionUUID->"112c77e2-f45b-4372-906b-\
a938d28da3f8"],

Cell[CellGroupData[{

Cell["Setup", "Section",
 CellChangeTimes->{{3.771713279816607*^9, 3.771713281790873*^9}, {
  3.7717135948068542`*^9, 3.771713596242765*^9}, {3.771764753763339*^9, 
  3.771764754609419*^9}},ExpressionUUID->"627737e6-2c67-4101-ba9d-\
4750ebb8b851"],

Cell[CellGroupData[{

Cell["Utility Functions", "Subsection",
 CellChangeTimes->{{3.771712604201354*^9, 
  3.771712608129142*^9}},ExpressionUUID->"15f0bbef-4baf-4ee2-8702-\
3e0092151fcb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AssociationKeyRename", "[", 
     RowBox[{"a_", ",", " ", 
      RowBox[{"old_", " ", "\[Rule]", " ", "new_"}]}], "]"}], " ", "/;", " ", 
    
    RowBox[{"KeyExistsQ", "[", 
     RowBox[{"a", ",", " ", "old"}], "]"}]}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"KeyDrop", "[", "old", "]"}], " ", "@", " ", 
    RowBox[{"Append", "[", 
     RowBox[{"a", ",", " ", 
      RowBox[{"new", " ", "\[Rule]", " ", 
       RowBox[{"a", "[", "old", "]"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AssociationFromPair", "[", "strAndNum_List", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{
    "strAndNum", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
    "\[Rule]", " ", 
    RowBox[{
    "strAndNum", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AssociationsFromPair", "[", 
    RowBox[{"keys_List", ",", " ", "vals_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], ")"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"keys", ",", " ", "vals"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RangeMakeAround", "[", 
    RowBox[{"num_Integer", ",", " ", "delta_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"num", " ", "-", " ", "delta"}], ",", " ", 
     RowBox[{"num", " ", "+", " ", "delta"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_Integer", "]"}], " ", ":=", " ", 
   "number"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_Rational", "]"}], " ", ":=", " ", 
   RowBox[{"N", "[", "number", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_Real", "]"}], " ", ":=", " ", 
   "number"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_List", "]"}], " ", ":=", " ", 
   RowBox[{"number", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_Quantity", "]"}], " ", ":=", " ", 
   RowBox[{"QuantityMagnitude", "[", "number", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RescaleIntoInterval", "[", 
    RowBox[{
    "numbers_List", ",", " ", "numberNewSmallest_", ",", " ", 
     "numberNewLargest_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", " ", "*", " ", 
         RowBox[{"(", 
          RowBox[{"numberNewLargest", " ", "-", " ", "numberNewSmallest"}], 
          ")"}]}], " ", "+", " ", "numberNewSmallest"}], ")"}], " ", "&"}], 
     ",", " ", 
     RowBox[{"Rescale", "[", "numbers", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RescaleIntoInterval", "[", "numbers_List", "]"}], " ", ":=", " ", 
    RowBox[{"RescaleIntoInterval", "[", 
     RowBox[{"numbers", ",", " ", "0.5", ",", " ", "0.95"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorsFindInImage", "[", 
    RowBox[{"imgPixels_List", ",", " ", "colors_List"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Position", "[", 
          RowBox[{"imgPixels", ",", " ", "#"}], "]"}], ")"}], " ", "&"}], ",",
        " ", "colors"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{
    "redVals_List", ",", " ", "greenVals_List", ",", " ", "blueVals_List"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Tuples", "[", 
    RowBox[{"{", 
     RowBox[{"redVals", ",", " ", "greenVals", ",", " ", "blueVals", ",", " ", 
      RowBox[{"{", " ", "255", " ", "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{
    "red_Integer", ",", " ", "green_Integer", ",", " ", "blue_Integer", ",", 
     " ", "delta_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{
     RowBox[{"RangeMakeAround", "[", 
      RowBox[{"red", ",", " ", "delta"}], "]"}], ",", 
     RowBox[{"RangeMakeAround", "[", 
      RowBox[{"green", ",", " ", "delta"}], "]"}], ",", 
     RowBox[{"RangeMakeAround", "[", 
      RowBox[{"blue", ",", " ", "delta"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{"grey_Integer", ",", " ", "delta_Integer"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{"grey", ",", " ", "grey", ",", " ", "grey", ",", " ", "delta"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorMake", "[", 
    RowBox[{"r_", ",", "g_", ",", "b_"}], "]"}], " ", ":=", " ", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"r", "/", "255"}], ",", " ", 
     RowBox[{"g", "/", "255"}], ",", " ", 
     RowBox[{"b", "/", "255"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ColorMake", "[", "parts_List", "]"}], " ", ":=", " ", 
    RowBox[{"ColorMake", "[", 
     RowBox[{
      RowBox[{"parts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
       ",", " ", 
      RowBox[{"parts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
       ",", " ", 
      RowBox[{
      "parts", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ShuffleSynchronously", "[", "listOfLists_List", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newOrder", ",", " ", "lengthShortest"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"lengthShortest", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"Map", "[", 
         RowBox[{"Length", ",", " ", "listOfLists"}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"newOrder", " ", "=", " ", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "[", "lengthShortest", "]"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Permute", "[", 
          RowBox[{"#", ",", " ", "newOrder"}], "]"}], " ", "&"}], ",", " ", 
        "listOfLists"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EqualizeImages", "[", "imgs_List", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"smallestW", ",", " ", "smallestH", ",", " ", "sizes"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"sizes", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"ImageDimensions", ",", " ", "imgs"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"smallestW", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"sizes", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"smallestH", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"sizes", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageCrop", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"{", 
            RowBox[{"smallestW", ",", " ", "smallestH"}], "}"}]}], "]"}], " ",
          "&"}], ",", " ", "imgs"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MapReconstructFromImages", "[", "imgs_List", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cntSide", ",", " ", "imgsTable"}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"cntSide", " ", "=", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "imgs", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"imgsTable", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"imgs", ",", " ", 
         RowBox[{"{", 
          RowBox[{"cntSide", ",", "cntSide"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"ImageAssemble", "[", "imgsTable", "]"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101723293976*^9}, {3.7711024759486427`*^9, 
   3.771102595812048*^9}, 3.771102630105879*^9, {3.771102663030601*^9, 
   3.771102675942957*^9}, {3.771102819347427*^9, 3.771102841217803*^9}, {
   3.7711492274460793`*^9, 3.771149259526984*^9}, {3.7711494968232927`*^9, 
   3.771149500439412*^9}, 3.7711495391273327`*^9, {3.77125210524156*^9, 
   3.7712521814760447`*^9}, {3.771252249246994*^9, 3.771252279427402*^9}, {
   3.7712523472315397`*^9, 3.771252349510272*^9}, {3.7713308537177467`*^9, 
   3.771330854042081*^9}, {3.771351310412696*^9, 3.771351311048148*^9}, {
   3.771352532684317*^9, 3.771352549949391*^9}, {3.771356337886156*^9, 
   3.771356338115733*^9}, {3.7714467936655684`*^9, 3.7714468327252817`*^9}, {
   3.7714477080950613`*^9, 3.771447709078145*^9}, {3.771447785236917*^9, 
   3.771447786651771*^9}, {3.771447949999405*^9, 3.7714479501103563`*^9}, {
   3.771453850679749*^9, 3.771453858089093*^9}, {3.7714943916639833`*^9, 
   3.771494395261273*^9}, {3.771603230447397*^9, 3.771603276204214*^9}, {
   3.77162270325916*^9, 3.771622703769059*^9}, {3.7716720354592876`*^9, 
   3.7716720953478203`*^9}, {3.771672415887467*^9, 3.771672441238475*^9}, {
   3.771672951222991*^9, 3.771672957381604*^9}, {3.7716730265330887`*^9, 
   3.771673027357678*^9}, {3.771673226849732*^9, 3.771673231141677*^9}, {
   3.771673519358794*^9, 3.7716736310995073`*^9}, {3.771691685199237*^9, 
   3.771691693779365*^9}, {3.771691831795059*^9, 3.771691867469315*^9}, {
   3.771691971381495*^9, 3.77169197881502*^9}, {3.771692016649796*^9, 
   3.771692046537582*^9}, {3.771692397520424*^9, 3.7716923999690723`*^9}, {
   3.771692660468504*^9, 3.771692762738967*^9}, {3.7716928504906797`*^9, 
   3.7716928766927843`*^9}, {3.771693062356737*^9, 3.771693078588234*^9}, {
   3.771693618478825*^9, 3.771693675965167*^9}, {3.771693772415101*^9, 
   3.771693808300001*^9}, {3.7716938646087313`*^9, 3.7716938728069553`*^9}, {
   3.7716939585609303`*^9, 3.771693982168026*^9}, {3.771695280962672*^9, 
   3.771695307549501*^9}, {3.771710127577561*^9, 3.771710130111709*^9}, {
   3.771711669963105*^9, 3.771711677464121*^9}, 3.771712581117927*^9, {
   3.7717555389477043`*^9, 3.771755539178474*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"701bc516-4588-4409-bd02-62356ee10634"]
}, Closed]],

Cell[CellGroupData[{

Cell["General Constants", "Subsection",
 CellChangeTimes->{{3.771712641920773*^9, 
  3.7717126676907597`*^9}},ExpressionUUID->"c7b8b850-ca31-4d36-a026-\
92bed76431d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\</Users/ashvardanian/CodeMine/WolframSummer19/\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"constantPathTweets", " ", "=", " ", "\"\<Data/Tweets\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"constantPathFeatures", " ", "=", " ", "\"\<Data/Features\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"constantPathMaps", " ", "=", " ", "\"\<Data/Maps\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
  "constantPathSatellites", " ", "=", " ", "\"\<Data/Satellites\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"constantCityDiameterKM", " ", "=", " ", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantCityGridSize", " ", "=", " ", "5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantShareTraining", " ", "=", " ", "0.9"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantColorsPerPurpose", " ", "=", " ", 
   RowBox[{"Association", "[", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"\"\<Street\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"254", ",", "254", ",", "254"}], "}"}], "}"}]}], ",", " ", 
      "\n", "\t", 
      RowBox[{"\"\<Highway\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"232", ",", "208", ",", "174"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"227", ",", "160", ",", "54"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"242", ",", "196", ",", "99"}], "}"}]}], "}"}]}], ",", "\n",
       "\t", 
      RowBox[{"\"\<Water\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"158", ",", "197", ",", "226"}], "}"}], "}"}]}], ",", "\n", 
      "\t", 
      RowBox[{"\"\<Park\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"201", ",", "224", ",", "185"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"196", ",", "211", ",", "192"}], "}"}]}], 
        RowBox[{"(*", 
         RowBox[{"walking", " ", "trails"}], "*)"}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<Train\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"148", ",", "148", ",", "148"}], "}"}], "}"}]}], ",", "\n", 
      "\t", 
      RowBox[{"\"\<Interesting\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"251", ",", "248", ",", "228"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"240", ",", "236", ",", "228"}], "}"}]}], 
        RowBox[{"(*", "sports", "*)"}], "}"}]}], ",", "\n", "\t", 
      RowBox[{"\"\<Building\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"232", ",", "226", ",", "212"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"235", ",", "233", ",", "231"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"192", ",", "186", ",", "175"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"207", ",", "200", ",", "188"}], "}"}]}], "}"}]}], ",", 
      "\n", "\t", 
      RowBox[{"\"\<Annotations\>\"", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"69", ",", "69", ",", "69"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"117", ",", "117", ",", "117"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"63", ",", "63", ",", "63"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"88", ",", "88", ",", "88"}], "}"}]}], "}"}]}]}], "\n", 
     "}"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101735714161*^9}, {3.771101948449766*^9, 
   3.771101949271914*^9}, {3.7711027061183147`*^9, 3.771102789628256*^9}, {
   3.7711028769656677`*^9, 3.77110295393472*^9}, {3.771165070091775*^9, 
   3.7711650854638367`*^9}, 3.771165246245709*^9, {3.771198271950489*^9, 
   3.771198276482582*^9}, {3.771254152194386*^9, 3.771254159439356*^9}, {
   3.771255141608494*^9, 3.771255185697196*^9}, {3.7712555473089733`*^9, 
   3.771255547533888*^9}, {3.771255652408498*^9, 3.771255664396275*^9}, {
   3.771255707871517*^9, 3.7712557437705793`*^9}, {3.7713263576960297`*^9, 
   3.771326502260768*^9}, {3.771620294508806*^9, 3.7716203042475853`*^9}, {
   3.771622750063384*^9, 3.771622769400876*^9}, {3.7716233651292887`*^9, 
   3.7716234318215*^9}, {3.771670567290987*^9, 3.7716705676824827`*^9}, {
   3.771670646327095*^9, 3.77167064676192*^9}, {3.7716952524589643`*^9, 
   3.7716952557287903`*^9}, {3.771695648533807*^9, 3.7716956553990297`*^9}, {
   3.771696254457182*^9, 3.771696265487063*^9}, {3.771709397551697*^9, 
   3.7717094414883327`*^9}, 3.771712671575593*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"acdb5163-89af-4011-8610-a985ea22ddfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["City Lists", "Subsection",
 CellChangeTimes->{{3.771712714962381*^9, 
  3.77171272190005*^9}},ExpressionUUID->"04bf9ceb-4ddc-4f18-bf62-\
54860b3d9d2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "\n", 
   RowBox[{
    RowBox[{"Ordered", " ", "list", " ", "of", " ", 
     RowBox[{"cities", ":", " ", "https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "timeout", ".", "com"}], "/", "things"}], "-", "to",
      "-", 
     RowBox[{"do", "/", "best"}], "-", "cities", "-", "in", "-", "the", "-", 
     RowBox[{
     "world", " ", "\n", "Other", " ", "lists", " ", "can", " ", "be", " ", 
      "found", " ", "in", " ", 
      RowBox[{"\"\<CitiesLists.nb\>\"", "."}]}]}]}], "\n", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"CityRowParse", "[", "cityRow_List", "]"}], " ", ":=", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}], "[", 
        RowBox[{"StringJoin", "[", 
         RowBox[{
          RowBox[{
          "cityRow", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          ",", " ", "\"\<, \>\"", ",", " ", 
          RowBox[{
          "cityRow", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}],
          "]"}], "]"}], ",", " ", 
       RowBox[{
       "cityRow", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      " ", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"citiesWRanks", " ", "=", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"CityRowParse", ",", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{
         "Import", "[", "\"\<Data/Inputs/CitiesMercer2019.csv\>\"", "]"}], 
         ",", " ", "1"}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"citiesPopular", " ", "=", " ", 
     RowBox[{"citiesWRanks", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"citiesPositivness", " ", "=", " ", 
     RowBox[{"RescaleIntoInterval", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"N", "[", 
           RowBox[{"1", "/", "#"}], "]"}], ")"}], " ", "&"}], ",", " ", 
        RowBox[{"citiesWRanks", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
      "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101735714161*^9}, {3.771101948449766*^9, 
   3.771101949271914*^9}, {3.7711027061183147`*^9, 3.771102789628256*^9}, {
   3.7711028769656677`*^9, 3.77110295393472*^9}, {3.771165070091775*^9, 
   3.7711650854638367`*^9}, 3.771165246245709*^9, {3.771198271950489*^9, 
   3.771198276482582*^9}, {3.771254152194386*^9, 3.771254159439356*^9}, {
   3.771255141608494*^9, 3.771255185697196*^9}, {3.7712555473089733`*^9, 
   3.771255547533888*^9}, {3.771255652408498*^9, 3.771255664396275*^9}, {
   3.771255707871517*^9, 3.7712557437705793`*^9}, {3.7713263576960297`*^9, 
   3.771326502260768*^9}, {3.771620294508806*^9, 3.7716203042475853`*^9}, {
   3.771622750063384*^9, 3.771622769400876*^9}, {3.7716233651292887`*^9, 
   3.7716234318215*^9}, {3.771670567290987*^9, 3.7716705676824827`*^9}, {
   3.771670646327095*^9, 3.77167064676192*^9}, {3.7716952524589643`*^9, 
   3.7716952557287903`*^9}, {3.771695648533807*^9, 3.7716956553990297`*^9}, {
   3.771696254457182*^9, 3.771696265487063*^9}, {3.771709397551697*^9, 
   3.7717094414883327`*^9}, 3.771712671575593*^9, {3.771712948031887*^9, 
   3.7717129487907352`*^9}, 3.771760038589266*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"ec5fa737-edff-4f2b-bcf0-57aa61e8bf78"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TakeLargestNCitiesFrom", "[", 
    RowBox[{"citiesAll_", ",", " ", "count_Integer"}], "]"}], " ", ":=", " ", 
   
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "citiesWStats", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"citiesWStats", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            RowBox[{"CityData", "[", 
             RowBox[{"#", ",", "\"\<Population\>\""}], "]"}]}], "}"}], " ", 
          "&"}], ",", " ", "citiesAll"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"citiesWStats", " ", "=", " ", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"citiesWStats", ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"citiesWStats", " ", "=", " ", 
       RowBox[{"Reverse", "[", 
        RowBox[{"SortBy", "[", 
         RowBox[{"citiesWStats", ",", "Last"}], "]"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{
       RowBox[{"Take", "[", 
        RowBox[{"citiesWStats", ",", " ", 
         RowBox[{"UpTo", "[", "count", "]"}]}], "]"}], "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}]}]}], "\n", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesLargest", " ", "=", " ", 
   RowBox[{"TakeLargestNCitiesFrom", "[", 
    RowBox[{
     RowBox[{"CityData", "[", "All", "]"}], ",", " ", "100"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesUnpopular", " ", "=", " ", 
   RowBox[{"Complement", "[", 
    RowBox[{"citiesLargest", ",", " ", "citiesPopular"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771760061899959*^9, 3.771760250998399*^9}, {
  3.771760329145274*^9, 3.7717603386607933`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"8ed5ec78-3fa7-463b-9bd2-d653f70c8152"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CityName", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"city", ",", " ", "\"\<Name\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityBoundsAround", "[", "cityCenter_", "]"}], " ", ":=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"GeoBoundingBox", "[", 
     RowBox[{"cityCenter", ",", " ", 
      RowBox[{"Quantity", "[", 
       RowBox[{"constantCityDiameterKM", ",", " ", "\"\<Kilometers\>\""}], 
       "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityBounds", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"CityBoundsAround", "[", 
    RowBox[{"GeoCenter", "[", "city", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityDataPath", "[", 
    RowBox[{"directory_String", ",", " ", "city_String"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "directory", ",", " ", "\"\</\>\"", ",", " ", "city", ",", " ", 
      "\"\<.mx\>\""}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityDataPath", "[", 
    RowBox[{"directory_String", ",", " ", "city_"}], "]"}], " ", ":=", " ", 
   RowBox[{"CityDataPath", "[", 
    RowBox[{"directory", ",", " ", 
     RowBox[{"CityName", "[", "city", "]"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101735714161*^9}, {3.771101948449766*^9, 
   3.771101949271914*^9}, {3.7711027061183147`*^9, 3.771102789628256*^9}, {
   3.7711028769656677`*^9, 3.77110295393472*^9}, {3.771165070091775*^9, 
   3.7711650854638367`*^9}, 3.771165246245709*^9, {3.771198271950489*^9, 
   3.771198276482582*^9}, {3.771254152194386*^9, 3.771254159439356*^9}, {
   3.771255141608494*^9, 3.771255185697196*^9}, {3.7712555473089733`*^9, 
   3.771255547533888*^9}, {3.771255652408498*^9, 3.771255664396275*^9}, {
   3.771255707871517*^9, 3.7712557437705793`*^9}, {3.7713263576960297`*^9, 
   3.771326502260768*^9}, {3.771620294508806*^9, 3.7716203042475853`*^9}, {
   3.771622750063384*^9, 3.771622769400876*^9}, {3.7716233651292887`*^9, 
   3.7716234318215*^9}, {3.771670567290987*^9, 3.7716705676824827`*^9}, {
   3.771670646327095*^9, 3.77167064676192*^9}, {3.7716952524589643`*^9, 
   3.7716952557287903`*^9}, {3.771695648533807*^9, 3.7716956553990297`*^9}, {
   3.771696254457182*^9, 3.771696265487063*^9}, {3.771709397551697*^9, 
   3.7717094414883327`*^9}, 3.771712671575593*^9, {3.771712948031887*^9, 
   3.7717129487907352`*^9}, 3.771760038589266*^9, {3.771760642846367*^9, 
   3.771760644740056*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"b882ea8e-5682-47cf-9153-83ba69c772e2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Intro", "Section",
 CellChangeTimes->{{3.77176478941243*^9, 
  3.771764793492117*^9}},ExpressionUUID->"d8077b51-ac8e-499c-b436-\
ba87d82ec370"],

Cell[CellGroupData[{

Cell["Problem Definition", "Subsection",
 CellChangeTimes->{{3.7717648574350033`*^9, 
  3.771764861828003*^9}},ExpressionUUID->"a55aa6bd-a1ff-45cc-93a5-\
6c84f35a1916"],

Cell[TextData[{
 StyleBox["Most of the population around the globe is now concentrated in \
cities. ", "Text"],
 StyleBox["Cities provide the environment for collaboration and scientific \
discoveries.", "Text",
  FontSize->16],
 StyleBox["\nThere are around 2 dozens urban areas with populations exceeding \
10 million people, but ", "Text"],
 StyleBox["we still fail to quantify the influence of various aspects of \
urban design on the quality of life", "Text",
  FontWeight->"Bold"],
 StyleBox[".", "Text"]
}], "Text",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.7711015405664473`*^9}, {3.771764727685251*^9, 
   3.771764734281744*^9}, {3.771764815198311*^9, 3.7717648460281878`*^9}, {
   3.771764892420011*^9, 3.7717649867407084`*^9}, {3.771765209872777*^9, 
   3.771765234477412*^9}, 3.771765655025496*^9, {3.771765699498152*^9, 
   3.7717657090112457`*^9}, 3.771770144620273*^9, {3.771770945076055*^9, 
   3.771770954386327*^9}, {3.771770992994555*^9, 3.771771070491023*^9}, 
   3.771771179406891*^9, {3.771775814440814*^9, 
   3.771775814844348*^9}},ExpressionUUID->"c6307c66-135d-4af1-918e-\
b52e229fb589"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"problemGoodCitiesGDP", " ", "=", " ", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Total", "[", 
     RowBox[{"ExtractGDPs", "[", "citiesPopular", "]"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"problemBadBigCitiesGDP", " ", "=", " ", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Total", "[", 
     RowBox[{"ExtractGDPs", "[", "citiesUnpopular", "]"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"problemGlobalGDP", " ", "=", " ", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "\"\<GDP\>\"", "]"}], " ", "&"}], ",", " ", 
       RowBox[{"CountryData", "[", "All", "]"}]}], "]"}], "]"}], 
    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";"}]}], "Code",\

 CellChangeTimes->{{3.7717754467604733`*^9, 3.7717754864345007`*^9}, {
   3.771775608141528*^9, 3.771775615276252*^9}, 
   3.771775802686578*^9},ExpressionUUID->"91c326ad-7848-4177-8dde-\
105a8fe12ef2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Echo", "@", " ", 
   RowBox[{
    RowBox[{
    "StringTemplate", "[", 
     "\"\<We have analyzed `` cities with combined GDP of ``. It accounts for \
`` of global economy.\>\"", "]"}], "[", "\n", "\t", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Length", "[", "citiesPopular", "]"}], " ", "+", " ", 
       RowBox[{"Length", "[", "citiesLargest", "]"}]}], ")"}], ",", "\n", 
     "\t", 
     RowBox[{"(", 
      RowBox[{
      "problemGoodCitiesGDP", " ", "+", " ", "problemBadBigCitiesGDP"}], 
      ")"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "problemGoodCitiesGDP", " ", "+", " ", "problemBadBigCitiesGDP"}], 
       ")"}], " ", "/", " ", "problemGlobalGDP"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.771770174432641*^9, 3.7717702119203043`*^9}, {
  3.7717703399774714`*^9, 3.771770346939806*^9}, {3.771770642351697*^9, 
  3.771770746683906*^9}, {3.771770846217222*^9, 3.7717708590443153`*^9}, {
  3.771770902190229*^9, 3.771770918245927*^9}, {3.771775250580928*^9, 
  3.7717753143613443`*^9}, {3.771775358509263*^9, 3.7717754341242332`*^9}, {
  3.771775525351068*^9, 3.771775565177703*^9}, {3.771775627345442*^9, 
  3.7717756327859364`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"f85d5967-a3e9-4f75-9fa2-3afed676efbd"],

Cell[BoxData["\<\"We have analyzed 200 cities with combined GDP of \
$13528044528286. per year. It accounts for 0.167549 of global economy.\"\>"], \
"Echo",
 CellChangeTimes->{
  3.771775805164525*^9},ExpressionUUID->"a869612b-b2ee-4d84-a562-\
85335ec05c20"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quality of Life", "Subsection",
 CellChangeTimes->{{3.7717648574350033`*^9, 
  3.771764878721549*^9}},ExpressionUUID->"465b1624-08c6-46b8-b895-\
8279679931f7"],

Cell["\<\
The problem just gets harder once we realize, that there is no obvious metric \
for quality of life. For simplicity purposes, we will use existing rankings \
of cities. Our primary ranking was \[OpenCurlyDoubleQuote]2019 Quality of \
Living survey\[CloseCurlyDoubleQuote] by Mercer. They compare hundreds of \
cities but only publish the top 100 of them. We have extended that list with \
some counter-examples. Namely, the largest cities on the planet, not included \
in the original list.\
\>", "Text",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101723293976*^9}, {3.7711024759486427`*^9, 
   3.771102550634573*^9}, {3.771771189839937*^9, 3.771771306054756*^9}, {
   3.771771348913518*^9, 3.7717714035708714`*^9}, {3.771771440028858*^9, 
   3.771771475095375*^9}, 
   3.771771866899781*^9},ExpressionUUID->"d7112578-2f96-4683-9976-\
1d246abd738b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plan", "Subsection",
 CellChangeTimes->{{3.7717649938160458`*^9, 
  3.771764998242959*^9}},ExpressionUUID->"2f76336c-90c6-4404-a8ed-\
05b071d75f82"],

Cell[CellGroupData[{

Cell["Linear models and why they don\[CloseCurlyQuote]t work?", "Item",
 CellChangeTimes->{{3.7717649938160458`*^9, 3.771765056664022*^9}, {
  3.7717714852662582`*^9, 
  3.7717714855344963`*^9}},ExpressionUUID->"05baef06-c3cb-424a-930f-\
8b34b30e728b"],

Cell["Non-linear models and why they don't work?", "Item",
 CellChangeTimes->{{3.7717649938160458`*^9, 3.771765064053453*^9}, {
  3.77177148858222*^9, 
  3.771771489072143*^9}},ExpressionUUID->"2df93a5f-22de-4df8-88b6-\
7127f99ce05c"],

Cell["Observed correlations and future work.", "Item",
 CellChangeTimes->{{3.7717649938160458`*^9, 3.771765097711384*^9}, {
  3.7717714991211348`*^9, 
  3.7717715056062727`*^9}},ExpressionUUID->"c1dad0e7-c15d-4951-9b0c-\
17aadf81c5db"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Crawling", "Section",
 CellChangeTimes->{{3.771712752087246*^9, 3.771712759386382*^9}, {
  3.7717131448835773`*^9, 
  3.771713147912314*^9}},ExpressionUUID->"63985375-fa23-4d09-a7dc-\
b6747739c560"],

Cell[CellGroupData[{

Cell["Twitter", "Subsection",
 CellChangeTimes->{
  3.771713150936057*^9},ExpressionUUID->"fa1920ae-8e54-45ec-83bd-\
bd9f5d5988ff"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractTweets", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"tw", "[", 
     RowBox[{"\"\<TweetSearch\>\"", ",", " ", 
      RowBox[{"\"\<Query\>\"", "\[Rule]", 
       RowBox[{"CityName", "[", "city", "]"}]}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportTweets", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"CityDataPath", "[", 
      RowBox[{"constantPathTweets", ",", " ", "city"}], "]"}], ",", 
     RowBox[{"ExtractTweets", "[", "city", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportTweets", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"CityDataPath", "[", 
     RowBox[{"constantPathTweets", ",", " ", "city"}], "]"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.771103114668171*^9, {3.771103336765457*^9, 3.771103338095792*^9}, {
   3.771103900064671*^9, 3.771103953970173*^9}, {3.771104192105047*^9, 
   3.771104206425777*^9}, {3.771104623555089*^9, 3.771104634861293*^9}, {
   3.771104668974058*^9, 3.771104690035036*^9}, {3.7711047224932117`*^9, 
   3.771104799500358*^9}, {3.771104931900667*^9, 3.771104987366683*^9}, {
   3.771105022012245*^9, 3.771105218274828*^9}, 3.771105264350816*^9, {
   3.771150962719131*^9, 3.771150964531691*^9}, {3.771151012996887*^9, 
   3.7711510150931873`*^9}, {3.7711511401199427`*^9, 3.771151202612028*^9}, 
   3.771162598734274*^9, 3.77119823213085*^9, {3.7711984660326853`*^9, 
   3.771198471548006*^9}, {3.771255195206545*^9, 3.771255221452676*^9}, {
   3.77133068176521*^9, 3.771330710916729*^9}, {3.771330744590096*^9, 
   3.771330840917815*^9}, {3.771364487765592*^9, 3.771364489560156*^9}, {
   3.771448657237996*^9, 3.771448658832782*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"4c25a172-1f5e-4ece-a2a0-a28dcc91de33"]
}, Closed]],

Cell[CellGroupData[{

Cell["Maps", "Subsection",
 CellChangeTimes->{{3.7717127706024*^9, 3.7717127876152363`*^9}, 
   3.771713160783309*^9},ExpressionUUID->"ee1bdf2d-8e5c-4019-8ee5-\
eb9655578edf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractMapsGrid", "[", 
    RowBox[{"city_", ",", " ", "cityCenter_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cityBounds", ",", " ", "gridLats", ",", " ", "gridLons", ",", " ", 
       "cityParts", ",", " ", "MakeCell"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"cityBounds", " ", "=", " ", 
       RowBox[{"CityBoundsAround", "[", "cityCenter", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"gridLats", " ", "=", " ", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         RowBox[{"Latitude", "[", 
          RowBox[{
          "cityBounds", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"Latitude", "[", 
          RowBox[{
          "cityBounds", "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}], "]"}], ",", " ", 
         RowBox[{"constantCityGridSize", "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"gridLons", " ", "=", " ", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         RowBox[{"Longitude", "[", 
          RowBox[{
          "cityBounds", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"Longitude", "[", 
          RowBox[{
          "cityBounds", "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}], "]"}], ",", " ", 
         RowBox[{"constantCityGridSize", "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"MakeCell", "[", 
        RowBox[{"i_Integer", ",", " ", "j_Integer"}], "]"}], " ", ":=", " ", 
       RowBox[{"GeoRange", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "gridLats", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            ",", " ", 
           RowBox[{"gridLats", "\[LeftDoubleBracket]", 
            RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "gridLons", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}],
            ",", " ", 
           RowBox[{"gridLons", "\[LeftDoubleBracket]", 
            RowBox[{"j", "+", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"cityParts", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"MakeCell", "[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "constantCityGridSize"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "constantCityGridSize"}], "}"}]}], "]"}], 
        "]"}]}], ";", "\n", "\t", "cityParts"}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractMaps", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cityParts", ",", " ", "cityCenter", ",", " ", "ImageForCell"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"cityCenter", " ", "=", " ", 
       RowBox[{"GeoPosition", "[", "city", "]"}]}], ";", "\n", "\t", 
      RowBox[{"cityParts", " ", "=", " ", 
       RowBox[{"ExtractMapsGrid", "[", 
        RowBox[{"city", ",", " ", "cityCenter"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"ImageForCell", "[", "coords_", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "coordsAsList", "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"coordsAsList", " ", "=", " ", 
           RowBox[{"List", " ", "@@", " ", "coords"}]}], ";", "\n", "\t\t", 
          RowBox[{"Image", "[", 
           RowBox[{"GeoGraphics", "[", 
            RowBox[{"GeoRange", "\[Rule]", "coordsAsList"}], "]"}], "]"}]}]}],
         "\n", "\t", "]"}]}], ";", "\n", "\t", 
      RowBox[{"EqualizeImages", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"ImageForCell", ",", " ", "cityParts"}], "]"}], "]"}]}]}], 
    "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportMaps", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"CityDataPath", "[", 
      RowBox[{"constantPathMaps", ",", " ", "city"}], "]"}], ",", 
     RowBox[{"ExtractMaps", "[", "city", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportMaps", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"CityDataPath", "[", 
     RowBox[{"constantPathMaps", ",", " ", "city"}], "]"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771255003628858*^9, 3.771255019385186*^9}, {
   3.771255054782916*^9, 3.7712550927175417`*^9}, {3.771255236405387*^9, 
   3.771255264912755*^9}, 3.771255515444641*^9, 3.771255703381096*^9, {
   3.771255752389967*^9, 3.771255777900586*^9}, {3.771255850554541*^9, 
   3.771255853952383*^9}, {3.771329317484642*^9, 3.771329333383959*^9}, {
   3.771329577085322*^9, 3.771329588111939*^9}, 3.7713311687251*^9, {
   3.771585825750794*^9, 3.771585835461856*^9}, {3.7715858909152803`*^9, 
   3.771585900586632*^9}, 3.771585932346272*^9, {3.7715860171344767`*^9, 
   3.7715860713139353`*^9}, {3.771586365243346*^9, 3.771586405924994*^9}, {
   3.771603548460307*^9, 3.771603652291589*^9}, {3.771603725684588*^9, 
   3.771603728770176*^9}, {3.771604534741798*^9, 3.7716046078725767`*^9}, {
   3.771605072996415*^9, 3.771605073369802*^9}, {3.7716051056407633`*^9, 
   3.771605106401538*^9}, {3.771623340038671*^9, 3.7716233434193363`*^9}, {
   3.771623510161605*^9, 3.771623529899592*^9}, {3.771673674224918*^9, 
   3.7716736753418007`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"28b7f604-9d20-43ee-9c76-9f66715d0077"]
}, Closed]],

Cell[CellGroupData[{

Cell["Satellites", "Subsection",
 CellChangeTimes->{{3.771712791498201*^9, 3.7717127960468273`*^9}, 
   3.771713163753415*^9},ExpressionUUID->"9f81765d-48a1-412b-8f34-\
7c63eeb70cd0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractSatellites", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cityCenter", ",", " ", "cityParts", ",", " ", "ImageForCell"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"cityCenter", " ", "=", " ", 
       RowBox[{"GeoPosition", "[", "city", "]"}]}], ";", "\n", "\t", 
      RowBox[{"cityParts", " ", "=", " ", 
       RowBox[{"ExtractMapsGrid", "[", 
        RowBox[{"city", ",", " ", "cityCenter"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"ImageForCell", "[", 
        RowBox[{"coords_", ",", " ", "rotation_Real"}], "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "coordsAsList", "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"coordsAsList", " ", "=", " ", 
           RowBox[{"List", " ", "@@", " ", "coords"}]}], ";", "\n", "\t\t", 
          RowBox[{"Image", "[", 
           RowBox[{"GeoGraphics", "[", "\n", "                ", 
            RowBox[{
             RowBox[{"GeoRange", " ", "\[Rule]", " ", "coordsAsList"}], ",", 
             " ", "\n", "                ", 
             RowBox[{"GeoProjection", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<ObliqueMercator\>\"", ",", " ", 
                RowBox[{"\"\<Centering\>\"", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"cityCenter", ",", " ", "rotation"}], "}"}]}]}], 
               "}"}]}], ",", "\n", "                ", 
             RowBox[{"GeoBackground", " ", "\[Rule]", " ", 
              RowBox[{"GeoStyling", "[", "\"\<StreetMap\>\"", "]"}]}], ",", 
             " ", "\n", "                ", 
             RowBox[{
             "GeoServer", " ", "\[Rule]", " ", 
              "\"\<http://mt0.google.com/vt/lyrs=s,h&x=`2`&y=`3`&z=`1`\>\""}]}\
], "]"}], "]"}]}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
      RowBox[{"EqualizeImages", "[", 
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ImageForCell", "[", 
             RowBox[{"#", ",", " ", "30.0"}], "]"}], " ", "&"}], ",", " ", 
           "cityParts"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ImageForCell", "[", 
             RowBox[{"#", ",", " ", "45.0"}], "]"}], " ", "&"}], ",", " ", 
           "cityParts"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ImageForCell", "[", 
             RowBox[{"#", ",", " ", "90.0"}], "]"}], " ", "&"}], ",", " ", 
           "cityParts"}], "]"}]}], "\n", "\t", "]"}], "]"}]}]}], "\n", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportSatellites", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"CityDataPath", "[", 
      RowBox[{"constantPathSatellites", ",", " ", "city"}], "]"}], ",", 
     RowBox[{"ExtractSatellites", "[", "city", "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportSatellites", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"CityDataPath", "[", 
     RowBox[{"constantPathSatellites", ",", " ", "city"}], "]"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7716037334248238`*^9, 3.771603763020352*^9}, {
   3.771603881125678*^9, 3.771603882562314*^9}, {3.771604351561441*^9, 
   3.771604362272173*^9}, {3.771604462858472*^9, 3.771604465769896*^9}, {
   3.771605111366535*^9, 3.7716051235802097`*^9}, {3.771618696238031*^9, 
   3.771618737002274*^9}, {3.7716190984180727`*^9, 3.771619167787113*^9}, {
   3.771619230094412*^9, 3.7716193140816317`*^9}, {3.7716194420009613`*^9, 
   3.7716194491737347`*^9}, 3.771619497044444*^9, {3.771619699793701*^9, 
   3.771619711850318*^9}, {3.7716203262336597`*^9, 3.771620356834854*^9}, {
   3.771673684187669*^9, 3.771673685879765*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"2be1d42f-5581-456f-be78-898b6ec8f702"]
}, Closed]],

Cell[CellGroupData[{

Cell["Features Extraction", "Subsection",
 CellChangeTimes->{{3.771712806183819*^9, 
  3.77171284384868*^9}},ExpressionUUID->"1b2b8bb4-d2fd-410a-8140-\
48381fbfbec1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExtractGDPs", "[", "cities_List", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "countries", "}"}], ",", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"countries", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", "\"\<Country\>\"", "]"}], " ", "&"}], ",", " ", 
         "cities"}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"cities", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<Population\>\"", "]"}],
            "*", 
           RowBox[{
            RowBox[{
             RowBox[{"countries", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<GDP\>\"", "]"}], "/", 
            
            RowBox[{
             RowBox[{"countries", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "[", "\"\<Population\>\"", 
             "]"}]}]}], ")"}], " ", "&"}], ",", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "cities", "]"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.771764690387433*^9, 3.771764698943687*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"da03acf0-69af-4588-bcd3-0685c4ed768e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractListFeatures", "[", 
    RowBox[{"object_", ",", " ", "props_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{"#", ",", " ", 
          RowBox[{"Normal", "[", 
           RowBox[{"object", "[", "#", "]"}], "]"}]}], "}"}], ")"}], " ", 
       "&"}], ",", " ", "props"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractCityStatsFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "props", "}"}], ",", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"props", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
        "\"\<Population\>\"", ",", "\"\<Latitude\>\"", ",", 
         "\"\<Longitude\>\"", ",", "\"\<Elevation\>\"", ",", 
         "\"\<MagneticFieldStrength\>\""}], "\n", "\t", "}"}]}], ";", "\n", 
      "\t", 
      RowBox[{"Association", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"AssociationFromPair", ",", " ", 
         RowBox[{"ExtractListFeatures", "[", 
          RowBox[{"city", ",", " ", "props"}], "]"}]}], "]"}], "]"}]}]}], 
    "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractCountryStatsFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
      "props", ",", " ", "country", ",", " ", "\n", "\t\t", 
       "countryPopulation", ",", " ", "countryArea", ",", " ", "\n", "\t\t", 
       "propsToNormalizeWPopulation", ",", " ", "propsToNormalizeWArea", ",", 
       "\n", "\t\t", "pairsList"}], "\n", "\t", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"country", " ", "=", " ", 
       RowBox[{"city", "[", "\"\<Country\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"countryArea", " ", "=", " ", 
       RowBox[{"country", "[", "\"\<Area\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"countryPopulation", " ", "=", " ", 
       RowBox[{"country", "[", "\"\<Population\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"props", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
        "\"\<Population\>\"", ",", "\"\<Latitude\>\"", ",", 
         "\"\<Longitude\>\"", ",", "\n", "\t\t", "\"\<Area\>\"", ",", 
         "\"\<WaterArea\>\"", ",", "\"\<BoundaryLength\>\"", ",", 
         "\"\<CoastlineLength\>\"", ",", "\"\<WaterwayLength\>\"", ",", "\n", 
         "\t\t", "\"\<ContributingFamilyWorkers\>\"", ",", "\n", "\t\t", 
         "\"\<GDPPerPersonEmployed\>\"", ",", "\"\<GiniIndex\>\"", ",", 
         "\"\<InterestRateSpread\>\"", ",", "\"\<PovertyHeadcount\>\"", ",", 
         "\"\<UnemploymentRate\>\"", ",", "\n", "\t\t", "\"\<BookTitles\>\"", 
         ",", "\"\<IlliteracyFraction\>\"", ",", "\n", "\t\t", "\n", "\t\t", 
         "\"\<MaleLifeExpectancy\>\"", ",", "\"\<MaleMedianAge\>\"", ",", 
         "\"\<FemaleLifeExpectancy\>\"", ",", "\"\<FemaleMedianAge\>\"", ",", 
         "\n", "\t\t", "\"\<HospitalBedsPer10000Population\>\""}], "\n", "\t",
         "}"}]}], ";", "\n", "\t", 
      RowBox[{"propsToNormalizeWArea", " ", "=", " ", 
       RowBox[{"{", " ", "}"}]}], ";", "\n", "\t", 
      RowBox[{"propsToNormalizeWPopulation", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
        "\"\<Army\>\"", ",", "\"\<HIVAIDSPopulation\>\"", ",", 
         "\"\<ElectricityTotal\>\"", ",", "\n", "\t\t", 
         "\"\<ChildPopulation\>\"", ",", "\"\<ElderlyPopulation\>\"", ",", 
         "\"\<AnnualMarriages\>\"", ",", "\"\<AnnualDivorces\>\"", ",", "\n", 
         "\t\t", "\"\<NetIncomeFromAbroad\>\"", ",", "\"\<GovernmentDebt\>\"",
          ",", "\"\<GovernmentSurplus\>\"", ",", "\"\<ImportsValue\>\"", ",", 
         "\"\<ExportsValue\>\"", ",", "\n", "\t\t", "\"\<LeisureArrivals\>\"",
          ",", "\"\<NewspaperTitles\>\""}], "\n", "\t", "}"}]}], ";", "\n", 
      "\t", 
      RowBox[{"pairsList", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"ExtractListFeatures", "[", 
          RowBox[{"country", ",", " ", "props"}], "]"}], ",", " ", "\n", 
         "\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                " ", "/", " ", "countryArea"}]}], "}"}], ")"}], " ", "&"}], 
           ",", " ", 
           RowBox[{"ExtractListFeatures", "[", 
            RowBox[{"country", ",", " ", "propsToNormalizeWArea"}], "]"}]}], 
          "]"}], ",", "\n", "\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                " ", "/", " ", "countryPopulation"}]}], "}"}], ")"}], " ", 
            "&"}], ",", " ", 
           RowBox[{"ExtractListFeatures", "[", 
            RowBox[{"country", ",", " ", "propsToNormalizeWPopulation"}], 
            "]"}]}], "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"pairsList", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"StringJoin", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<Country\>\"", ",", " ", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                "}"}], "]"}], ",", " ", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "}"}], ")"}], " ", "&"}], ",", " ", "pairsList"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"Association", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"AssociationFromPair", ",", " ", "pairsList"}], "]"}], 
       "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractMapFeaturesFromPixels", "[", "city_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "imgQuantized", ",", " ", "pixelsList", ",", " ", "freqOfColors", ",", 
       " ", "imgMerged"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"imgMerged", " ", "=", " ", 
       RowBox[{"MapReconstructFromImages", "[", 
        RowBox[{"ImportMaps", "[", "city", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"imgQuantized", " ", "=", " ", 
       RowBox[{"RemoveAlphaChannel", "[", 
        RowBox[{"ColorQuantize", "[", 
         RowBox[{"imgMerged", ",", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"ColorMake", ",", " ", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Values", "[", "constantColorsPerPurpose", "]"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}]}], "]"}]}], "]"}],
         "]"}]}], ";", "\n", "\t", 
      RowBox[{"pixelsList", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"imgQuantized", ",", " ", "\"\<Byte\>\""}], "]"}], ",", " ",
          "1"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"freqOfColors", " ", "=", " ", 
       RowBox[{"AssociationMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"ColorsFindInImage", "[", 
              RowBox[{"pixelsList", ",", " ", 
               RowBox[{"constantColorsPerPurpose", "[", "#", "]"}]}], "]"}], 
             "]"}], " ", "/", " ", 
            RowBox[{"Length", "[", "pixelsList", "]"}]}], ")"}], " ", "&"}], 
         ",", " ", 
         RowBox[{"Keys", "[", "constantColorsPerPurpose", "]"}]}], "]"}]}], 
      ";", "\n", "\t", "freqOfColors"}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractMapFeaturesFromOSM", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cityBounds", ",", " ", "osmData", ",", " ", "osmNodes", ",", " ", 
       "osmWays", ",", " ", "parsedWays", ",", " ", "graphWays"}], "}"}], ",",
      "\n", "\t", 
     RowBox[{
      RowBox[{"cityBounds", " ", "=", " ", 
       RowBox[{"GeoBoundingBox", "[", 
        RowBox[{
         RowBox[{"GeoPosition", "[", "city", "]"}], ",", 
         RowBox[{"Quantity", "[", 
          RowBox[{"0.5", ",", " ", "\"\<Kilometers\>\""}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"osmData", " ", "=", " ", 
       RowBox[{
        RowBox[{"ResourceFunction", "[", "\"\<OSMImport\>\"", "]"}], "[", 
        "cityBounds", "]"}]}], ";", "\n", "\t", 
      RowBox[{"osmNodes", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"#", ",", " ", "\"\<Position\>\""}], "]"}], " ", "&"}], 
         ",", " ", 
         RowBox[{"osmData", "[", "\"\<Nodes\>\"", "]"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"osmWays", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"osmNodes", ",", " ", 
            RowBox[{"Lookup", "[", 
             RowBox[{"#", ",", " ", "\"\<Nodes\>\""}], "]"}]}], "]"}], " ", 
          "&"}], ",", " ", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"osmData", "[", "\"\<Ways\>\"", "]"}], ",", " ", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Keys", "[", "#Tags", "]"}], ",", "\"\<highway\>\""}], 
             "]"}], " ", "&"}]}], "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"parsedWays", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"UndirectedEdge", "@@@", 
            RowBox[{"Partition", "[", 
             RowBox[{"#", ",", "2", ",", "1"}], "]"}]}], " ", "&"}], ",", " ", 
          RowBox[{"Values", "[", "osmWays", "]"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"graphWays", " ", "=", " ", 
       RowBox[{"Graph", "[", "parsedWays", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Association", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<MeanNeighborDegree\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"MeanNeighborDegree", "[", "graphWays", "]"}], "]"}]}], 
         ",", "\n", "\t\t", 
         RowBox[{"\"\<DegreeCentrality\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"DegreeCentrality", "[", "graphWays", "]"}], "]"}]}], ",", 
         "\n", "\t\t", 
         RowBox[{"\"\<ClosenessCentrality\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"ClosenessCentrality", "[", "graphWays", "]"}], "]"}]}]}], 
        "\n", "\t", "}"}], "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.7711017038951178`*^9}, {3.771101737640126*^9, 
   3.771101738955223*^9}, {3.771102348054689*^9, 3.771102377179801*^9}, {
   3.771151297276696*^9, 3.7711513406172113`*^9}, {3.771165996818695*^9, 
   3.771166090601877*^9}, {3.771166173108506*^9, 3.771166257114065*^9}, {
   3.7711663793332567`*^9, 3.7711664011443663`*^9}, {3.771166487336176*^9, 
   3.771166493613332*^9}, {3.771166547031842*^9, 3.771166548165827*^9}, {
   3.771166600953315*^9, 3.771166683297266*^9}, {3.7711667286702223`*^9, 
   3.771166759409555*^9}, {3.771166813508647*^9, 3.77116686156734*^9}, {
   3.771166913675415*^9, 3.771166915031599*^9}, {3.771167002660701*^9, 
   3.7711670324128647`*^9}, {3.771167084473464*^9, 3.771167085469692*^9}, {
   3.771167137989037*^9, 3.77116714854849*^9}, {3.7711966071075907`*^9, 
   3.771196664810173*^9}, {3.771196768138517*^9, 3.771196768956388*^9}, {
   3.7711972557665977`*^9, 3.771197296014269*^9}, {3.771197339836514*^9, 
   3.7711973411966457`*^9}, {3.771197432374444*^9, 3.771197524940136*^9}, {
   3.7711976763793087`*^9, 3.771197702854021*^9}, {3.771197803674632*^9, 
   3.7711979369634132`*^9}, {3.771197967398962*^9, 3.7711980033990593`*^9}, {
   3.7712540825875387`*^9, 3.7712541780295067`*^9}, {3.771254335770904*^9, 
   3.771254359501605*^9}, 3.771254530905891*^9, {3.771254785393812*^9, 
   3.771254808272388*^9}, {3.771255275230245*^9, 3.7712553239167128`*^9}, 
   3.771255878153738*^9, {3.771329391567483*^9, 3.771329411248989*^9}, {
   3.771329565046358*^9, 3.771329572203886*^9}, {3.771496168448968*^9, 
   3.7714962036277237`*^9}, {3.7714962447300997`*^9, 3.771496245963435*^9}, {
   3.771496311404038*^9, 3.771496321537601*^9}, {3.771496373822885*^9, 
   3.7714965489266853`*^9}, {3.771496600537525*^9, 3.771496657002174*^9}, {
   3.771496740056799*^9, 3.7714967412281446`*^9}, {3.7714967773729877`*^9, 
   3.771496816005433*^9}, {3.7714968682908154`*^9, 3.7714968697917128`*^9}, {
   3.771496918369812*^9, 3.7714969345000267`*^9}, {3.77149704823771*^9, 
   3.771497049699279*^9}, {3.771531573462158*^9, 3.7715316783804092`*^9}, {
   3.7715317921088057`*^9, 3.7715319320398483`*^9}, {3.771532053822135*^9, 
   3.771532068932446*^9}, {3.77160369579909*^9, 3.771603699299447*^9}, {
   3.771622717254788*^9, 3.771622744597303*^9}, {3.771622792645124*^9, 
   3.771622866807831*^9}, {3.771622943162854*^9, 3.771622977854175*^9}, {
   3.771623095313883*^9, 3.7716231559729*^9}, 3.771626854648131*^9, {
   3.7716699227396383`*^9, 3.771670136223054*^9}, {3.771670237325835*^9, 
   3.7716702494329853`*^9}, 3.771671175991432*^9, {3.771672127947584*^9, 
   3.771672150478457*^9}, {3.771672230501935*^9, 3.771672268757731*^9}, {
   3.771672315778051*^9, 3.771672366662242*^9}, {3.771672450181912*^9, 
   3.771672518746067*^9}, {3.7716728138915873`*^9, 3.7716728561259413`*^9}, {
   3.771673120085889*^9, 3.7716731965682497`*^9}, 3.771673311335342*^9, {
   3.7716733760174026`*^9, 3.7716734371914263`*^9}, 3.7716736642268753`*^9, {
   3.771673816967555*^9, 3.7716738200197077`*^9}, 3.7716738956763563`*^9, {
   3.771692271635406*^9, 3.771692289122738*^9}, {3.771692328660396*^9, 
   3.771692350779047*^9}, {3.771692435092806*^9, 3.771692466505422*^9}, {
   3.771692537906076*^9, 3.771692624393091*^9}, {3.771692775661364*^9, 
   3.771692789217929*^9}, {3.771692830199643*^9, 3.771692844244501*^9}, {
   3.7716929864537773`*^9, 3.771692987704947*^9}, {3.771693176982716*^9, 
   3.771693223617131*^9}, 3.771693304109569*^9, {3.771693405997867*^9, 
   3.771693411843594*^9}, {3.7716934485301933`*^9, 3.771693487163294*^9}, {
   3.771693563974257*^9, 3.771693605802772*^9}, {3.771693686709693*^9, 
   3.7716936883943577`*^9}, {3.771693815631466*^9, 3.771693817772654*^9}, {
   3.7716940022647877`*^9, 3.771694008168648*^9}, {3.771695318872908*^9, 
   3.7716953200695953`*^9}, {3.771713377771394*^9, 3.771713378574774*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"ce916f56-0286-4291-9303-f08a2c807b22"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Features Post-processing", "Subsection",
 CellChangeTimes->{{3.771713394794116*^9, 3.7717134031528187`*^9}, 
   3.771713690868705*^9},ExpressionUUID->"fcac805f-54fc-4ed9-8bb5-\
df26b8e9ddb1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractAllFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Merge", "[", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"ExtractCityStatsFeatures", "[", "city", "]"}], ",", " ", 
       RowBox[{"ExtractCountryStatsFeatures", "[", "city", "]"}], ",", " ", 
       "\n", "\t", 
       RowBox[{"ExtractMapFeaturesFromPixels", "[", "city", "]"}], ",", " ", 
       RowBox[{"ExtractMapFeaturesFromOSM", "[", "city", "]"}]}], "\n", "\t", 
      "}"}], ",", " ", "Total"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportAllFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"CityDataPath", "[", 
      RowBox[{"constantPathFeatures", ",", " ", "city"}], "]"}], ",", " ", 
     RowBox[{"ExtractAllFeatures", "[", "city", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportAllFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"CityDataPath", "[", 
     RowBox[{"constantPathFeatures", ",", " ", "city"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportAllFeaturesClean", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"raw", ",", " ", "keys", ",", " ", "vals"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"raw", " ", "=", " ", 
       RowBox[{"ImportAllFeatures", "[", "city", "]"}]}], ";", "\n", "\t", 
      RowBox[{"keys", " ", "=", " ", 
       RowBox[{"Keys", "[", "raw", "]"}]}], ";", "\n", "\t", 
      RowBox[{"vals", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"NomalizeNumber", "[", "#", "]"}], "]"}], " ", "&"}], ",", 
         " ", 
         RowBox[{"Values", "[", "raw", "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"AssociationsFromPair", "[", 
       RowBox[{"keys", ",", " ", "vals"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NormalizeFeatures", "[", "rowsPerSample_List", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rowsPerFeature", ",", " ", "rowsPerFeatureNormalized"}], "}"}],
      ",", "\n", "\t", 
     RowBox[{
      RowBox[{"rowsPerFeature", " ", "=", " ", 
       RowBox[{"Transpose", "[", "rowsPerSample", "]"}]}], ";", "\n", "\t", 
      RowBox[{"rowsPerFeatureNormalized", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"RescaleIntoInterval", ",", " ", "rowsPerFeature"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Transpose", "[", "rowsPerFeatureNormalized", "]"}]}]}], "\n", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"PrepareFeaturesAndNames", "[", "cities_List", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "citiesFeatures", ",", " ", "citiesFeaturesValues", ",", " ", 
       "citiesFeaturesNames"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"citiesFeatures", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ImportAllFeaturesClean", "[", "#", "]"}], " ", "&"}], ",", 
         " ", "cities"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"citiesFeaturesValues", " ", "=", " ", 
       RowBox[{"NormalizeFeatures", "[", 
        RowBox[{"Values", "[", 
         RowBox[{
         "citiesFeatures", "\[LeftDoubleBracket]", "All", 
          "\[RightDoubleBracket]"}], "]"}], "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"Transform", " ", "units", " ", "into", " ", "raw", " ", 
        RowBox[{"numbers", "."}]}], "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"citiesFeaturesNames", " ", "=", " ", 
       RowBox[{"First", "[", 
        RowBox[{"Keys", "[", 
         RowBox[{
         "citiesFeatures", "\[LeftDoubleBracket]", "All", 
          "\[RightDoubleBracket]"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"citiesFeaturesValues", ",", "  ", "citiesFeaturesNames"}], 
       "}"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.7711017038951178`*^9}, {3.771101737640126*^9, 
   3.771101738955223*^9}, {3.771102348054689*^9, 3.771102377179801*^9}, {
   3.771151297276696*^9, 3.7711513406172113`*^9}, {3.771165996818695*^9, 
   3.771166090601877*^9}, {3.771166173108506*^9, 3.771166257114065*^9}, {
   3.7711663793332567`*^9, 3.7711664011443663`*^9}, {3.771166487336176*^9, 
   3.771166493613332*^9}, {3.771166547031842*^9, 3.771166548165827*^9}, {
   3.771166600953315*^9, 3.771166683297266*^9}, {3.7711667286702223`*^9, 
   3.771166759409555*^9}, {3.771166813508647*^9, 3.77116686156734*^9}, {
   3.771166913675415*^9, 3.771166915031599*^9}, {3.771167002660701*^9, 
   3.7711670324128647`*^9}, {3.771167084473464*^9, 3.771167085469692*^9}, {
   3.771167137989037*^9, 3.77116714854849*^9}, {3.7711966071075907`*^9, 
   3.771196664810173*^9}, {3.771196768138517*^9, 3.771196768956388*^9}, {
   3.7711972557665977`*^9, 3.771197296014269*^9}, {3.771197339836514*^9, 
   3.7711973411966457`*^9}, {3.771197432374444*^9, 3.771197524940136*^9}, {
   3.7711976763793087`*^9, 3.771197702854021*^9}, {3.771197803674632*^9, 
   3.7711979369634132`*^9}, {3.771197967398962*^9, 3.7711980033990593`*^9}, {
   3.7712540825875387`*^9, 3.7712541780295067`*^9}, {3.771254335770904*^9, 
   3.771254359501605*^9}, 3.771254530905891*^9, {3.771254785393812*^9, 
   3.771254808272388*^9}, {3.771255275230245*^9, 3.7712553239167128`*^9}, 
   3.771255878153738*^9, {3.771329391567483*^9, 3.771329411248989*^9}, {
   3.771329565046358*^9, 3.771329572203886*^9}, {3.771496168448968*^9, 
   3.7714962036277237`*^9}, {3.7714962447300997`*^9, 3.771496245963435*^9}, {
   3.771496311404038*^9, 3.771496321537601*^9}, {3.771496373822885*^9, 
   3.7714965489266853`*^9}, {3.771496600537525*^9, 3.771496657002174*^9}, {
   3.771496740056799*^9, 3.7714967412281446`*^9}, {3.7714967773729877`*^9, 
   3.771496816005433*^9}, {3.7714968682908154`*^9, 3.7714968697917128`*^9}, {
   3.771496918369812*^9, 3.7714969345000267`*^9}, {3.77149704823771*^9, 
   3.771497049699279*^9}, {3.771531573462158*^9, 3.7715316783804092`*^9}, {
   3.7715317921088057`*^9, 3.7715319320398483`*^9}, {3.771532053822135*^9, 
   3.771532068932446*^9}, {3.77160369579909*^9, 3.771603699299447*^9}, {
   3.771622717254788*^9, 3.771622744597303*^9}, {3.771622792645124*^9, 
   3.771622866807831*^9}, {3.771622943162854*^9, 3.771622977854175*^9}, {
   3.771623095313883*^9, 3.7716231559729*^9}, 3.771626854648131*^9, {
   3.7716699227396383`*^9, 3.771670136223054*^9}, {3.771670237325835*^9, 
   3.7716702494329853`*^9}, 3.771671175991432*^9, {3.771672127947584*^9, 
   3.771672150478457*^9}, {3.771672230501935*^9, 3.771672268757731*^9}, {
   3.771672315778051*^9, 3.771672366662242*^9}, {3.771672450181912*^9, 
   3.771672518746067*^9}, {3.7716728138915873`*^9, 3.7716728561259413`*^9}, {
   3.771673120085889*^9, 3.7716731965682497`*^9}, 3.771673311335342*^9, {
   3.7716733760174026`*^9, 3.7716734371914263`*^9}, 3.7716736642268753`*^9, {
   3.771673816967555*^9, 3.7716738200197077`*^9}, 3.7716738956763563`*^9, {
   3.771692271635406*^9, 3.771692289122738*^9}, {3.771692328660396*^9, 
   3.771692350779047*^9}, {3.771692435092806*^9, 3.771692466505422*^9}, {
   3.771692537906076*^9, 3.771692624393091*^9}, {3.771692775661364*^9, 
   3.771692789217929*^9}, {3.771692830199643*^9, 3.771692844244501*^9}, {
   3.7716929864537773`*^9, 3.771692987704947*^9}, {3.771693176982716*^9, 
   3.771693223617131*^9}, 3.771693304109569*^9, {3.771693405997867*^9, 
   3.771693411843594*^9}, {3.7716934485301933`*^9, 3.771693487163294*^9}, {
   3.771693563974257*^9, 3.771693605802772*^9}, {3.771693686709693*^9, 
   3.7716936883943577`*^9}, {3.771693815631466*^9, 3.771693817772654*^9}, {
   3.7716940022647877`*^9, 3.771694008168648*^9}, {3.771695318872908*^9, 
   3.7716953200695953`*^9}, {3.771713377771394*^9, 3.771713382128508*^9}, {
   3.771754204990697*^9, 3.7717543294984083`*^9}, {3.7717544258967943`*^9, 
   3.771754427074813*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"035f3fac-5785-4fb6-8252-b10aea312ea8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Automation", "Subsection",
 CellChangeTimes->{{3.7717128644990253`*^9, 3.771712885481298*^9}, 
   3.7717136962139387`*^9},ExpressionUUID->"3b7d840d-c9fe-49f1-92fe-\
dd9a50ebd8f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DownloadDataNeeded", "[", 
    RowBox[{"city_", ",", " ", "loadMaps_", ",", " ", "loadSatellites_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Echo", "[", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"\"\<Processing city \>\"", ",", " ", 
         RowBox[{"CityName", "[", "city", "]"}]}], "]"}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", 
          RowBox[{"CityDataPath", "[", 
           RowBox[{"constantPathTweets", ",", " ", "city"}], "]"}], "]"}]}], 
        ",", " ", 
        RowBox[{"ExportTweets", "[", "city", "]"}], ",", " ", "Nothing"}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FileExistsQ", "[", 
           RowBox[{"CityDataPath", "[", 
            RowBox[{"constantPathMaps", ",", " ", "city"}], "]"}], "]"}]}], 
         " ", "&&", " ", 
         RowBox[{"loadMaps", " ", "\[Equal]", " ", "True"}]}], ",", " ", 
        RowBox[{"ExportMaps", "[", "city", "]"}], ",", " ", "Nothing"}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FileExistsQ", "[", 
           RowBox[{"CityDataPath", "[", 
            RowBox[{"constantPathSatellites", ",", " ", "city"}], "]"}], 
           "]"}]}], " ", "&&", " ", 
         RowBox[{"loadSatellites", " ", "\[Equal]", " ", "True"}]}], ",", " ", 
        RowBox[{"ExportSatellites", "[", "city", "]"}], ",", " ", "Nothing"}],
        "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", 
          RowBox[{"CityDataPath", "[", 
           RowBox[{"constantPathFeatures", ",", " ", "city"}], "]"}], "]"}]}],
         ",", " ", 
        RowBox[{"ExportAllFeatures", "[", "city", "]"}], ",", " ", 
        "Nothing"}], "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7714486731894703`*^9, 3.771448746390979*^9}, {
   3.771454070202355*^9, 3.7714541042189007`*^9}, {3.771454145635871*^9, 
   3.7714541708185663`*^9}, {3.771531491849868*^9, 3.771531493954137*^9}, {
   3.771620391630314*^9, 3.771620417772552*^9}, {3.771620757115899*^9, 
   3.771620807232101*^9}, 3.771673776030848*^9, {3.771674120726346*^9, 
   3.771674129414414*^9}, {3.771683495381939*^9, 3.771683495665181*^9}, {
   3.771760387463307*^9, 3.771760387565647*^9}, {3.771760484952683*^9, 
   3.771760501660007*^9}, {3.771760553024309*^9, 3.771760586775896*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"b390a3c8-0279-4919-a9b9-ecf0cf3957f6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   StyleBox[
    RowBox[{"tw", " ", "=", " ", 
     RowBox[{"ServiceConnect", "[", "\"\<Twitter\>\"", "]"}]}], "Code"], 
   StyleBox[";", "Code"], "\n", 
   RowBox[{"ClearSystemCache", "[", "]"}], ";", "\n", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DownloadDataNeeded", "[", 
       RowBox[{"#", ",", " ", "True", ",", " ", "True"}], "]"}], " ", "&"}], 
     ",", " ", "citiesPopular"}], "]"}], ";", "\n", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DownloadDataNeeded", "[", 
       RowBox[{"#", ",", " ", "True", ",", " ", "False"}], "]"}], " ", "&"}], 
     ",", " ", "citiesUnpopular"}], "]"}], ";"}], "*)"}]], "Code",
 CellChangeTimes->{{3.7714541818692417`*^9, 3.7714541855013533`*^9}, {
   3.771495717530364*^9, 3.7714957234432993`*^9}, {3.771585795840542*^9, 
   3.771585798253406*^9}, {3.7716709064736547`*^9, 3.771670909272904*^9}, {
   3.771674109863604*^9, 3.7716741413335667`*^9}, {3.771690331972289*^9, 
   3.771690337584732*^9}, {3.7717605111647377`*^9, 3.771760542486782*^9}, {
   3.771760588589705*^9, 3.7717605930891247`*^9}, 3.771762709282834*^9, {
   3.771762849956717*^9, 3.771762850795025*^9}, {3.771775130345758*^9, 
   3.7717751354890127`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"c766c488-b0f2-40dd-b6b0-55ce54d425cf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["What can be predicted with Twitter?", "Section",
 CellChangeTimes->{{3.7717129018593807`*^9, 3.771712925728685*^9}, {
  3.771713296165682*^9, 
  3.771713308642982*^9}},ExpressionUUID->"1720891f-8e04-46f0-8ae9-\
4c3257b2a22a"],

Cell[CellGroupData[{

Cell["Estimating Sentiment", "Subsection",
 CellChangeTimes->{{3.771712584921867*^9, 3.771712591179371*^9}, {
  3.771713240508605*^9, 
  3.771713267417141*^9}},ExpressionUUID->"cd86ce5d-5f3d-4938-a2ae-\
9d0f8a94ab58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EstimateSentimentWL", "[", "sentence_String", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "probs", ",", " ", "pPos", ",", " ", "pNeu", ",", " ", "pNeg", ",", " ",
        "resultPositivness", ",", " ", "resultCertainity"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"probs", " ", "=", " ", 
       RowBox[{"Classify", "[", 
        RowBox[{
        "\"\<Sentiment\>\"", ",", " ", "sentence", ",", " ", 
         "\"\<Probabilities\>\""}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"pPos", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"probs", ",", " ", "\"\<Positive\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"pNeu", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"probs", ",", " ", "\"\<Neutral\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"pNeg", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"probs", ",", " ", "\"\<Negative\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"resultPositivness", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"pPos", " ", "+", " ", 
         RowBox[{"pNeu", " ", "*", " ", "0.5"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"resultCertainity", " ", "=", " ", 
       RowBox[{"Max", "[", "probs", "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"{", 
       RowBox[{"resultPositivness", ",", "resultCertainity"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EstimateSentiments", "[", 
    RowBox[{"sentences_", ",", " ", "func_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"#", ",", " ", 
         RowBox[{"func", "[", "#", "]"}]}], "}"}], ")"}], " ", "&"}], ",", 
     " ", "sentences"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EstimateSentiments", "[", "sentences_", "]"}], " ", ":=", " ", 
   RowBox[{"EstimateSentiments", "[", 
    RowBox[{"sentences", ",", " ", "EstimateSentimentWL"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EstimateQualityOfLifeWSentiment", "[", "data_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sentences", ",", " ", "tweetsWSentiments", ",", " ", 
       "sentimentsWCertainity", ",", " ", "meanPositivness", ",", " ", 
       "meanCertainty"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"sentences", " ", "=", " ", 
       RowBox[{"data", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", " ", "\"\<Text\>\""}], 
        "\[RightDoubleBracket]"}]}], ";", "\n", "\t", 
      RowBox[{"tweetsWSentiments", " ", "=", " ", 
       RowBox[{"EstimateSentiments", "[", "sentences", "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"sentimentsWCertainity", " ", "=", " ", 
       RowBox[{"tweetsWSentiments", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"meanPositivness", " ", "=", " ", 
       RowBox[{"MeanAround", "[", 
        RowBox[{"sentimentsWCertainity", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"meanCertainty", " ", "=", " ", 
       RowBox[{"MeanAround", "[", 
        RowBox[{"sentimentsWCertainity", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"meanPositivness", ",", " ", "meanCertainty"}], "}"}]}]}], 
    "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101723293976*^9}, {3.7711024759486427`*^9, 
   3.771102595812048*^9}, 3.771102630105879*^9, {3.771102663030601*^9, 
   3.771102675942957*^9}, {3.771102819347427*^9, 3.771102841217803*^9}, {
   3.7711492274460793`*^9, 3.771149259526984*^9}, {3.7711494968232927`*^9, 
   3.771149500439412*^9}, 3.7711495391273327`*^9, {3.77125210524156*^9, 
   3.7712521814760447`*^9}, {3.771252249246994*^9, 3.771252279427402*^9}, {
   3.7712523472315397`*^9, 3.771252349510272*^9}, {3.7713308537177467`*^9, 
   3.771330854042081*^9}, {3.771351310412696*^9, 3.771351311048148*^9}, {
   3.771352532684317*^9, 3.771352549949391*^9}, {3.771356337886156*^9, 
   3.771356338115733*^9}, {3.7714467936655684`*^9, 3.7714468327252817`*^9}, {
   3.7714477080950613`*^9, 3.771447709078145*^9}, {3.771447785236917*^9, 
   3.771447786651771*^9}, {3.771447949999405*^9, 3.7714479501103563`*^9}, {
   3.771453850679749*^9, 3.771453858089093*^9}, {3.7714943916639833`*^9, 
   3.771494395261273*^9}, {3.771603230447397*^9, 3.771603276204214*^9}, {
   3.77162270325916*^9, 3.771622703769059*^9}, {3.7716720354592876`*^9, 
   3.7716720953478203`*^9}, {3.771672415887467*^9, 3.771672441238475*^9}, {
   3.771672951222991*^9, 3.771672957381604*^9}, {3.7716730265330887`*^9, 
   3.771673027357678*^9}, {3.771673226849732*^9, 3.771673231141677*^9}, {
   3.771673519358794*^9, 3.7716736310995073`*^9}, {3.771691685199237*^9, 
   3.771691693779365*^9}, {3.771691831795059*^9, 3.771691867469315*^9}, {
   3.771691971381495*^9, 3.77169197881502*^9}, {3.771692016649796*^9, 
   3.771692046537582*^9}, {3.771692397520424*^9, 3.7716923999690723`*^9}, {
   3.771692660468504*^9, 3.771692762738967*^9}, {3.7716928504906797`*^9, 
   3.7716928766927843`*^9}, {3.771693062356737*^9, 3.771693078588234*^9}, {
   3.771693618478825*^9, 3.771693675965167*^9}, {3.771693772415101*^9, 
   3.771693808300001*^9}, {3.7716938646087313`*^9, 3.7716938728069553`*^9}, {
   3.7716939585609303`*^9, 3.771693982168026*^9}, {3.771695280962672*^9, 
   3.771695307549501*^9}, {3.771710127577561*^9, 3.771710130111709*^9}, {
   3.771711669963105*^9, 3.771711677464121*^9}, 
   3.771712581117927*^9},ExpressionUUID->"20961709-7c7a-45d4-a981-\
9ac2574c6877"]
}, Closed]],

Cell[CellGroupData[{

Cell["Comparing the cities", "Subsection",
 CellChangeTimes->{{3.771713496163478*^9, 
  3.771713500279092*^9}},ExpressionUUID->"7fff9ec0-f5cd-48b7-95b6-\
dc9d704181e7"],

Cell["\<\
Once we collect the data from Twitter, we want to see how the \
\>", "Text",
 CellChangeTimes->{{3.771250972015732*^9, 3.771250985754189*^9}, {
  3.771251369189413*^9, 
  3.7712513838841467`*^9}},ExpressionUUID->"13349771-2cbd-4640-86e0-\
2a496adaad4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tweetsPerCity", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"ImportTweets", ",", " ", "citiesPopular"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesEstimates", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"EstimateQualityOfLifeWSentiment", ",", " ", "tweetsPerCity"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesCertainties", " ", "=", " ", 
   RowBox[{"RescaleIntoInterval", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "[", "\"\<Value\>\"", "]"}], ")"}], " ", "&"}], ",", " ", 
      RowBox[{"citiesEstimates", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771105232661023*^9, 3.771105236965727*^9}, 
   3.771105343619289*^9, {3.7711053807205553`*^9, 3.771105391254448*^9}, {
   3.771148444770472*^9, 3.77114848020079*^9}, {3.77114867624708*^9, 
   3.7711487402579947`*^9}, {3.771148883971727*^9, 3.7711489144674997`*^9}, {
   3.771148997447256*^9, 3.7711492080155497`*^9}, {3.771149309499318*^9, 
   3.771149370219907*^9}, {3.771149482508939*^9, 3.771149521955628*^9}, {
   3.771150211561305*^9, 3.77115029995325*^9}, {3.7711505430475483`*^9, 
   3.771150609282713*^9}, {3.771150988266674*^9, 3.771150991458864*^9}, {
   3.771151028119976*^9, 3.771151057770471*^9}, {3.771163302479371*^9, 
   3.7711633359953957`*^9}, {3.7711635116575327`*^9, 
   3.7711635121821203`*^9}, {3.771163678045841*^9, 3.771163682514146*^9}, {
   3.771163773443185*^9, 3.771163774340561*^9}, 3.771198337174004*^9, {
   3.7711984782794237`*^9, 3.771198526204817*^9}, {3.771236837224044*^9, 
   3.771236854482362*^9}, {3.771236898953055*^9, 3.771236899145274*^9}, {
   3.7712369642273407`*^9, 3.771236972069683*^9}, {3.77123711843121*^9, 
   3.771237126588648*^9}, {3.7712372284663773`*^9, 3.7712372657079153`*^9}, {
   3.771237329811762*^9, 3.7712373529329977`*^9}, 3.771237395448209*^9, 
   3.7712509586175137`*^9, {3.771252292119206*^9, 3.7712522972388*^9}, {
   3.771352556865284*^9, 3.771352559235721*^9}, 3.771364499937711*^9, {
   3.771364603202607*^9, 3.7713646056179457`*^9}, {3.771453567368411*^9, 
   3.7714535761202927`*^9}, {3.771453655058641*^9, 3.771453658320343*^9}, {
   3.771453694224032*^9, 3.7714537221911077`*^9}, {3.771453768885117*^9, 
   3.771453825290695*^9}, {3.771494049186705*^9, 3.77149406487798*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"1ba0fedf-ebcf-47e3-8705-8f2f4c11ea50"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"citiesColors", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", " ", "0.2", ",", " ", "0.8", ",", " ", "#"}], 
       "]"}], " ", "&"}], ",", " ", "citiesCertainties"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesPositivnessFromTweets", " ", "=", " ", 
   RowBox[{"citiesEstimates", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\n", 
 RowBox[{"BarChart", "[", 
  RowBox[{"citiesPositivnessFromTweets", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{"CityName", ",", " ", "citiesPopular"}], "]"}]}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "citiesColors"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.771105232661023*^9, 3.771105236965727*^9}, 
   3.771105343619289*^9, {3.7711053807205553`*^9, 3.771105391254448*^9}, {
   3.771148444770472*^9, 3.77114848020079*^9}, {3.77114867624708*^9, 
   3.7711487402579947`*^9}, {3.771148883971727*^9, 3.7711489144674997`*^9}, {
   3.771148997447256*^9, 3.7711492080155497`*^9}, {3.771149309499318*^9, 
   3.771149370219907*^9}, {3.771149482508939*^9, 3.771149521955628*^9}, {
   3.771150211561305*^9, 3.77115029995325*^9}, {3.7711505430475483`*^9, 
   3.771150609282713*^9}, {3.771150988266674*^9, 3.771150991458864*^9}, {
   3.771151028119976*^9, 3.771151057770471*^9}, {3.771163302479371*^9, 
   3.7711633359953957`*^9}, {3.7711635116575327`*^9, 
   3.7711635121821203`*^9}, {3.771163678045841*^9, 3.771163682514146*^9}, {
   3.771163773443185*^9, 3.771163774340561*^9}, 3.771198337174004*^9, {
   3.7711984782794237`*^9, 3.771198526204817*^9}, {3.771236837224044*^9, 
   3.771236854482362*^9}, {3.771236898953055*^9, 3.771236899145274*^9}, {
   3.7712369642273407`*^9, 3.771236972069683*^9}, {3.77123711843121*^9, 
   3.771237126588648*^9}, {3.7712372284663773`*^9, 3.7712372657079153`*^9}, {
   3.771237329811762*^9, 3.7712373529329977`*^9}, 3.771237395448209*^9, 
   3.7712509586175137`*^9, {3.771252292119206*^9, 3.7712522972388*^9}, {
   3.771352556865284*^9, 3.771352559235721*^9}, 3.771364499937711*^9, {
   3.771364603202607*^9, 3.7713646056179457`*^9}, {3.771453567368411*^9, 
   3.7714535761202927`*^9}, {3.771453655058641*^9, 3.771453658320343*^9}, {
   3.771453694224032*^9, 3.7714537221911077`*^9}, {3.771453768885117*^9, 
   3.771453825290695*^9}, {3.771494049186705*^9, 3.771494079411756*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"dd94b0a0-2b74-462f-8d54-573d698ec4b3"],

Cell[BoxData[
 GraphicsBox[{{
    {Opacity[0], PointBox[{{0., -1.5}, {0., 100.5}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7176754314465787], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 0.5}, {0.7094780254912796, 1.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8279510201653612], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 1.5}, {0.6212207674326337, 2.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5858226737572596], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 2.5}, {0.6756641062959441, 3.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7814289899911246], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 3.5}, {0.6271725928863408, 4.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7481383163139589], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 4.5}, {0.6601309524686282, 5.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7692042146215119], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 5.5}, {0.6075730642972501, 6.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7327042772441816], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 6.5}, {0.596770622020753, 7.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8404387158825382], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 7.5}, {0.5771232505198457, 8.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8312557630917399], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 8.5}, {0.6228594834244057, 9.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6260961199901336], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 9.5}, {0.6152352433003037, 10.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5652934326911856], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 10.5}, {0.6421578707973884, 11.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7555854739895107], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 11.5}, {0.6081083005439462, 12.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.672642655021958], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 12.5}, {0.6119525994424226, 13.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6118940931807957], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 13.5}, {0.6258592853246716, 14.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6486521858581383], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 14.5}, {0.6144830048531488, 15.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7684505417702913], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 15.5}, {0.6556192762962432, 16.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8153390503569053], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 16.5}, {0.6560237091036722, 17.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7274560316754648], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 17.5}, {0.5904025661158773, 18.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7728082876660456], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 18.5}, {0.6179754290700187, 19.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6742572811121245], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 19.5}, {0.6187137861652968, 20.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5921630768565032], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 20.5}, {0.6692109538724832, 21.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7374151666926428], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 21.5}, {0.645390985328293, 22.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6195342056686642], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 22.5}, {0.5886012686753667, 23.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6725989818973247], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 23.5}, {0.5448160664477556, 24.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7913772216245962], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 24.5}, {0.6354121176869114, 25.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6401448961760818], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 25.5}, {0.6394968932809129, 26.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7184410608116257], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 26.5}, {0.579597980593741, 27.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7542241346663416], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 27.5}, {0.5989295024826079, 28.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7460133050581996], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 28.5}, {0.6619629406513258, 29.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7531623047682412], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 29.5}, {0.5827312202237238, 30.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6692408355294145], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 30.5}, {0.6118390321474525, 31.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.742632421619231], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 31.5}, {0.591228890984654, 32.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7929508183457274], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 32.5}, {0.6893609002730704, 33.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7949320958109738], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 33.5}, {0.6194426043074048, 34.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7469149591329476], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 34.5}, {0.6807395187456539, 35.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6836051160749707], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 35.5}, {0.6203486508741834, 36.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8477249347423831], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 36.5}, {0.6064128564217263, 37.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7407656316527769], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 37.5}, {0.6513873815366721, 38.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7352908639700706], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 38.5}, {0.6430268477412946, 39.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7063532001478714], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 39.5}, {0.5822887528259318, 40.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.740515442818265], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 40.5}, {0.7181963600080368, 41.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7004134452611186], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 41.5}, {0.5933273561474978, 42.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.742482340274929], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 42.5}, {0.6411733052568453, 43.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7477321635209921], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 43.5}, {0.6455747219833612, 44.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7364030307446516], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 44.5}, {0.6427329190005487, 45.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7711372358933629], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 45.5}, {0.7078756726789222, 46.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7767654036241787], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 46.5}, {0.6686434667623472, 47.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.64904303211438], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 47.5}, {0.6033673765841746, 48.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.700770727279793], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 48.5}, {0.6410998023559015, 49.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6190907426891815], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 49.5}, {0.6178391396997895, 50.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6943890910053617], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 50.5}, {0.6042482536796245, 51.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.740609838770277], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 51.5}, {0.6169263018799168, 52.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7581725625908038], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 52.5}, {0.6314432779959939, 53.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8469636685406186], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 53.5}, {0.7693070541839633, 54.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5], EdgeForm[Opacity[0.]], 
       RectangleBox[{0., 54.5}, {0.6494507487080535, 55.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6925963047038273], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 55.5}, {0.6915183102232182, 56.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7195621589716865], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 56.5}, {0.668408747790416, 57.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7617675690591228], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 57.5}, {0.6122542954549197, 58.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7876596909353499], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 58.5}, {0.7291236152289445, 59.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7049546378372464], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 59.5}, {0.6037592118143658, 60.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8008400976864876], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 60.5}, {0.665425377890306, 61.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5955252519404673], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 61.5}, {0.5918609488721753, 62.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.785407626612701], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 62.5}, {0.6590054983662713, 63.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7569534814195289], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 63.5}, {0.5732692378453028, 64.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7755731169205828], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 64.5}, {0.7226632958240885, 65.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7455556063723131], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 65.5}, {0.6442027645871149, 66.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6825007689146033], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 66.5}, {0.7552147912593619, 67.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7498187964692874], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 67.5}, {0.6731402126966803, 68.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7989882431141833], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 68.5}, {0.6688696022390684, 69.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7704104618124417], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 69.5}, {0.6099620245815766, 70.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7456155941250098], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 70.5}, {0.7208262198633335, 71.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6472504473406332], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 71.5}, {0.7308789359809917, 72.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6324738586128064], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 72.5}, {0.7473671856270511, 73.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7299857772669577], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 73.5}, {0.6341843233597266, 74.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6015452509722727], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 74.5}, {0.7126700149778475, 75.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6595532891969377], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 75.5}, {0.6672353553106399, 76.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6351817346421648], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 76.5}, {0.7139325409556403, 77.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7017515750446992], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 77.5}, {0.6299217123238716, 78.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7515518834107192], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 78.5}, {0.5876020259044288, 79.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7215243102595766], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 79.5}, {0.6122906910805411, 80.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.734098908056747], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 80.5}, {0.6190112425319902, 81.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.759992249665873], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 81.5}, {0.6606208248101461, 82.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8731319695294444], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 82.5}, {0.722870721151543, 83.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7625087537129647], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 83.5}, {0.6755916260057354, 84.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7206750226099803], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 84.5}, {0.6643699915041464, 85.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.95], EdgeForm[Opacity[0.]], 
       RectangleBox[{0., 85.5}, {0.5237996092979674, 86.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8117160663836445], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 86.5}, {0.6221696104079373, 87.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7320533133145954], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 87.5}, {0.6200590250592407, 88.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.776464122562469], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 88.5}, {0.6357645924191135, 89.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6182973242042902], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 89.5}, {0.6143173468333734, 90.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7292569783728212], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 90.5}, {0.65166268538485, 91.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6713750940951166], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 91.5}, {0.6729218411962753, 92.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6349591384084473], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 92.5}, {0.616087851021887, 93.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7289144007390973], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 93.5}, {0.6880512175065494, 94.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5487575926839616], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 94.5}, {0.7254583695530306, 95.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6312680449376111], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 95.5}, {0.5697888833456759, 96.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.653432779770862], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 96.5}, {0.6158174798109485, 97.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6876826203094999], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 97.5}, {0.6150705800784589, 98.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.715921450091501], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 98.5}, {0.6161860342693534, 99.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6448723365833492], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 99.5}, {0.6575215137668566, 100.5},
        RoundingRadius->0]}}, {}, {}}, {}, {}, {}, {}, 
    StyleBox[{
      {Thickness[Tiny], LineBox[{{0., -1.5}, {0., 102.54}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}], 
         LineBox[{{0., 100.5}, 
           Offset[{-6., 0.}, {0., 
            100.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
           LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
           LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
           LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
           LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
           LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
           LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
           LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
           LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
           LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
           LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
           LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
           LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
           LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
           LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
           LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
           LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
           LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
           LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
           LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
           LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
           LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
           LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
           LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
           LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
           LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
           LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
           LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
           LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
           LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
           LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
           LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
           LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
           LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
           LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
           LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
           LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
           LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
           LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
           LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
           LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
           LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
           LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
           LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
           LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
           LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
           LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
           LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
           LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
           LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
           LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
           LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
           LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
           LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
           LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
           LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
           LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
           LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
           LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
           LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
           LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
           LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
           LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
           LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
           LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
           LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
           LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
           LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
           LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
           LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
           LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
           LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
           LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
           LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
           LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
           LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
           LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
           LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
           LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
           LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
           LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
           LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
           LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
           LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
           LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
           LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
           LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
           LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
           LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
           LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
           LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
           LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
           LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
           LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
           LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
           LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
           LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
           LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
           LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
           LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
           LineBox[{{0., 51.5}, Offset[{-4., 0.}, {0., 51.5}]}], 
           LineBox[{{0., 51.5}, Offset[{-4., 0.}, {0., 51.5}]}], 
           LineBox[{{0., 52.5}, Offset[{-4., 0.}, {0., 52.5}]}], 
           LineBox[{{0., 52.5}, Offset[{-4., 0.}, {0., 52.5}]}], 
           LineBox[{{0., 53.5}, Offset[{-4., 0.}, {0., 53.5}]}], 
           LineBox[{{0., 53.5}, Offset[{-4., 0.}, {0., 53.5}]}], 
           LineBox[{{0., 54.5}, Offset[{-4., 0.}, {0., 54.5}]}], 
           LineBox[{{0., 54.5}, Offset[{-4., 0.}, {0., 54.5}]}], 
           LineBox[{{0., 55.5}, Offset[{-4., 0.}, {0., 55.5}]}], 
           LineBox[{{0., 55.5}, Offset[{-4., 0.}, {0., 55.5}]}], 
           LineBox[{{0., 56.5}, Offset[{-4., 0.}, {0., 56.5}]}], 
           LineBox[{{0., 56.5}, Offset[{-4., 0.}, {0., 56.5}]}], 
           LineBox[{{0., 57.5}, Offset[{-4., 0.}, {0., 57.5}]}], 
           LineBox[{{0., 57.5}, Offset[{-4., 0.}, {0., 57.5}]}], 
           LineBox[{{0., 58.5}, Offset[{-4., 0.}, {0., 58.5}]}], 
           LineBox[{{0., 58.5}, Offset[{-4., 0.}, {0., 58.5}]}], 
           LineBox[{{0., 59.5}, Offset[{-4., 0.}, {0., 59.5}]}], 
           LineBox[{{0., 59.5}, Offset[{-4., 0.}, {0., 59.5}]}], 
           LineBox[{{0., 60.5}, Offset[{-4., 0.}, {0., 60.5}]}], 
           LineBox[{{0., 60.5}, Offset[{-4., 0.}, {0., 60.5}]}], 
           LineBox[{{0., 61.5}, Offset[{-4., 0.}, {0., 61.5}]}], 
           LineBox[{{0., 61.5}, Offset[{-4., 0.}, {0., 61.5}]}], 
           LineBox[{{0., 62.5}, Offset[{-4., 0.}, {0., 62.5}]}], 
           LineBox[{{0., 62.5}, Offset[{-4., 0.}, {0., 62.5}]}], 
           LineBox[{{0., 63.5}, Offset[{-4., 0.}, {0., 63.5}]}], 
           LineBox[{{0., 63.5}, Offset[{-4., 0.}, {0., 63.5}]}], 
           LineBox[{{0., 64.5}, Offset[{-4., 0.}, {0., 64.5}]}], 
           LineBox[{{0., 64.5}, Offset[{-4., 0.}, {0., 64.5}]}], 
           LineBox[{{0., 65.5}, Offset[{-4., 0.}, {0., 65.5}]}], 
           LineBox[{{0., 65.5}, Offset[{-4., 0.}, {0., 65.5}]}], 
           LineBox[{{0., 66.5}, Offset[{-4., 0.}, {0., 66.5}]}], 
           LineBox[{{0., 66.5}, Offset[{-4., 0.}, {0., 66.5}]}], 
           LineBox[{{0., 67.5}, Offset[{-4., 0.}, {0., 67.5}]}], 
           LineBox[{{0., 67.5}, Offset[{-4., 0.}, {0., 67.5}]}], 
           LineBox[{{0., 68.5}, Offset[{-4., 0.}, {0., 68.5}]}], 
           LineBox[{{0., 68.5}, Offset[{-4., 0.}, {0., 68.5}]}], 
           LineBox[{{0., 69.5}, Offset[{-4., 0.}, {0., 69.5}]}], 
           LineBox[{{0., 69.5}, Offset[{-4., 0.}, {0., 69.5}]}], 
           LineBox[{{0., 70.5}, Offset[{-4., 0.}, {0., 70.5}]}], 
           LineBox[{{0., 70.5}, Offset[{-4., 0.}, {0., 70.5}]}], 
           LineBox[{{0., 71.5}, Offset[{-4., 0.}, {0., 71.5}]}], 
           LineBox[{{0., 71.5}, Offset[{-4., 0.}, {0., 71.5}]}], 
           LineBox[{{0., 72.5}, Offset[{-4., 0.}, {0., 72.5}]}], 
           LineBox[{{0., 72.5}, Offset[{-4., 0.}, {0., 72.5}]}], 
           LineBox[{{0., 73.5}, Offset[{-4., 0.}, {0., 73.5}]}], 
           LineBox[{{0., 73.5}, Offset[{-4., 0.}, {0., 73.5}]}], 
           LineBox[{{0., 74.5}, Offset[{-4., 0.}, {0., 74.5}]}], 
           LineBox[{{0., 74.5}, Offset[{-4., 0.}, {0., 74.5}]}], 
           LineBox[{{0., 75.5}, Offset[{-4., 0.}, {0., 75.5}]}], 
           LineBox[{{0., 75.5}, Offset[{-4., 0.}, {0., 75.5}]}], 
           LineBox[{{0., 76.5}, Offset[{-4., 0.}, {0., 76.5}]}], 
           LineBox[{{0., 76.5}, Offset[{-4., 0.}, {0., 76.5}]}], 
           LineBox[{{0., 77.5}, Offset[{-4., 0.}, {0., 77.5}]}], 
           LineBox[{{0., 77.5}, Offset[{-4., 0.}, {0., 77.5}]}], 
           LineBox[{{0., 78.5}, Offset[{-4., 0.}, {0., 78.5}]}], 
           LineBox[{{0., 78.5}, Offset[{-4., 0.}, {0., 78.5}]}], 
           LineBox[{{0., 79.5}, Offset[{-4., 0.}, {0., 79.5}]}], 
           LineBox[{{0., 79.5}, Offset[{-4., 0.}, {0., 79.5}]}], 
           LineBox[{{0., 80.5}, Offset[{-4., 0.}, {0., 80.5}]}], 
           LineBox[{{0., 80.5}, Offset[{-4., 0.}, {0., 80.5}]}], 
           LineBox[{{0., 81.5}, Offset[{-4., 0.}, {0., 81.5}]}], 
           LineBox[{{0., 81.5}, Offset[{-4., 0.}, {0., 81.5}]}], 
           LineBox[{{0., 82.5}, Offset[{-4., 0.}, {0., 82.5}]}], 
           LineBox[{{0., 82.5}, Offset[{-4., 0.}, {0., 82.5}]}], 
           LineBox[{{0., 83.5}, Offset[{-4., 0.}, {0., 83.5}]}], 
           LineBox[{{0., 83.5}, Offset[{-4., 0.}, {0., 83.5}]}], 
           LineBox[{{0., 84.5}, Offset[{-4., 0.}, {0., 84.5}]}], 
           LineBox[{{0., 84.5}, Offset[{-4., 0.}, {0., 84.5}]}], 
           LineBox[{{0., 85.5}, Offset[{-4., 0.}, {0., 85.5}]}], 
           LineBox[{{0., 85.5}, Offset[{-4., 0.}, {0., 85.5}]}], 
           LineBox[{{0., 86.5}, Offset[{-4., 0.}, {0., 86.5}]}], 
           LineBox[{{0., 86.5}, Offset[{-4., 0.}, {0., 86.5}]}], 
           LineBox[{{0., 87.5}, Offset[{-4., 0.}, {0., 87.5}]}], 
           LineBox[{{0., 87.5}, Offset[{-4., 0.}, {0., 87.5}]}], 
           LineBox[{{0., 88.5}, Offset[{-4., 0.}, {0., 88.5}]}], 
           LineBox[{{0., 88.5}, Offset[{-4., 0.}, {0., 88.5}]}], 
           LineBox[{{0., 89.5}, Offset[{-4., 0.}, {0., 89.5}]}], 
           LineBox[{{0., 89.5}, Offset[{-4., 0.}, {0., 89.5}]}], 
           LineBox[{{0., 90.5}, Offset[{-4., 0.}, {0., 90.5}]}], 
           LineBox[{{0., 90.5}, Offset[{-4., 0.}, {0., 90.5}]}], 
           LineBox[{{0., 91.5}, Offset[{-4., 0.}, {0., 91.5}]}], 
           LineBox[{{0., 91.5}, Offset[{-4., 0.}, {0., 91.5}]}], 
           LineBox[{{0., 92.5}, Offset[{-4., 0.}, {0., 92.5}]}], 
           LineBox[{{0., 92.5}, Offset[{-4., 0.}, {0., 92.5}]}], 
           LineBox[{{0., 93.5}, Offset[{-4., 0.}, {0., 93.5}]}], 
           LineBox[{{0., 93.5}, Offset[{-4., 0.}, {0., 93.5}]}], 
           LineBox[{{0., 94.5}, Offset[{-4., 0.}, {0., 94.5}]}], 
           LineBox[{{0., 94.5}, Offset[{-4., 0.}, {0., 94.5}]}], 
           LineBox[{{0., 95.5}, Offset[{-4., 0.}, {0., 95.5}]}], 
           LineBox[{{0., 95.5}, Offset[{-4., 0.}, {0., 95.5}]}], 
           LineBox[{{0., 96.5}, Offset[{-4., 0.}, {0., 96.5}]}], 
           LineBox[{{0., 96.5}, Offset[{-4., 0.}, {0., 96.5}]}], 
           LineBox[{{0., 97.5}, Offset[{-4., 0.}, {0., 97.5}]}], 
           LineBox[{{0., 97.5}, Offset[{-4., 0.}, {0., 97.5}]}], 
           LineBox[{{0., 98.5}, Offset[{-4., 0.}, {0., 98.5}]}], 
           LineBox[{{0., 98.5}, Offset[{-4., 0.}, {0., 98.5}]}], 
           LineBox[{{0., 99.5}, Offset[{-4., 0.}, {0., 99.5}]}], 
           LineBox[{{0., 99.5}, Offset[{-4., 0.}, {0., 99.5}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["\<\"Vienna\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Zurich\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Munich\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Auckland\"\>", Offset[{-2, 0}, {0., 4.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Vancouver\"\>", Offset[{-2, 0}, {0., 5.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"D\[UDoubleDot]sseldorf\"\>", 
           Offset[{-2, 0}, {0., 6.}], {1, 0}, Automatic, {1, 0}], 
          InsetBox["\<\"Frankfurt\"\>", Offset[{-2, 0}, {0., 7.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Geneva\"\>", Offset[{-2, 0}, {0., 8.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Copenhagen\"\>", Offset[{-2, 0}, {0., 9.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Basel\"\>", Offset[{-2, 0}, {0., 10.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Sydney\"\>", Offset[{-2, 0}, {0., 11.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Amsterdam\"\>", Offset[{-2, 0}, {0., 12.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Berlin\"\>", Offset[{-2, 0}, {0., 13.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Bern\"\>", Offset[{-2, 0}, {0., 14.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Wellington\"\>", Offset[{-2, 0}, {0., 15.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Toronto\"\>", Offset[{-2, 0}, {0., 16.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Melbourne\"\>", Offset[{-2, 0}, {0., 17.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Luxemburg\"\>", Offset[{-2, 0}, {0., 18.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Ottawa\"\>", Offset[{-2, 0}, {0., 19.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Hamburg\"\>", Offset[{-2, 0}, {0., 20.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Perth\"\>", Offset[{-2, 0}, {0., 21.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Montreal\"\>", Offset[{-2, 0}, {0., 22.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Stockholm\"\>", Offset[{-2, 0}, {0., 23.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Nuremberg\"\>", Offset[{-2, 0}, {0., 24.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Singapore\"\>", Offset[{-2, 0}, {0., 25.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Oslo\"\>", Offset[{-2, 0}, {0., 26.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Brussels\"\>", Offset[{-2, 0}, {0., 27.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Stuttgart\"\>", Offset[{-2, 0}, {0., 28.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Adelaide\"\>", Offset[{-2, 0}, {0., 29.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"San Francisco\"\>", Offset[{-2, 0}, {0., 30.}], {1, 0},
            Automatic, {1, 0}], 
          InsetBox["\<\"Canberra\"\>", Offset[{-2, 0}, {0., 31.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Helsinki\"\>", Offset[{-2, 0}, {0., 32.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Calgary\"\>", Offset[{-2, 0}, {0., 33.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Dublin\"\>", Offset[{-2, 0}, {0., 34.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Boston\"\>", Offset[{-2, 0}, {0., 35.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Honolulu\"\>", Offset[{-2, 0}, {0., 36.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Brisbane\"\>", Offset[{-2, 0}, {0., 37.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Lisbon\"\>", Offset[{-2, 0}, {0., 38.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Paris\"\>", Offset[{-2, 0}, {0., 39.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Lyon\"\>", Offset[{-2, 0}, {0., 40.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"London\"\>", Offset[{-2, 0}, {0., 41.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Milan\"\>", Offset[{-2, 0}, {0., 42.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Barcelona\"\>", Offset[{-2, 0}, {0., 43.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Seattle\"\>", Offset[{-2, 0}, {0., 44.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"New York City\"\>", Offset[{-2, 0}, {0., 45.}], {1, 0},
            Automatic, {1, 0}], 
          InsetBox["\<\"Edinburgh\"\>", Offset[{-2, 0}, {0., 46.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Chicago\"\>", Offset[{-2, 0}, {0., 47.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Washington\"\>", Offset[{-2, 0}, {0., 48.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Madrid\"\>", Offset[{-2, 0}, {0., 49.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Tokyo\"\>", Offset[{-2, 0}, {0., 50.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Kobe\"\>", Offset[{-2, 0}, {0., 51.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Birmingham\"\>", Offset[{-2, 0}, {0., 52.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Glasgow\"\>", Offset[{-2, 0}, {0., 53.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Philadelphia\"\>", Offset[{-2, 0}, {0., 54.}], {1, 0},
            Automatic, {1, 0}], 
          InsetBox["\<\"Yokohama\"\>", Offset[{-2, 0}, {0., 55.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Rome\"\>", Offset[{-2, 0}, {0., 56.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Aberdeen\"\>", Offset[{-2, 0}, {0., 57.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Osaka\"\>", Offset[{-2, 0}, {0., 58.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Pittsburgh\"\>", Offset[{-2, 0}, {0., 59.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Leipzig\"\>", Offset[{-2, 0}, {0., 60.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Minneapolis\"\>", Offset[{-2, 0}, {0., 61.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Nagoya\"\>", Offset[{-2, 0}, {0., 62.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Dallas\"\>", Offset[{-2, 0}, {0., 63.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Belfast\"\>", Offset[{-2, 0}, {0., 64.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Atlanta\"\>", Offset[{-2, 0}, {0., 65.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Houston\"\>", Offset[{-2, 0}, {0., 66.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Los Angeles\"\>", Offset[{-2, 0}, {0., 67.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Miami\"\>", Offset[{-2, 0}, {0., 68.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Prague\"\>", Offset[{-2, 0}, {0., 69.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Saint Louis\"\>", Offset[{-2, 0}, {0., 70.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Hong Kong\"\>", Offset[{-2, 0}, {0., 71.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Point\[Hyphen]a\[Hyphen]Pitre\"\>", 
           Offset[{-2, 0}, {0., 72.}], {1, 0}, Automatic, {1, 0}], 
          InsetBox["\<\"Detroit\"\>", Offset[{-2, 0}, {0., 73.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Ljubljana\"\>", Offset[{-2, 0}, {0., 74.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Dubai\"\>", Offset[{-2, 0}, {0., 75.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Budapest\"\>", Offset[{-2, 0}, {0., 76.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Seoul\"\>", Offset[{-2, 0}, {0., 77.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Abu Dhabi\"\>", Offset[{-2, 0}, {0., 78.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Montevideo\"\>", Offset[{-2, 0}, {0., 79.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Bratislava\"\>", Offset[{-2, 0}, {0., 80.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Vilnius\"\>", Offset[{-2, 0}, {0., 81.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Warsaw\"\>", Offset[{-2, 0}, {0., 82.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Port Louis\"\>", Offset[{-2, 0}, {0., 83.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Taipei City\"\>", Offset[{-2, 0}, {0., 84.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Kuala Lumpur\"\>", Offset[{-2, 0}, {0., 85.}], {1, 0},
            Automatic, {1, 0}], 
          InsetBox["\<\"Lemesos\"\>", Offset[{-2, 0}, {0., 86.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Tallinn\"\>", Offset[{-2, 0}, {0., 87.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Durban\"\>", Offset[{-2, 0}, {0., 88.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Athens\"\>", Offset[{-2, 0}, {0., 89.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Riga\"\>", Offset[{-2, 0}, {0., 90.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Buenos Aires\"\>", Offset[{-2, 0}, {0., 91.}], {1, 0},
            Automatic, {1, 0}], 
          InsetBox["\<\"San Juan\"\>", Offset[{-2, 0}, {0., 92.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Santiago\"\>", Offset[{-2, 0}, {0., 93.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Busan\"\>", Offset[{-2, 0}, {0., 94.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Cape Town\"\>", Offset[{-2, 0}, {0., 95.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Johannesburg\"\>", Offset[{-2, 0}, {0., 96.}], {1, 0},
            Automatic, {1, 0}], 
          InsetBox["\<\"Panama\"\>", Offset[{-2, 0}, {0., 97.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Zagreb\"\>", Offset[{-2, 0}, {0., 98.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Victoria\"\>", Offset[{-2, 0}, {0., 99.}], {1, 0}, 
           Automatic, {1, 0}], 
          InsetBox["\<\"Wroc\[LSlash]aw\"\>", Offset[{-2, 0}, {0., 100.}], {1, 0},
            Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]}, "GraphicsAxes",
     StripOnInput->False,
     Antialiasing->False]}, {
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6931560262371375, 1.}, {0.7094780254912796, 1.}}], 
        LineBox[{{0.7094780254912796, 1.}, {0.7258000247454217, 1.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.607094289536996, 2.}, {0.6212207674326335, 2.}}], 
        LineBox[{{0.6212207674326335, 2.}, {0.6353472453282714, 2.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6626990001926303, 3.}, {0.6756641062959439, 3.}}], 
        LineBox[{{0.6756641062959439, 3.}, {0.6886292123992575, 3.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.611925978309487, 4.}, {0.6271725928863408, 4.}}], 
        LineBox[{{0.6271725928863408, 4.}, {0.6424192074631945, 4.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6460870639090937, 5.}, {0.6601309524686281, 5.}}], 
        LineBox[{{0.6601309524686281, 5.}, {0.6741748410281625, 5.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5962777591805315, 6.}, {0.6075730642972506, 6.}}], 
        LineBox[{{0.6075730642972506, 6.}, {0.6188683694139696, 6.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5823675022695207, 7.}, {0.5967706220207534, 7.}}], 
        LineBox[{{0.5967706220207534, 7.}, {0.611173741771986, 7.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5663558216809923, 8.}, {0.577123250519846, 8.}}], 
        LineBox[{{0.577123250519846, 8.}, {0.5878906793586998, 8.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.609306240623761, 9.}, {0.6228594834244063, 9.}}], 
        LineBox[{{0.6228594834244063, 9.}, {0.6364127262250516, 9.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.602589516913655, 10.}, {0.6152352433003045, 10.}}], 
        LineBox[{{0.6152352433003045, 10.}, {0.6278809696869541, 10.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6243519348133741, 11.}, {0.642157870797389, 11.}}], 
        LineBox[{{0.642157870797389, 11.}, {0.6599638067814038, 11.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5962786054454714, 12.}, {0.6081083005439467, 12.}}], 
        LineBox[{{0.6081083005439467, 12.}, {0.619937995642422, 12.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5973894087981311, 13.}, {0.6119525994424233, 13.}}], 
        LineBox[{{0.6119525994424233, 13.}, {0.6265157900867155, 13.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6107708292821119, 14.}, {0.6258592853246725, 14.}}], 
        LineBox[{{0.6258592853246725, 14.}, {0.6409477413672331, 14.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6003538775350705, 15.}, {0.6144830048531489, 15.}}], 
        LineBox[{{0.6144830048531489, 15.}, {0.6286121321712272, 15.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6383251182735634, 16.}, {0.6556192762962425, 16.}}], 
        LineBox[{{0.6556192762962425, 16.}, {0.6729134343189216, 16.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6402367918194223, 17.}, {0.6560237091036711, 17.}}], 
        LineBox[{{0.6560237091036711, 17.}, {0.67181062638792, 17.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5792577349766397, 18.}, {0.5904025661158769, 18.}}], 
        LineBox[{{0.5904025661158769, 18.}, {0.6015473972551142, 18.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6029986181541211, 19.}, {0.6179754290700181, 19.}}], 
        LineBox[{{0.6179754290700181, 19.}, {0.6329522399859151, 19.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.607561314375463, 20.}, {0.6187137861652978, 20.}}], 
        LineBox[{{0.6187137861652978, 20.}, {0.6298662579551326, 20.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6525039814250775, 21.}, {0.6692109538724829, 21.}}], 
        LineBox[{{0.6692109538724829, 21.}, {0.6859179263198882, 21.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6323408491114471, 22.}, {0.6453909853282944, 22.}}], 
        LineBox[{{0.6453909853282944, 22.}, {0.6584411215451418, 22.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5732056294699852, 23.}, {0.5886012686753652, 23.}}], 
        LineBox[{{0.5886012686753652, 23.}, {0.6039969078807452, 23.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5329560968633658, 24.}, {0.5448160664477548, 24.}}], 
        LineBox[{{0.5448160664477548, 24.}, {0.5566760360321439, 24.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6151323036093927, 25.}, {0.6354121176869114, 25.}}], 
        LineBox[{{0.6354121176869114, 25.}, {0.6556919317644301, 25.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6270185786480234, 26.}, {0.6394968932809135, 26.}}], 
        LineBox[{{0.6394968932809135, 26.}, {0.6519752079138037, 26.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5609547623451583, 27.}, {0.5795979805937392, 27.}}], 
        LineBox[{{0.5795979805937392, 27.}, {0.5982411988423202, 27.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5870883811481669, 28.}, {0.5989295024826085, 28.}}], 
        LineBox[{{0.5989295024826085, 28.}, {0.61077062381705, 28.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6438315328996005, 29.}, {0.6619629406513248, 29.}}], 
        LineBox[{{0.6619629406513248, 29.}, {0.680094348403049, 29.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.572425284795667, 30.}, {0.5827312202237245, 30.}}], 
        LineBox[{{0.5827312202237245, 30.}, {0.5930371556517819, 30.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5997928165660724, 31.}, {0.6118390321474507, 31.}}], 
        LineBox[{{0.6118390321474507, 31.}, {0.623885247728829, 31.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5791223061268234, 32.}, {0.5912288909846524, 32.}}], 
        LineBox[{{0.5912288909846524, 32.}, {0.6033354758424849, 32.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6732903202081246, 33.}, {0.6893609002730727, 33.}}], 
        LineBox[{{0.6893609002730727, 33.}, {0.7054314803380208, 33.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6043150315818124, 34.}, {0.6194426043074017, 34.}}], 
        LineBox[{{0.6194426043074017, 34.}, {0.634570177032991, 34.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6648449502564873, 35.}, {0.6807395187456535, 35.}}], 
        LineBox[{{0.6807395187456535, 35.}, {0.6966340872348198, 35.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6079208557048972, 36.}, {0.6203486508741847, 36.}}], 
        LineBox[{{0.6203486508741847, 36.}, {0.6327764460434722, 36.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5922896194692697, 37.}, {0.606412856421727, 37.}}], 
        LineBox[{{0.606412856421727, 37.}, {0.6205360933741844, 37.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6377319288732863, 38.}, {0.6513873815366722, 38.}}], 
        LineBox[{{0.6513873815366722, 38.}, {0.665042834200058, 38.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6293688606094037, 39.}, {0.6430268477412966, 39.}}], 
        LineBox[{{0.6430268477412966, 39.}, {0.6566848348731895, 39.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5714504588434224, 40.}, {0.5822887528259315, 40.}}], 
        LineBox[{{0.5822887528259315, 40.}, {0.5931270468084406, 40.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7010851947862093, 41.}, {0.7181963600080365, 41.}}], 
        LineBox[{{0.7181963600080365, 41.}, {0.7353075252298638, 41.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5815781739533534, 42.}, {0.5933273561474977, 42.}}], 
        LineBox[{{0.5933273561474977, 42.}, {0.6050765383416419, 42.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6271108959506861, 43.}, {0.6411733052568422, 43.}}], 
        LineBox[{{0.6411733052568422, 43.}, {0.6552357145629983, 43.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6299308561489241, 44.}, {0.6455747219833583, 44.}}], 
        LineBox[{{0.6455747219833583, 44.}, {0.6612185878177925, 44.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6292783323557103, 45.}, {0.6427329190005509, 45.}}], 
        LineBox[{{0.6427329190005509, 45.}, {0.6561875056453914, 45.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6927886940793755, 46.}, {0.7078756726789237, 46.}}], 
        LineBox[{{0.7078756726789237, 46.}, {0.7229626512784719, 46.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.651774791587421, 47.}, {0.6686434667623473, 47.}}], 
        LineBox[{{0.6686434667623473, 47.}, {0.6855121419372736, 47.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5933338838894073, 48.}, {0.603367376584174, 48.}}], 
        LineBox[{{0.603367376584174, 48.}, {0.6134008692789408, 48.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6284559513894123, 49.}, {0.6410998023559031, 49.}}], 
        LineBox[{{0.6410998023559031, 49.}, {0.6537436533223939, 49.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6048896989249286, 50.}, {0.6178391396997895, 50.}}], 
        LineBox[{{0.6178391396997895, 50.}, {0.6307885804746505, 50.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5896378073164854, 51.}, {0.6042482536796214, 51.}}], 
        LineBox[{{0.6042482536796214, 51.}, {0.6188587000427574, 51.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5997231691138012, 52.}, {0.6169263018799143, 52.}}], 
        LineBox[{{0.6169263018799143, 52.}, {0.6341294346460273, 52.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.617183207082185, 53.}, {0.6314432779959915, 53.}}], 
        LineBox[{{0.6314432779959915, 53.}, {0.6457033489097981, 53.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7522961627444431, 54.}, {0.7693070541839617, 54.}}], 
        LineBox[{{0.7693070541839617, 54.}, {0.7863179456234803, 54.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6394597468001137, 55.}, {0.6494507487080554, 55.}}], 
        LineBox[{{0.6494507487080554, 55.}, {0.6594417506159971, 55.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.673977709853304, 56.}, {0.6915183102232163, 56.}}], 
        LineBox[{{0.6915183102232163, 56.}, {0.7090589105931286, 56.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6531908043624526, 57.}, {0.6684087477904157, 57.}}], 
        LineBox[{{0.6684087477904157, 57.}, {0.6836266912183788, 57.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5997613166035691, 58.}, {0.6122542954549175, 58.}}], 
        LineBox[{{0.6122542954549175, 58.}, {0.6247472743062659, 58.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.714377631184874, 59.}, {0.7291236152289429, 59.}}], 
        LineBox[{{0.7291236152289429, 59.}, {0.7438695992730118, 59.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5925146944734934, 60.}, {0.6037592118143635, 60.}}], 
        LineBox[{{0.6037592118143635, 60.}, {0.6150037291552337, 60.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6497570523106688, 61.}, {0.6654253778903083, 61.}}], 
        LineBox[{{0.6654253778903083, 61.}, {0.6810937034699478, 61.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5816489707111003, 62.}, {0.5918609488721742, 62.}}], 
        LineBox[{{0.5918609488721742, 62.}, {0.6020729270332481, 62.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6422076264530645, 63.}, {0.6590054983662696, 63.}}], 
        LineBox[{{0.6590054983662696, 63.}, {0.6758033702794748, 63.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5560470449513986, 63.99999999999999}, {0.5732692378453024,
          63.99999999999999}}], 
        LineBox[{{0.5732692378453024, 63.99999999999999}, {0.5904914307391991,
          63.99999999999999}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7065082158336509, 65.}, {0.7226632958240913, 65.}}], 
        LineBox[{{0.7226632958240913, 65.}, {0.7388183758145317, 65.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6286383699081171, 66.}, {0.6442027645871207, 66.}}], 
        LineBox[{{0.6442027645871207, 66.}, {0.6597671592661243, 66.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7413000728510326, 67.}, {0.7552147912593625, 67.}}], 
        LineBox[{{0.7552147912593625, 67.}, {0.7691295096676924, 67.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6551862255091407, 68.}, {0.6731402126966799, 68.}}], 
        LineBox[{{0.6731402126966799, 68.}, {0.691094199884219, 68.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6463920133120951, 69.}, {0.6688696022390701, 69.}}], 
        LineBox[{{0.6688696022390701, 69.}, {0.6913471911660451, 69.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5968182929156427, 70.}, {0.6099620245815771, 70.}}], 
        LineBox[{{0.6099620245815771, 70.}, {0.6231057562475115, 70.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7046769634126235, 71.}, {0.7208262198633406, 71.}}], 
        LineBox[{{0.7208262198633406, 71.}, {0.7369754763140577, 71.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6977079224091227, 72.}, {0.7308789359809964, 72.}}], 
        LineBox[{{0.7308789359809964, 72.}, {0.7640499495528701, 72.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7333973890230396, 73.}, {0.7473671856270556, 73.}}], 
        LineBox[{{0.7473671856270556, 73.}, {0.7613369822310716, 73.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6218319786978981, 74.}, {0.6341843233597331, 74.}}], 
        LineBox[{{0.6341843233597331, 74.}, {0.6465366680215681, 74.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6985158103175308, 75.}, {0.7126700149778458, 75.}}], 
        LineBox[{{0.7126700149778458, 75.}, {0.7268242196381607, 75.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6526980686446393, 76.}, {0.6672353553106376, 76.}}], 
        LineBox[{{0.6672353553106376, 76.}, {0.6817726419766359, 76.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.697828385657786, 77.}, {0.7139325409556392, 77.}}], 
        LineBox[{{0.7139325409556392, 77.}, {0.7300366962534923, 77.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6161548514941018, 78.}, {0.6299217123238776, 78.}}], 
        LineBox[{{0.6299217123238776, 78.}, {0.6436885731536535, 78.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5769676913913457, 79.}, {0.587602025904431, 79.}}], 
        LineBox[{{0.587602025904431, 79.}, {0.5982363604175163, 79.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6000718332992534, 80.}, {0.6122906910805455, 80.}}], 
        LineBox[{{0.6122906910805455, 80.}, {0.6245095488618375, 80.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6072573886117851, 81.}, {0.6190112425319967, 81.}}], 
        LineBox[{{0.6190112425319967, 81.}, {0.6307650964522082, 81.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6417502598538931, 82.}, {0.6606208248101524, 82.}}], 
        LineBox[{{0.6606208248101524, 82.}, {0.6794913897664117, 82.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7063442694693549, 83.}, {0.722870721151537, 83.}}], 
        LineBox[{{0.722870721151537, 83.}, {0.7393971728337192, 83.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6588306323458539, 84.}, {0.6755916260057404, 84.}}], 
        LineBox[{{0.6755916260057404, 84.}, {0.6923526196656269, 84.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6500478008457975, 85.}, {0.6643699915041452, 85.}}], 
        LineBox[{{0.6643699915041452, 85.}, {0.6786921821624929, 85.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5202163656607297, 86.}, {0.5237996092979671, 86.}}], 
        LineBox[{{0.5237996092979671, 86.}, {0.5273828529352045, 86.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6067654704210526, 87.}, {0.6221696104079371, 87.}}], 
        LineBox[{{0.6221696104079371, 87.}, {0.6375737503948216, 87.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6011939060913676, 88.}, {0.6200590250592342, 88.}}], 
        LineBox[{{0.6200590250592342, 88.}, {0.6389241440271007, 88.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6204098559094007, 89.}, {0.6357645924191075, 89.}}], 
        LineBox[{{0.6357645924191075, 89.}, {0.6511193289288144, 89.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6015694747329121, 90.}, {0.6143173468333742, 90.}}], 
        LineBox[{{0.6143173468333742, 90.}, {0.6270652189338364, 90.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6387277043256177, 91.}, {0.6516626853848493, 91.}}], 
        LineBox[{{0.6516626853848493, 91.}, {0.6645976664440809, 91.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6604144565054071, 92.}, {0.6729218411962705, 92.}}], 
        LineBox[{{0.6729218411962705, 92.}, {0.685429225887134, 92.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6045387278791168, 93.}, {0.6160878510218879, 93.}}], 
        LineBox[{{0.6160878510218879, 93.}, {0.627636974164659, 93.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6684423853504313, 94.}, {0.6880512175065547, 94.}}], 
        LineBox[{{0.6880512175065547, 94.}, {0.7076600496626781, 94.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7128052088890229, 95.}, {0.7254583695530243, 95.}}], 
        LineBox[{{0.7254583695530243, 95.}, {0.7381115302170258, 95.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5590620488308247, 96.}, {0.5697888833456801, 96.}}], 
        LineBox[{{0.5697888833456801, 96.}, {0.5805157178605356, 96.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6051117211993216, 97.}, {0.6158174798109428, 97.}}], 
        LineBox[{{0.6158174798109428, 97.}, {0.6265232384225641, 97.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6024952581233975, 98.}, {0.6150705800784522, 98.}}], 
        LineBox[{{0.6150705800784522, 98.}, {0.6276459020335068, 98.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6004694940719304, 99.}, {0.6161860342693473, 99.}}], 
        LineBox[{{0.6161860342693473, 99.}, {0.6319025744667641, 99.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6456382017611304, 100.}, {0.6575215137668522, 100.}}], 
        LineBox[{{0.6575215137668522, 100.}, {0.669404825772574, 100.}}]}},
      Antialiasing->False]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., -1.5},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{Automatic, 779.3044379101113},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.05]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{
  3.7714538701095057`*^9, 3.771494004367584*^9, {3.7714940668059607`*^9, 
   3.7714940808827353`*^9}, 3.771494470980624*^9, 3.771670999214221*^9, 
   3.771690382504343*^9, 3.771703748413437*^9, 3.771709022107864*^9, 
   3.771755065478182*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"1f38b91a-5cbd-4de6-a6ec-a57cdf902ebe"]
}, Open  ]],

Cell["\<\
As we can see, there is not much variance between cities, in terms of Tweets \
sentiment. Our expectation was to see longer bars in the bottom of the chart, \
but there are no obvious trends on it. Potential reasons:\
\>", "Text",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 
  3.771763284224145*^9}},ExpressionUUID->"04da58f6-384a-4c46-83b1-\
c68f03702b2d"],

Cell[CellGroupData[{

Cell["Lack of relation between the quality of life and sentiment. ", "Item",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 3.771763348534603*^9}, {
  3.771763437137035*^9, 
  3.771763437137156*^9}},ExpressionUUID->"8273b782-8152-4c65-a372-\
a95a327c12f8"],

Cell["\<\
Lack of named-entity resolution functionality in Twitter search queries. We \
can only scrape text from Twitter with substring queries, which often returns \
results unrelated to cities.\
\>", "Item",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 3.771763348534603*^9}, {
  3.771763437985653*^9, 3.77176348756246*^9}, {3.7717635293509274`*^9, 
  3.771763568515394*^9}},ExpressionUUID->"dab0a11f-845b-437d-9006-\
e945f823bb62"],

Cell["\<\
Poor quality of sentiment analyzer. The built-in technology uses a small \
statistical model trained on a tiny dataset. Larger language modelling \
systems with attention mechanisms should produce considerably better results.\
\
\>", "Item",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 
  3.771763435609098*^9}},ExpressionUUID->"10c3ba9a-1b25-44ac-b004-\
784dd96367f6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multi-source approach?", "Section",
 CellChangeTimes->{{3.771712976773937*^9, 3.771713011285736*^9}, {
  3.771713345797237*^9, 
  3.771713351892058*^9}},ExpressionUUID->"d1be2ff7-0399-4fec-9761-\
8befa64c33fd"],

Cell["\<\
Lets compile multiple rankings together, assuming that they have had a more \
complete model for estimating the quality of life and satisfaction.
For every city we will compose feature vectors containing:\
\>", "Text",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 3.771763290445486*^9}, {
  3.771763570950718*^9, 3.77176357294776*^9}, {3.771763959993661*^9, 
  3.771763973148033*^9}},ExpressionUUID->"003a472c-506c-4673-a1ee-\
f1143a51dc45"],

Cell[CellGroupData[{

Cell["Features extracted from knowledge base;", "Item",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 3.771763290445486*^9}, {
  3.771763570950718*^9, 3.77176357294776*^9}, {3.771763959993661*^9, 
  3.7717640240347652`*^9}},ExpressionUUID->"01cd0af1-a154-43b1-ae7a-\
c758c5a411fe"],

Cell["\<\
Features of the enclosing country extracted from knowledge base;\
\>", "Item",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 3.771763290445486*^9}, {
  3.771763570950718*^9, 3.77176357294776*^9}, {3.771763959993661*^9, 
  3.771764025533725*^9}},ExpressionUUID->"9a30ddc5-bc72-49bd-8331-\
58cabe10a247"],

Cell["Land-use statistics extracted from rasterized maps;", "Item",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 3.771763290445486*^9}, {
  3.771763570950718*^9, 3.77176357294776*^9}, {3.771763959993661*^9, 
  3.771764062572472*^9}, {3.771764111366909*^9, 
  3.7717641117881727`*^9}},ExpressionUUID->"630be8a5-1594-44a6-b0c5-\
f1a37f294478"],

Cell["Metrics of transportation network graph of the city center.", "Item",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}, {3.77176322088455*^9, 3.771763290445486*^9}, {
  3.771763570950718*^9, 3.77176357294776*^9}, {3.771763959993661*^9, 
  3.7717641090838327`*^9}},ExpressionUUID->"66448db9-7426-4871-8df9-\
fd48f15ac320"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear Regression", "Subsection",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 3.7711017038951178`*^9}, {3.771101737640126*^9, 
  3.771101738955223*^9}, {3.771102348054689*^9, 3.771102348771636*^9}, {
  3.771713335827496*^9, 
  3.771713339378332*^9}},ExpressionUUID->"1e314e11-051b-4643-8db0-\
01d456f6b7b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FitRegressionRect", "[", 
    RowBox[{"rowsPerSample_", ",", " ", "predictionsVals_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inputNormalized", ",", " ", "p", ",", " ", "pLinearLayer", ",", " ", 
       "pWeights"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"Predict", "[", 
        RowBox[{
         RowBox[{"rowsPerSample", "\[Rule]", "predictionsVals"}], ",", " ", 
         RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"pLinearLayer", " ", "=", " ", 
       RowBox[{"p", "\[LeftDoubleBracket]", 
        RowBox[{
        "1", ",", " ", "\"\<Model\>\"", ",", " ", "\"\<MeanFunction\>\""}], 
        "\[RightDoubleBracket]"}]}], ";", "\n", "\t", 
      RowBox[{"pWeights", " ", "=", " ", 
       RowBox[{"Normal", " ", "@", " ", 
        RowBox[{
         RowBox[{
         "pLinearLayer", "\[LeftDoubleBracket]", "\"\<Arrays\>\"", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
         "\"\<Weights\>\"", "\[RightDoubleBracket]"}]}]}], ";", "\n", "\t", 
      "pWeights"}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FitRegressionSquare", "[", 
    RowBox[{"rowsPerSample_List", ",", " ", "predictionsVals_List"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "rowsPerSample", "]"}], ".", 
      "rowsPerSample"}], "]"}], ".", 
    RowBox[{"Transpose", "[", "rowsPerSample", "]"}], ".", 
    "predictionsVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RunRegression", "[", 
    RowBox[{"weights_List", ",", " ", "rowOfSample_List"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Total", "[", 
    RowBox[{"Dot", "[", 
     RowBox[{"weights", ",", " ", "rowOfSample"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FitRegression", "[", 
    RowBox[{
    "rowsPerSample_", ",", " ", "estimatesPerSample_", ",", " ", 
     "featuresNames_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
      "inputTrain", ",", " ", "inputValidate", ",", " ", "outputTrain", ",", 
       " ", "outputValidate", ",", " ", "outputEstimated", ",", " ", "\n", 
       "\t\t", "modelWights", ",", " ", "error", ",", " ", "chart", ",", " ", 
       "result", ",", " ", "trainingCount"}], "\n", "\t", "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"trainingCount", " ", "=", " ", 
       RowBox[{"Length", "[", "featuresNames", "]"}]}], ";", "\n", "\t", 
      RowBox[{"inputTrain", " ", "=", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"rowsPerSample", ",", " ", "trainingCount"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"outputTrain", " ", "=", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"estimatesPerSample", ",", " ", "trainingCount"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"inputValidate", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"rowsPerSample", ",", " ", "trainingCount"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"outputValidate", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"estimatesPerSample", ",", " ", "trainingCount"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"modelWights", " ", "=", " ", 
       RowBox[{"FitRegressionSquare", "[", 
        RowBox[{"inputTrain", ",", " ", "outputTrain"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"outputEstimated", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"RunRegression", "[", 
            RowBox[{"modelWights", ",", " ", "#"}], "]"}], ")"}], " ", "&"}], 
         ",", " ", "inputValidate"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"outputValidate", "-", "outputEstimated"}], ",", " ", "1"}],
          "]"}], " ", "/", " ", 
        RowBox[{"Length", "[", "outputValidate", "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"chart", " ", "=", " ", 
       RowBox[{"BarChart", "[", 
        RowBox[{"modelWights", ",", " ", 
         RowBox[{"ChartLabels", "\[Rule]", "featuresNames"}], ",", " ", 
         RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", " ", "5"}], "}"}]}]}], "]"}]}], ";", 
      "\n", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"error", ",", " ", "chart", ",", " ", "modelWights"}], 
       "}"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7711662130281467`*^9, 3.771166215352922*^9}, {
   3.771197303426878*^9, 3.771197321169957*^9}, 3.7711979403664637`*^9, {
   3.7712530800287*^9, 3.771253141824217*^9}, {3.771254232616996*^9, 
   3.771254234573873*^9}, {3.771254814339655*^9, 3.771254823206771*^9}, 
   3.7712553544971323`*^9, {3.771328798359071*^9, 3.77132888435972*^9}, {
   3.7713291571827993`*^9, 3.771329174673594*^9}, 3.7713293391980677`*^9, 
   3.771331075460321*^9, {3.771331205881012*^9, 3.771331248469551*^9}, {
   3.771331393724903*^9, 3.771331454273843*^9}, {3.771331858875564*^9, 
   3.771331859310504*^9}, {3.771350065960774*^9, 3.771350191065762*^9}, {
   3.77135028904036*^9, 3.77135038946412*^9}, {3.771350481018968*^9, 
   3.7713505263093023`*^9}, {3.771350558816463*^9, 3.771350563948971*^9}, {
   3.7713506446320753`*^9, 3.7713507842900333`*^9}, {3.771350817906404*^9, 
   3.771350846145687*^9}, {3.771350876488069*^9, 3.7713508841268377`*^9}, {
   3.7713509316696663`*^9, 3.7713509342461567`*^9}, {3.771350984109829*^9, 
   3.771350998574337*^9}, {3.771351055424478*^9, 3.7713510624171057`*^9}, {
   3.771351101585807*^9, 3.7713511911911087`*^9}, {3.7713512369373617`*^9, 
   3.771351250335422*^9}, {3.7713513310208883`*^9, 3.77135133335221*^9}, {
   3.771351380363995*^9, 3.7713515293458843`*^9}, {3.771351774107162*^9, 
   3.7713517906407347`*^9}, {3.7713520499554853`*^9, 3.771352315025916*^9}, {
   3.771352349303665*^9, 3.7713523510083237`*^9}, {3.7713560430968847`*^9, 
   3.7713560435384607`*^9}, {3.771356193141917*^9, 3.771356209902203*^9}, {
   3.771356247076288*^9, 3.771356263584107*^9}, {3.7713563852974243`*^9, 
   3.7713564696868773`*^9}, {3.771356591772225*^9, 3.7713566103639402`*^9}, {
   3.7713566444034557`*^9, 3.771356701197536*^9}, {3.7713567502401333`*^9, 
   3.7713567575500526`*^9}, 3.771356823846187*^9, {3.771358873740418*^9, 
   3.7713588807112637`*^9}, {3.7713590285376263`*^9, 3.771359057644163*^9}, {
   3.771359109388794*^9, 3.771359112790992*^9}, {3.7713591431612787`*^9, 
   3.77135922756713*^9}, {3.7713592619363203`*^9, 3.771359292243853*^9}, {
   3.771359372067912*^9, 3.771359374741563*^9}, {3.771360895901122*^9, 
   3.771360899433941*^9}, {3.7713610810330563`*^9, 3.77136111925381*^9}, {
   3.77136401463911*^9, 3.7713640164404716`*^9}, {3.771446660355817*^9, 
   3.771446727670577*^9}, {3.771446873632465*^9, 3.7714469866514874`*^9}, {
   3.771447225288508*^9, 3.771447245418425*^9}, {3.771447572405847*^9, 
   3.7714476354199877`*^9}, {3.7714477162181168`*^9, 3.771447722343709*^9}, {
   3.771448126328205*^9, 3.771448131249926*^9}, {3.7714481648627768`*^9, 
   3.7714481686175623`*^9}, {3.771448253260311*^9, 3.7714482857993307`*^9}, {
   3.77144844007451*^9, 3.771448451243819*^9}, {3.771448558866544*^9, 
   3.771448563297144*^9}, {3.771448764648456*^9, 3.77144876860842*^9}, {
   3.771449067102228*^9, 3.771449080131538*^9}, {3.771494289253888*^9, 
   3.771494327853054*^9}, {3.771494615217038*^9, 3.7714947103326817`*^9}, {
   3.7714948502019863`*^9, 3.771494852978088*^9}, {3.77149494734484*^9, 
   3.7714949614652967`*^9}, {3.771495406943359*^9, 3.7714954693078527`*^9}, 
   3.771495540516691*^9, {3.771495803706192*^9, 3.7714958676028767`*^9}, {
   3.771691861212635*^9, 3.771691862651863*^9}, {3.771694375623562*^9, 
   3.771694390529674*^9}, {3.771713330936715*^9, 3.77171333185679*^9}, {
   3.771776935876236*^9, 3.771776955435402*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"d54f38e5-c079-43b6-a6e9-599471a76047"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparing the cities", "Subsection",
 CellChangeTimes->{{3.771713511711741*^9, 
  3.771713514949616*^9}},ExpressionUUID->"39f53ecd-769c-48bb-b96c-\
c03fe6430a5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"citiesFeaturesNamesMaps", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Keys", "[", 
       RowBox[{"ExtractMapFeaturesFromOSM", "[", 
        TemplateBox[{
         "\"Point\[Hyphen]a\[Hyphen]Pitre\"",RowBox[{"Entity", "[", 
            RowBox[{"\"City\"", ",", 
              RowBox[{"{", 
                
                RowBox[{
                 "\"PointAPitre\"", ",", "\"PointeAPitre\"", ",", 
                  "\"Guadeloupe\""}], "}"}]}], "]"}],
          "\"Entity[\\\"City\\\", {\\\"PointAPitre\\\", \\\"PointeAPitre\\\", \
\\\"Guadeloupe\\\"}]\"","\"city\""},
         "Entity"], "]"}], "]"}], ",", " ", 
      RowBox[{"Keys", "[", 
       RowBox[{"ExtractMapFeaturesFromPixels", "[", 
        TemplateBox[{
         "\"Point\[Hyphen]a\[Hyphen]Pitre\"",RowBox[{"Entity", "[", 
            RowBox[{"\"City\"", ",", 
              RowBox[{"{", 
                
                RowBox[{
                 "\"PointAPitre\"", ",", "\"PointeAPitre\"", ",", 
                  "\"Guadeloupe\""}], "}"}]}], "]"}],
          "\"Entity[\\\"City\\\", {\\\"PointAPitre\\\", \\\"PointeAPitre\\\", \
\\\"Guadeloupe\\\"}]\"","\"city\""},
         "Entity"], "]"}], "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesFeaturesNamesStats", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Keys", "[", 
       RowBox[{"ExtractCityStatsFeatures", "[", 
        TemplateBox[{
         "\"Point\[Hyphen]a\[Hyphen]Pitre\"",RowBox[{"Entity", "[", 
            RowBox[{"\"City\"", ",", 
              RowBox[{"{", 
                
                RowBox[{
                 "\"PointAPitre\"", ",", "\"PointeAPitre\"", ",", 
                  "\"Guadeloupe\""}], "}"}]}], "]"}],
          "\"Entity[\\\"City\\\", {\\\"PointAPitre\\\", \\\"PointeAPitre\\\", \
\\\"Guadeloupe\\\"}]\"","\"city\""},
         "Entity"], "]"}], "]"}], ",", " ", 
      RowBox[{"Keys", "[", 
       RowBox[{"ExtractCountryStatsFeatures", "[", 
        TemplateBox[{
         "\"Point\[Hyphen]a\[Hyphen]Pitre\"",RowBox[{"Entity", "[", 
            RowBox[{"\"City\"", ",", 
              RowBox[{"{", 
                
                RowBox[{
                 "\"PointAPitre\"", ",", "\"PointeAPitre\"", ",", 
                  "\"Guadeloupe\""}], "}"}]}], "]"}],
          "\"Entity[\\\"City\\\", {\\\"PointAPitre\\\", \\\"PointeAPitre\\\", \
\\\"Guadeloupe\\\"}]\"","\"city\""},
         "Entity"], "]"}], "]"}]}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7717103678210917`*^9, 3.771710443037757*^9}, {
   3.771710501391046*^9, 3.771710502730191*^9}, 3.7717105485962353`*^9, 
   3.771754106255994*^9},ExpressionUUID->"b7ccaacb-4cae-4131-83bc-\
5988196d0d69"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"citiesFeatures", " ", "=", " ", 
   RowBox[{"PrepareFeaturesAndNames", "[", 
    RowBox[{"RandomSample", "[", "citiesPopular", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesFeaturesValues", " ", "=", " ", 
   RowBox[{
   "citiesFeatures", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"citiesFeaturesNames", " ", "=", " ", 
   RowBox[{
   "citiesFeatures", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
   ";"}]}], "Code",
 CellChangeTimes->{{3.7717103678210917`*^9, 3.771710443037757*^9}, {
   3.771710501391046*^9, 3.771710502730191*^9}, 3.7717105485962353`*^9, {
   3.771754106255994*^9, 3.771754112584971*^9}, {3.771754360840928*^9, 
   3.771754411783168*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"bb173c12-eb58-4893-8cd5-1c15ce24398b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"citiesBlackBoxPredictorOnlyStats", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"citiesFeaturesValues", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", " ", 
        RowBox[{"1", ";;", 
         RowBox[{"Length", "[", "citiesFeaturesNamesStats", "]"}]}]}], 
       "\[RightDoubleBracket]"}], "\[Rule]", "citiesPositivness"}], ",", " ", 
     
     RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesBlackBoxPredictorOnlyMaps", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"citiesFeaturesValues", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", " ", 
        RowBox[{
         RowBox[{"Length", "[", "citiesFeaturesNamesStats", "]"}], ";;", 
         RowBox[{"Length", "[", "citiesFeaturesNames", "]"}]}]}], 
       "\[RightDoubleBracket]"}], "\[Rule]", "citiesPositivness"}], ",", " ", 
     
     RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesBlackBoxPredictor", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{"citiesFeaturesValues", "\[Rule]", "citiesPositivness"}], ",", 
     " ", 
     RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesBlackBoxPredictorANN", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{
     RowBox[{"citiesFeaturesValues", "\[Rule]", "citiesPositivness"}], ",", 
     " ", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771709837759416*^9, 3.771709859563526*^9}, {
   3.771709939476246*^9, 3.771709960425024*^9}, {3.771710004765254*^9, 
   3.771710008009511*^9}, 3.771710860314969*^9, {3.771752790188518*^9, 
   3.771752821522493*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"e777ef22-5b22-4321-919b-5b5a555a01a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Information", "[", "citiesBlackBoxPredictorOnlyStats", "]"}], 
     ",", " ", 
     RowBox[{"Information", "[", "citiesBlackBoxPredictorOnlyMaps", "]"}], 
     ",", " ", 
     RowBox[{"Information", "[", "citiesBlackBoxPredictor", "]"}], ",", " ", 
     RowBox[{"Information", "[", "citiesBlackBoxPredictorANN", "]"}]}], "}"}],
    "}"}], "]"}]], "Code",
 CellChangeTimes->{{3.771709970895083*^9, 3.7717099754348392`*^9}, {
  3.771710803644577*^9, 3.771710816724926*^9}, {3.771752811644929*^9, 
  3.7717528149661703`*^9}, {3.771752858013199*^9, 3.77175285982478*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"f41349f5-ce2c-42a4-936d-e2e8197ee805"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"\"NumericalVector\"",StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "40", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]},
                   "RowDefault"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"0.0328944388012120947`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0065590831326470022`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0197762725359180921`3.", "\", \"", 
                    "0.0460126050665060973`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    0.0197762725359180921`3., ", ", 0.0460126050665060973`3., 
                    "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"LinearRegression\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"L1Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "L2Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {
                    "OptimizationMethod"} -> 
                    TypeSystem`PackageScope`AtomShape[134.40000000000003`]], 
                    1], "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[285139495], "Type" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "HandleQ" -> True, "RowTarget" -> 
                    20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[285139495]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1213511980][{
                    Key["L1Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1213511980][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1213511980][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"L2Regularization\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1213511980][{
                    Key["L2Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1213511980][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1000000."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1213511980][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1213511980][{
                    Key["OptimizationMethod"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1213511980][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["NormalEquation", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1213511980][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1213511980][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1213511980]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1213511980][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1213511980][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> "NormalEquation"], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 
                    Association["ID" -> 228685707890781]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "1.72`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "145.`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    
                    TemplateBox[{
                    RowBox[{"-", "1.4786387007141090777`3."}],StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.024628246821837424`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    TemplateBox[{"\"95% confidence interval: [\"", 
                    RowBox[{"-", "1.5278951943577838701`3."}], "\", \"", 
                    RowBox[{"-", "1.4293822070704342853`3."}], "\"]\""}, 
                    "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", \
-1.5278951943577838701`3., ", ", -1.4293822070704342853`3., "]"}], 
                    "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"224.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"100","\"examples\"","examples","\"Examples\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"1.51`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -3.101053096436703}, {
                    4.382026634673881, -3.4144516688963744`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -3.101053096436703}}, {{
                    4.382026634673881, -3.4144516688963744`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -3.3654003267063843`}, {
                    2.70805020110221, -2.892176371863673}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -3.6368429205915587`}, {
                    4.382026634673881, -3.2326319597851443`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, -3.4318627006996896`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-3.4318627006996896`, -3.101053096436703}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.276423013688172}, {
                    4.382026634673881, -1.478638700714109}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -0.276423013688172}}, {{
                    4.382026634673881, -1.478638700714109}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -0.5460220353071873}, {
                    2.70805020110221, -0.006823992069156737}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -1.5032669475359466`}, {
                    4.382026634673881, -1.4540104538922716`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.478638700714109, 0}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.02]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.49295190480924506`}, {
                    4.382026634673881, -1.4831010498784876`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228690002858077]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.970303317938664, 1.9494830284166864`}, {
                    4.382026634673881, -0.20720562443009238`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228694297825373]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, 0.1510276423489092}, {
                    4.382026634673881, 0.1510276423489092}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228698592792669]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.5179536825105688}, {
                    4.382026634673881, -1.6007265433642326`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228702887759965]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, -0.12799934918711062`}, {
                    4.382026634673881, -0.12799934918711062`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228707182727261]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, -0.24960295781907074`}, {
                    4.382026634673881, -0.24960295781907074`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228711477694557]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.48707102390497203`}, {
                    4.382026634673881, -1.479059097509931}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228715772661853]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.2269976645737164}, {
                    4.382026634673881, -1.478638700714109}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228720067629149]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.937939093749322}, {
                    4.382026634673881, -1.6428959554399836`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228724362596445]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.276423013688172}, {
                    4.382026634673881, -1.5129876009229752`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228728657563741]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.49295190480924506`}}, {{
                    4.382026634673881, -1.4831010498784876`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228690002858077]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 8.561416002454173}}, {{
                    4.382026634673881, -0.20720562443009238`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228694297825373]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, 0.1510276423489092}}, {{
                    4.382026634673881, 0.1510276423489092}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228698592792669]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.5179536825105688}}, {{
                    4.382026634673881, -1.6007265433642326`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228702887759965]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, -0.12799934918711062`}}, {{
                    4.382026634673881, -0.12799934918711062`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228707182727261]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, -0.24960295781907074`}}, {{
                    4.382026634673881, -0.24960295781907074`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228711477694557]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.48707102390497203`}}, {{
                    4.382026634673881, -1.479059097509931}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228715772661853]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.2269976645737164}}, {{
                    4.382026634673881, -1.478638700714109}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228720067629149]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.937939093749322}}, {{
                    4.382026634673881, -1.6428959554399836`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228724362596445]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.276423013688172}}, {{
                    4.382026634673881, -1.5129876009229752`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228728657563741]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228690002858077]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228694297825373]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228698592792669]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228702887759965]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228707182727261]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228711477694557]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228715772661853]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228720067629149]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228724362596445]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228728657563741]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228690002858077]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228694297825373]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228698592792669]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228702887759965]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228707182727261]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228711477694557]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228715772661853]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228720067629149]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228724362596445]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228728657563741]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.6428959554399836`, 1.9494830284166864`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -3.101053096436703}, {
                    4.382026634673881, -3.4144516688963744`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -3.101053096436703}}, {{
                    4.382026634673881, -3.4144516688963744`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -3.3654003267063843`}, {
                    2.70805020110221, -2.892176371863673}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -3.6368429205915587`}, {
                    4.382026634673881, -3.2326319597851443`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, -3.4318627006996896`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-3.4318627006996896`, -3.101053096436703}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.276423013688172}, {
                    4.382026634673881, -1.478638700714109}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -0.276423013688172}}, {{
                    4.382026634673881, -1.478638700714109}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -0.5460220353071873}, {
                    2.70805020110221, -0.006823992069156737}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -1.5032669475359466`}, {
                    4.382026634673881, -1.4540104538922716`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.478638700714109, 0}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.02]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.49295190480924506`}, {
                    4.382026634673881, -1.4831010498784876`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228690002858077]]}, Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{3.970303317938664, 1.9494830284166864`}, {
                    4.382026634673881, -0.20720562443009238`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228694297825373]]}, Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, 0.1510276423489092}, {
                    4.382026634673881, 0.1510276423489092}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228698592792669]]}, Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.5179536825105688}, {
                    4.382026634673881, -1.6007265433642326`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228702887759965]]}, Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, -0.12799934918711062`}, {
                    4.382026634673881, -0.12799934918711062`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228707182727261]]}, Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{4.382026634673881, -0.24960295781907074`}, {
                    4.382026634673881, -0.24960295781907074`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228711477694557]]}, Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.48707102390497203`}, {
                    4.382026634673881, -1.479059097509931}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228715772661853]]}, Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.2269976645737164}, {
                    4.382026634673881, -1.478638700714109}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228720067629149]]}, Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.937939093749322}, {
                    4.382026634673881, -1.6428959554399836`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228724362596445]]}, Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.276423013688172}, {
                    4.382026634673881, -1.5129876009229752`}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228728657563741]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.49295190480924506`}}, {{
                    4.382026634673881, -1.4831010498784876`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228690002858077]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, 8.561416002454173}}, {{
                    4.382026634673881, -0.20720562443009238`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228694297825373]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, 0.1510276423489092}}, {{
                    4.382026634673881, 0.1510276423489092}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228698592792669]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.5179536825105688}}, {{
                    4.382026634673881, -1.6007265433642326`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228702887759965]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, -0.12799934918711062`}}, {{
                    4.382026634673881, -0.12799934918711062`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228707182727261]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    4.382026634673881, -0.24960295781907074`}}, {{
                    4.382026634673881, -0.24960295781907074`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228711477694557]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.48707102390497203`}}, {{
                    4.382026634673881, -1.479059097509931}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228715772661853]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.2269976645737164}}, {{
                    4.382026634673881, -1.478638700714109}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228720067629149]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.937939093749322}}, {{
                    4.382026634673881, -1.6428959554399836`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228724362596445]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.276423013688172}}, {{
                    4.382026634673881, -1.5129876009229752`}}}]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228728657563741]]}, Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228690002858077]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228694297825373]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228698592792669]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association["L1Regularization" -> 0, "L2Regularization" -> 
                    100., "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228702887759965]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228707182727261]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228711477694557]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228715772661853]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228720067629149]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228724362596445]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228728657563741]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228690002858077]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.1, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228694297825373]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228698592792669]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228702887759965]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.01, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228707182727261]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 0.00001, 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228711477694557]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 100000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228715772661853]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association["L1Regularization" -> 0, "L2Regularization" -> 
                    1.*^6, "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228720067629149]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 10., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228724362596445]]}, Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]]}, 
                    Column[{
                    Style["LinearRegression", 
                    GrayLevel[0], 16], 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1000., 
                    "OptimizationMethod" -> Automatic], 
                    
                    TypeSystem`Struct[{"L1Regularization", "L2Regularization",
                     "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], TypeSystem`AnyType}], 
                    Association["ID" -> 228728657563741]]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}}, {DisplayFunction -> Identity, DisplayFunction -> 
                    Identity, AspectRatio -> GoldenRatio^(-1), 
                    Axes -> {True, True}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.6428959554399836`, 1.9494830284166864`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{330., {117., 122.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              ".SF NS Text", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"], 
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"\"NumericalVector\"",StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "12", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]},
                   "RowDefault"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"0.0302871036732197847`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0105982629389527773`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0090905777953142301`3.", "\", \"", 
                    "0.0514836295511253428`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    0.0090905777953142301`3., ", ", 0.0514836295511253428`3., 
                    "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"LinearRegression\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"L1Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "L2Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {
                    "OptimizationMethod"} -> 
                    TypeSystem`PackageScope`AtomShape[134.40000000000003`]], 
                    1], "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[1659114522], "Type" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "HandleQ" -> True, "RowTarget" -> 
                    20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[1659114522]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1548563897][{
                    Key["L1Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1548563897][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1548563897][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1548563897][{
                    Key["L2Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1548563897][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0.000001"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1548563897][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1548563897][{
                    Key["OptimizationMethod"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1548563897][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["NormalEquation", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1548563897][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1548563897][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1548563897]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1548563897][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1548563897][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^-6, 
                    "OptimizationMethod" -> "NormalEquation"], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 
                    Association["ID" -> 101228258414685]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "1.31`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "353.`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    
                    TemplateBox[{
                    RowBox[{"-", "1.7373812969875717105`3."}],StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.079434239794151193`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    TemplateBox[{"\"95% confidence interval: [\"", 
                    RowBox[{"-", "1.8962497765758741242`3."}], "\", \"", 
                    RowBox[{"-", "1.5785128173992692968`3."}], "\"]\""}, 
                    "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", \
-1.8962497765758741242`3., ", ", -1.5785128173992692968`3., "]"}], 
                    "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"222.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"100","\"examples\"","examples","\"Examples\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"1.14`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -3.095137947985557}, {
                    4.382026634673881, -3.4970332784151696`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -3.095137947985557}}, {{
                    4.382026634673881, -3.4970332784151696`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -3.3694993139879386`}, {
                    2.70805020110221, -2.8800728329359875`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -3.927703263926873}, {
                    4.382026634673881, -3.1969830644969996`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, -3.51936079677237}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-3.51936079677237, -3.095137947985557}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.5524860657235198}, {
                    4.382026634673881, -1.7373812969875717`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -0.5524860657235198}}, {{
                    4.382026634673881, -1.7373812969875717`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -0.8032247750307868}, {
                    2.70805020110221, -0.30174735641625267`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -1.816815536781723}, {
                    4.382026634673881, -1.6579470571934205`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.7373812969875717`, 0}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.02]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    
                    Graphics[{{{}, {}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.7373812969875717`, 2.6936522261960527`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -3.095137947985557}, {
                    4.382026634673881, -3.4970332784151696`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -3.095137947985557}}, {{
                    4.382026634673881, -3.4970332784151696`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -3.3694993139879386`}, {
                    2.70805020110221, -2.8800728329359875`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    Line[{{4.382026634673881, -3.927703263926873}, {
                    4.382026634673881, -3.1969830644969996`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, -3.51936079677237}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-3.51936079677237, -3.095137947985557}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.5524860657235198}, {
                    4.382026634673881, -1.7373812969875717`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], GraphicsBoxOptions -> {
                    DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -0.5524860657235198}}, {{
                    4.382026634673881, -1.7373812969875717`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -0.8032247750307868}, {
                    2.70805020110221, -0.30174735641625267`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -1.816815536781723}, {
                    4.382026634673881, -1.6579470571934205`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.7373812969875717`, 0}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.02]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    
                    Graphics[{{{}, {}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.7373812969875717`, 2.6936522261960527`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{330., {119., 123.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              ".SF NS Text", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"], 
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"\"NumericalVector\"",StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "51", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]},
                   "RowDefault"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"0.0306812260112816378`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0054457955914173845`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0197896348284468671`3.", "\", \"", 
                    "0.0415728171941164085`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    0.0197896348284468671`3., ", ", 0.0415728171941164085`3., 
                    "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"LinearRegression\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 20, "Length" -> 3, "InitialType" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "Shape" -> 
                    TypeSystem`PackageScope`DocumentShape[
                    
                    Association[{"L1Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[34], {
                    "L2Regularization"} -> 
                    TypeSystem`PackageScope`AtomShape[60], {
                    "OptimizationMethod"} -> 
                    TypeSystem`PackageScope`AtomShape[134.40000000000003`]], 
                    1], "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[1832949369], "Type" -> 
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], "HandleQ" -> True, "RowTarget" -> 
                    20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[1832949369]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L1Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1487634271][{
                    Key["L1Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1487634271][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1487634271][
                    GeneralUtilities`Slice[
                    Key["L1Regularization"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"L2Regularization\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1487634271][{
                    Key["L2Regularization"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1487634271][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1000000."], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1487634271][
                    GeneralUtilities`Slice[
                    Key["L2Regularization"]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"OptimizationMethod\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1487634271][{
                    Key["OptimizationMethod"]}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1487634271][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["NormalEquation", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1487634271][
                    GeneralUtilities`Slice[
                    Key["OptimizationMethod"]]], "Mouse"], 
                    ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1487634271][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1487634271]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1487634271][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1487634271][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    "L1Regularization" -> 0, "L2Regularization" -> 1.*^6, 
                    "OptimizationMethod" -> "NormalEquation"], 
                    
                    TypeSystem`Struct[{
                    "L1Regularization", "L2Regularization", 
                    "OptimizationMethod"}, {
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[String]}], 
                    Association["ID" -> 261933049729118]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "1.76`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "138.`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    
                    TemplateBox[{
                    RowBox[{"-", "1.3532281355538868794`3."}],StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0177838811744763826`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    TemplateBox[{"\"95% confidence interval: [\"", 
                    RowBox[{"-", "1.3887958979028396378`3."}], "\", \"", 
                    RowBox[{"-", "1.3176603732049341211`3."}], "\"]\""}, 
                    "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", \
-1.3887958979028396378`3., ", ", -1.3176603732049341211`3., "]"}], 
                    "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"230.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"100","\"examples\"","examples","\"Examples\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"1.4`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -3.10121641587885}, {
                    4.382026634673881, -3.4841043420272206`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -3.10121641587885}}, {{
                    4.382026634673881, -3.4841043420272206`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -3.3644603677347567`}, {
                    2.70805020110221, -2.89302763919441}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -3.6795063028715607`}, {
                    4.382026634673881, -3.3207141727949288`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, -3.505375893479908}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-3.505375893479908, -3.10121641587885}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.280697433172254}, {
                    4.382026634673881, -1.3532281355538869`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -0.280697433172254}}, {{
                    4.382026634673881, -1.3532281355538869`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -0.5503178007874564}, {
                    2.70805020110221, -0.011077065557051569`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -1.3710120167283633`}, {
                    4.382026634673881, -1.3354442543794105`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.3532281355538869`, 0}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.02]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    
                    Graphics[{{{}, {}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.547923591886077, 35.30314682219158}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -3.10121641587885}, {
                    4.382026634673881, -3.4841043420272206`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -3.10121641587885}}, {{
                    4.382026634673881, -3.4841043420272206`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -3.3644603677347567`}, {
                    2.70805020110221, -2.89302763919441}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -3.6795063028715607`}, {
                    4.382026634673881, -3.3207141727949288`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, -3.505375893479908}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-3.505375893479908, -3.10121641587885}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -0.280697433172254}, {
                    4.382026634673881, -1.3532281355538869`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -0.280697433172254}}, {{
                    4.382026634673881, -1.3532281355538869`}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -0.5503178007874564}, {
                    2.70805020110221, -0.011077065557051569`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -1.3710120167283633`}, {
                    4.382026634673881, -1.3354442543794105`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.3532281355538869`, 0}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.02]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    
                    Graphics[{{{}, {}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-1.547923591886077, 35.30314682219158}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{330., {119., 123.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              ".SF NS Text", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"], 
     TagBox[
      StyleBox[
       FrameBox[GridBox[{
          {
           ItemBox[
            FrameBox[
             StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
              StripOnInput->False,
              FontSize->12],
             FrameMargins->{{10, 5}, {-4, 2}},
             FrameStyle->None,
             StripOnInput->False],
            Alignment->{Left, Bottom},
            Background->RGBColor[0.96, 0.96, 0.96],
            Frame->{{False, False}, {True, False}},
            FrameStyle->Opacity[0.1],
            ItemSize->{Automatic, 1},
            StripOnInput->False]},
          {
           ItemBox[
            TagBox[
             FrameBox[
              TagBox[GridBox[{
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Data type\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"\"NumericalVector\"",StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "51", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]},
                   "RowDefault"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Standard deviation\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"0.0373402117032342468`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0142434185685079637`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    
                    TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0088533745662183194`3.", "\", \"", 
                    "0.0658270488402501741`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", 
                    0.0088533745662183194`3., ", ", 0.0658270488402501741`3., 
                    "]"}], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Method\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox["\<\"NeuralNetwork\"\>",
                    TemplateBox[{
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
                    Data`UnorderedAssociation[
                    "RowCount" -> 2, "Length" -> 2, "InitialType" -> 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], "Shape" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`UnknownShape, 
                    TypeSystem`PackageScope`AtomShape[34]]], 2, {}], 
                    "InitialData" -> 
                    TypeSystem`PackageScope`CacheHandle[1673339814], "Type" -> 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], "HandleQ" -> True, 
                    "RowTarget" -> 20, "Data" -> 
                    TypeSystem`PackageScope`CacheHandle[1673339814]], 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Pane[
                    Annotation["NetworkDepth", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1896053084][
                    GeneralUtilities`Slice[
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["8"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1896053084][
                    GeneralUtilities`Slice[
                    Key["NetworkDepth"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "MaxTrainingRounds", FontFamily -> "Source Code Pro", 
                    FontSize -> 13, ShowStringCharacters -> True]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1896053084][
                    GeneralUtilities`Slice[
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    ImageSize -> {{60, Full}, Automatic}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1000"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1896053084][
                    GeneralUtilities`Slice[
                    Key[MaxTrainingRounds]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                    TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1896053084][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`Pathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1896053084]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                    Dynamic[
                    Replace[
                    MouseAnnotation[Null], {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1896053084][Null] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1896053084][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 
                    0, FrameMargins -> 0, Alignment -> Top, 
                    ImageSize -> {Automatic, 14}]}, 
                    DynamicBox[
                    ToBoxes[
                    Column[
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                    TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                    TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                    TypeSystem`NestedGrid`PackagePrivate`alignBar[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$][
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                    Spacings -> 
                    If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                    0, {{}, {0, 0.05, 0}}]], StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    Initialization :> Block[{$ContextPath = $ContextPath}, 
                    Needs["TypeSystem`"]], DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
                    TypeSystem`NestedGrid`PackagePrivate`deleteState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], Deploy, 
                    DefaultBaseStyle -> "Deploy"]}, "CopyTag", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> ("Dataset[<>]"& )]],
                   Annotation[#, 
                    Dataset[
                    Association[
                    "NetworkDepth" -> 8, MaxTrainingRounds -> 1000], 
                    TypeSystem`Assoc[TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer], 2], 
                    Association["ID" -> 259446263664734]], "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Single evaluation time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "2.44`",
                    RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}],
                    "milliseconds per example",FractionBox[
                    "\"Milliseconds\"", "\"Examples\""]},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Batch evaluation speed\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  
                  TemplateBox[{
                   "40.9`",
                    RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}],
                    "examples per millisecond",FractionBox[
                    "\"Examples\"", "\"Milliseconds\""]},
                   "Quantity"]},
                 {
                  TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss\"", "\"Mean cross entropy\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"6.9068280409913134221`3.",StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "9.6727586112435446353`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                    TemplateBox[{"\"95% confidence interval: [\"", 
                    RowBox[{"-", "12.4386891814957749602`3."}], "\", \"", 
                    "26.2523452634784035808`3.", "\"]\""}, "RowDefault"],
                    TooltipStyle->{}],
                   Annotation[#, 
                    
                    Row[{"95% confidence interval: [", \
-12.4386891814957749602`3., ", ", 26.2523452634784035808`3., "]"}], 
                    "Tooltip"]& ]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Model memory\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"430.`","\"kB\"","kilobytes","\"Kilobytes\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox[
                    "\"Training examples used\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"100","\"examples\"","examples","\"Examples\""},
                   "Quantity"]},
                 {
                  
                  TemplateBox[{
                   TemplateBox[{5}, "Spacer1"],StyleBox["\"Training time\"", 
                    GrayLevel[0.4], StripOnInput -> False]},
                   "RowDefault"], 
                  TemplateBox[{"5.88`","\"s\"","seconds","\"Seconds\""},
                   "Quantity"]},
                 {
                  ItemBox[
                   
                   DynamicModuleBox[{
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                    DynamicBox[ToBoxes[
                    Show[
                    Part[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -2.550821938220095}, {
                    4.382026634673881, -3.287684471274717}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -2.550821938220095}}, {{
                    4.382026634673881, -3.287684471274717}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -2.7063352835029404`}, {
                    2.70805020110221, -2.41626976368431}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -3.7680614964280426`}, {
                    4.382026634673881, -2.9645508996224548`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, -3.3286212786666405`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-3.3286212786666405`, -2.550821938220095}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 12.414683343964278`}, {
                    4.382026634673881, 6.906828040991313}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    12.414683343964278`}}, {{4.382026634673881, 
                    6.906828040991313}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 7.880063735848033}, {
                    2.70805020110221, 16.949302952080522`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -2.765930570252231}, {
                    4.382026634673881, 16.57958665223486}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 6.600836079715038}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {6.600836079715038, 12.414683343964278`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    Graphics[{{{}, {}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {0, 24.571999914808128`}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Max[MachineLearning`file12Panel`PackagePrivate`pos$$ - 1, 
                    1], Appearance -> "Frameless"], 
                    Part[{"Standard deviation", 
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = 
                    Min[MachineLearning`file12Panel`PackagePrivate`pos$$ + 1, 
                    
                    Length[{
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, -2.550821938220095}, {
                    4.382026634673881, -3.287684471274717}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{
                    2.70805020110221, -2.550821938220095}}, {{
                    4.382026634673881, -3.287684471274717}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, -2.7063352835029404`}, {
                    2.70805020110221, -2.41626976368431}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -3.7680614964280426`}, {
                    4.382026634673881, -2.9645508996224548`}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, -3.3286212786666405`}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, FrameTicks -> {{Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}, {
                    Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Exp[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {-3.3286212786666405`, -2.550821938220095}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , Quiet[
                    
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }}], 
                    Graphics[{{{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    
                    Line[{{2.70805020110221, 12.414683343964278`}, {
                    4.382026634673881, 6.906828040991313}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    GeometricTransformation[
                    Inset[
                    Style[
                    Graphics[{
                    EdgeForm[], 
                    Disk[{0, 0}]}], 
                    GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}], {0., 0.}, Automatic, 
                    Offset[6.272]], {{{2.70805020110221, 
                    12.414683343964278`}}, {{4.382026634673881, 
                    6.906828040991313}}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{2.70805020110221, 7.880063735848033}, {
                    2.70805020110221, 16.949302952080522`}}]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    
                    Line[{{4.382026634673881, -2.765930570252231}, {
                    4.382026634673881, 16.57958665223486}}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {}, {}, {}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]]}, {
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.368417, 0.506779, 
                    0.709798]]}, {}, {}, {}}}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 6.600836079715038}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {6.600836079715038, 12.414683343964278`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}], 
                    
                    Graphics[{{{}, {}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.669333466716784, 0}, DisplayFunction :> 
                    Identity, Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    "training examples used", None}}, 
                    FrameTicks -> {{Automatic, None}, {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , {}}}, 
                    GridLines -> {Charting`ScaledTickValues[{
                    Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {"OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Exp[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{2.669333466716784, 
                    Log[100]}, {0, 24.571999914808128`}}, PlotRangeClipping -> 
                    True, PlotRangePadding -> {{
                    Scaled[0.02], 0}, {
                    Scaled[0.02], 
                    Scaled[0.05]}}, Ticks -> {Quiet[
                    Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
                    Automatic}}]}]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                    ImageSizeCache->{330., {121., 125.}}],
                    DynamicModuleValues:>{}],
                   Alignment->Center,
                   StripOnInput->False], "\[SpanFromLeft]"}
                },
                AutoDelete->False,
                ColumnsEqual->False,
                
                GridBoxAlignment->{
                 "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
                GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
                
                GridBoxItemSize->{
                 "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], 
                    Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}],
               "Grid"],
              FrameMargins->{{10, 10}, {10, 5}},
              FrameStyle->None,
              StripOnInput->False],
             Deploy,
             DefaultBaseStyle->"Deploy"],
            Alignment->Center,
            
            BaseStyle->{
             FontWeight -> "Light", FontSize -> 11, FontFamily -> 
              ".SF NS Text", NumberMarks -> False, Deployed -> False},
            StripOnInput->False]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], 
             Offset[0.8], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Background->GrayLevel[1],
        FrameMargins->{{0, 0}, {0, 0}},
        FrameStyle->GrayLevel[0.85],
        RoundingRadius->5,
        StripOnInput->False],
       StripOnInput->False,
       LineBreakWithin->False],
      Deploy,
      DefaultBaseStyle->"Deploy"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.771709976728957*^9, 3.771710819250382*^9, 3.7717117612541*^9, {
   3.771752837655056*^9, 3.771752862774149*^9}},
 CellLabel->
  "Out[179]=",ExpressionUUID->"98f805b1-67c5-4bb7-aeb6-4b29d88710e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"Abs", "[", 
   RowBox[{"Covariance", "[", 
    RowBox[{
     RowBox[{"PrepareFeaturesAndNames", "[", "citiesPopular", "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}], "]"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.771691374454886*^9, 3.771691375723896*^9}, {
   3.77169441948938*^9, 3.771694436092937*^9}, {3.771694877613312*^9, 
   3.771694879872117*^9}, {3.771754543993594*^9, 3.771754593846302*^9}, {
   3.771754637270062*^9, 3.771754673529875*^9}, 3.771754740955291*^9, {
   3.771755730727605*^9, 3.771755753573873*^9}, {3.771755886848434*^9, 
   3.771755900094747*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"a1ee4fab-ca0a-476a-939e-0d3ea134d579"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
e2Iv+S7iINfAp/Ma6UepzLr66DRSPzZEnB70QoD82sTN/yazGF2j232qRIiC
kEF/yh41YtHGY+NWD2YRm8N7O81RCBm/fVd4knpwtIPnSP4juLzta/SuFi6S
7idq7ttZAFkblbhQBwaH5YauK/YgPOti9OLRsSV4NLqwPvg46TuZ28wyFosR
uk2tIMq0HZzdH685ixic83cZZdgpQGBt1/fdqIPQ8N2vISsJzkm22VPpL8IU
1zne8hEtGJVz7VHoLdIP3DM01/rzsWvJjKIHIYRPdTh/9HcjeLe5f8S3ThFc
xU2fDvu0waGLq/buI4Mv8zNOFSwjfTd55LGtYdUYPCd77ZdSBr5pF/LjvAVI
vfgqzcy9BqLLgW8HzpH6YFo8VHa3GCKV1Mezn7fjov6T5LS3pC9Lbg/7T1+C
wceGHbF+RXD4atc7gfcYnG63FfjH8aH46vfwHO2vyFtgkXzitQRDo179dIzv
gEyDTMaq7mfU+kbDbzR+Sjt/o90v0O5PafMhtPk32nwvTb9A02fR9Kc0fT3N
P4Tmj0Tzf6P5W9L8e2n+5Gmm5r/sT0kx1MbXQaRK+MfFdN9LqyQwu/LCe9cM
Bm4vLNlZ4VzoJ4a168/6DKkd0uViWVgtznhxuE4Mj96/9iZVHZjVFLbAVY7g
fEajRIf0/5UzT+co3+HDyvf76u4XDObJdygf/M3Ht6knzzYdrYLuGvW9wYRn
vtq4ecP9h2Q/zSkLVJgshsM0r8AxegyGneLsWP2Ki6Hi3XPXjs5Hwo+Es75H
CY8b1H1mi54YzLj/isKU2xEUcyRUnjyfq/PZrjuyQuiJpoxJuVaHxgce8WoJ
LKaFf4he2i3G9PMqpV0TOTh6L/zGcwcpfn29VelwmoW/e5+XUroIq7STMkJ0
pNh4rz6mrIpBhfrl8+f6CU/xUkkwvcnictfdxNsxYsQEZG/+bt6B4YkBd+cH
M9in6n9763o+DjgcfHRLUoEXgSvueFYTHhE37GRKlARWNap3/Uu52Fe/86ch
wW9/v2y4vSdXgrbO+wOuiwg+ki/YoB8rxfIvQeH7YqR4e2lmxaCnDFxPndio
HsEgMeNpV2UwH/3nm9YnF1Ziv9zWsZK55PWk85JG6YhwcK7zCfGoZhzYsAdJ
ZJ3NOrN+qb4jj+AT76vVZiVQjb++otCYwR3zz/vtOrlYefiRjze/AFk7dbSW
EHybor3eOqmH9IWI441y58qRpX5j9B2+BE+0HulcPcfBC0s33fGH32NNJcwm
u5LXU2RgLPuQh+sK51vbj5TB+7VUbT5XAsVg5WvDSd9SS1w0/kpJOqI9U1y/
6f1PR/j3vRZZfxmKhcHn9fIRdL1v+52NLCb5JaX5vxeh4ctjq5EtrTidO8/h
Uw3B7SbTG7/eE2C+Xsh054EamL0aWf8gkvTdiLWt6gFSDJpafuMfqcvfDG/K
lCxj4D8sM2izEg9qQ5O+DvtbCD2/ussFPRL4vRSJEss4ED+MHvdzWDa1vtHw
G42f0s7faPcLtPtT2nwIbf6NNt9L0y/Q9Fk0/SlNX0/zD6H5I9H832j+ljT/
Xpo/OS1/IUPjTfZxZykuBByfrRFP8Okl9VWzpovROZB1LH4og+1Ttfa+G0PW
IS+j5dGwHKRfd+n3GCC4uttre4itEG9Odb/ckV6PPAenog1cFtZ7U5uHEpy+
vdR+2SBnHs55xRxLP87AJmLwvuuDCa9uFPbUPC+HVvZ6mel/GFRPXHBJa4EQ
IQ3LMi7Z1ONbxMFjffIMjpU+fTdyJhfD+43+jc3KwS0vz1b3QgYjrdpiN7sK
sMVtiJfjxBr0mmir3dnHIDkt55p+IQ+71pzpXB7xBTtq88sv+7DQVlr159si
MeBU65lh2A5TBeUJFwhPWHNJd6o++bp/Ubh+E+Ermqn/xcaOkCJn9g6LPsKT
ftVuVk0o4yPEWVN+NKkrf9HkadnAh9qpgxrm/V8Rz1lxTqWCQZvinh0/zwtw
KKfrx7V7Nei6HVI76RaLJYdeL2mNE0NXqV7L17oDmeNieOdvMNhruuP11iN8
+Nu9Xn5oTyUc4gwSUjZLCf//qpF1mcXh8uyBbIKjxfIVAUVHCI6quvb3D8OD
eYRLvXhzOeQ8avWLnjDwnLUrekc5H8eXuZ5cU/sVenYmQVsJfrueJZuYVSiE
xhZDrsydRnyUipV85Fhs+LUo+Im7EBUHLnXZj23Az+hR5la2DMb4eTy3X8vD
e6U15WxhMQ74fB1mS3DyRpXTgSt2cFDX2564dNE7pPquq5phT/rTy2k6fg48
+KWcWjdpZAnM1A41PZRhUJq/6qrnTw4mVQ85nWv0EZsbN0wXOhIck+r7gH+R
h2l/j+25d78Uv/f8q+gCwZk3LjHN7iIkhI34FaPZgpKnuU+Gk89RWtikmvSZ
h1X5Zu1h57/AzPlsx/AZUuifOGofmM/A79ZtuZ5GAdTvcQ9/apJAwah0U8hm
DhQ7F8/yK31LrW80/Ebjp7TzN9r9Au3+lDYfQpt/o8330vQLNH0WTX9K09fT
/ENo/kg0/zeavyXNv5fmT07LX6Dly7xvkzed7y+F/NrXZ/iKUiy0a1R9tUCC
l3kWZlp2hL9k/zdONk6Eiykjt77Z3op77vhpMZwFVzrUe7W3EOXDhn3JXteA
Wzod/+TIc/j7IXC2g4YU7bq6pku2SnD22JDK5k8MplerTRKsF6Ck90Xy/aZq
tGfkXDcj661zQ9lQ6RgeWvYaXhgqKMTknKmpE8j7CZ70eG9TlhDbVZOnqx9t
RMSG1WM9ikkfCVyxUstTgNUMe0+4uAaXeSfMjxRJUPpUcnX/cA7uKqeo9ra9
QtB/o5ZOJHwhb6JhZewCLnJcJ68ZpJsLJe6MEngy2Nn8Jqe/mId3avMXuCd9
wY2mdq6+H6lflbIa0uF86DQsb276XI4MyTYlI8LXfig1bN/UyMXUjE8NW1YV
4JtAtvPgL4K7bM3bD01g0DBWatczlo+0Wu1fieT1O+R4a+zJEcJuuNB++qlG
pHEdNOJdpJAtNu5wfsHCT6vGNM5YjDnqHz2+2LCYrpTiP/S+COab/lv32aIV
Lm52L3N2sJDVZi6MaxFh9fGS5X1WbZhYJrsryZHFlmidXK9KEVp+2S59p9uG
K5+Ng2JXk7o99fcxXBXhy8o5d1O6WtBk3+Jc5M4itUua1vSDrCub0fxl59tw
NtJhpZsKC1O7ML3nyULc8Gg2O7agEa0LPj//MVKKgnTNJ3/dGByJOJcc18jH
SrvGnhcEl6p5Vs62jSU4fGDSeQ/LDqxU3xZ0/5gU7+QLDw7/zeLTfO9dcj/E
OJ1x7YKA4Oe8V9YL/8wR42zzK6Uvqu3InG9WYUH2id2N2DSlDwzKv46+nJ8t
gK16warBWSzaNAca+1dIUJk6Nnr2dw4e5aZPiNdncLAw8u7DTC62n5rlGrU7
n1rfaPiNxk9p52+0+wXa/SltPoQ2/0ab76XpF2j6LJr+lKavp/mH0PyRaP5v
NH9Lmn8vzZ+clr9Ay5eh5WcpV/YMmlXOQrhijXlZoAS/9BZYZUVysbb07KCu
6wwsx7ZsqPMi+7q0Mv3GjkqszpL8PX5OCvG306E79cg6mnaVM8dfgsdW/E2X
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
Gj+lnb/R7hdo96e0+RDa/BttvpemX6Dps2j6U5q+nuYfQvNHovm/0fwtaf69
NH9yWv4CLV+Glp9Fywek5Z/S8p1p+fV59Zr9Tc4Mli5c+mN+FA9NajG332iX
oabbMLzbkgXz61Ty5PMinK07863rQwvaxbGDs7MZjGnYPS1oiQAZi4e03ztf
jfk5Q498Zkgd6JA16uySQI5jWTeQwkOBqMsmvITFg8e+dWt9JXAcurkhxpsL
55VbnIe+ZhCSU6zaPkSAUJGrW2ZCFcI1z5lU2EtxM1+gkeX1v1zLoNmat0Qw
/e+gxgNDFledLbdeMhAh7lfAqC2zm5HoEFT4dwWDe7uH/hc3nQft9Tbd4ktF
qCpt1zzwnjwHPWf2uJEEJkt21fSXciC2Xqq88BnpLy63dhn8E2MqL2domD4H
AZ6Nv9IIj72tbtelVCXEvw1vje/lNsL4nkVb+n0pFP7JLNl5k9QVK+sT4y8y
CC497f0jgdT51jOqXr/ECEyvFi2eysGU3ocHn5UwiN3avvvJIQEWfFe6GWtf
g41+8etbCV/z+0+Ot34Lg4xNC1c6fOBD6YfsnPu9DATCgJ0blwuxuPt14ebL
9UiQNXPPGiOF99MzE8cTHnZubmt7xkgB7touydysxKL3gaWBY6wQCc9kzVVk
GnHi/eAoh3AGb3Mrfow4z8fjwvA4xWeVyNmytCM8W4KYEvcZNs0dcCvd4XPV
5CWKdqzmOOWR57K96U8l24Fsv6mhXmYp6HkwdumSfAm+ajWUufztgNeI+wlj
5V5h+tzjyxaTfuyb8UT+zvcOCLPnvpP6plDrGw2/0fgp7fyNdr9Auz+lzYfQ
5t9o8700/QJNn0XTn9L09TT/EJo/Es3/jeZvSfPvpfmT0/IXaPkytPwsWj4g
Lf+Ulu9My68v0i35HLlEirNj5npunU5eZ+WVgH2lZL9mjfjsPJ/s98PzfL4Y
iqB+Q/6YsVEzyp13renxYHFzyKegJhkxNuwp++ET1waLGyMULC1Y7LTNjjH2
FkEVJ6ekH2uB14PkY3q3WVRG7+X4JIuhGtJbE7unA4brIm88e0fWd/YVt8p5
EnTsGLkrJYOD6KR8l5FjpQi4lf319wmy7/X5WocnCPBrVdDJ5x9ZRJXMPKNs
J8HZsT9f7ZLnQs/ZvWK/tRSzY9Q23NnMYv7Rxl4HB8Lj7Se7jhwtRaYG8zHW
izyfXKfIn3/4WHD2wFKv8yzGzvdemughBt50pJx82Y6Xl2dO4pN/141RubVn
rxhf2qYOl0trh0IK7/CL7VIcyFYVuzxgsWPAcstDJTFU+vZbXwyVIsR45IT3
TlJ4LdHOv9wrwQq58c2XbpF+LdiZe/YReb9GPpszbDswT//24V6CG3YN13qj
+YAPr+3Pkn3Vv+Kv1uXcJwMsVhUZK1maMNi9bsSr6558GI39p/RmJItSfnRw
b4AQU948Glnp3wAVy9C2T6akj8cdHdKyheDO91/cFnQ0Y7S6d9J/8iyGO05Y
pH1OiIKczpfrLzRgccPKMcbuDNwOPXli8ZyHnRajPV9klOGD0aWNuxMkGP3w
rbnIpwOabsG6Wf2PULC2V+HCGwmCAx77PUztQOiTo/EaYc8xLS+1JovUscjF
ppx7vR2YzjWbozvzFbW+0fAbjZ/Szt9o9wu0+1PafAht/o0230vTL9D0WTT9
KU1fT/MPofkj0fzfaP6WNP9emj85LX+Bli9Dy8+i5QPS8k9p+c60/HqZewOq
TgQXVbgt0tj5XQK7JTaOP5J4iBQbLutQkUJN8vv3iquEx9d5RypYCvDBYMr0
cjUW/d8mBWmVC2Etnzxq8utGxD34Ns3ZncWwrRkW1t0iDL0uejUnoA05vf3D
Zzmw+Ldvoe2QNBHeL7yyKepjK6nzJYkuT1l071a5pvhbjJv8S7N9tDkoDa3Q
mpzDInfRoPIUewk2bbix9e4YLmROl434ZSeF6nrPprNknVYN/1WQSnhVqn9+
sWoB+f3d1lM3ekigt2uY/6nVXBi/tvEOnEX6uthn5ak6BvcjNg+dNFyI1jPr
N2jtkMLIUcF7VByL1u1O1X/GixHd6u81mKzvX37e4+RXiDHe6s/78g3tuL5v
xMIW8u+cKpdLq6zE+F5/unqpUzuSf7EGevOkWJFcIuv2k8FnS46+xXohtiwQ
zZwjZvHx3YCZukgCe91/BUcjedjtFK14oIeBgfszl8d6QowMjV2gPq8ekXts
z6bVS1CfN3BYz5oDTT2f9DH/3sDN423bFNIHF96MO23wleCx4I/p1n8F4Gyu
SpvY+L/5PMeunBcCfJvm6VS3qhZPX757cP+KBEufzjvj0d+Otk/h6++bheCG
kxwvl/D2AcPWkZ8z+bjRmX983I2v+OyY+NzwsQQTxcV7uKR/XHQOGf5wxUN8
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
   "], {{0, 0}, {51, 51}}, {
   0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{50.5, 
       FormBox["1", TraditionalForm]}, {41.5, 
       FormBox["10", TraditionalForm]}, {31.5, 
       FormBox["20", TraditionalForm]}, {21.5, 
       FormBox["30", TraditionalForm]}, {11.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["51", TraditionalForm]}}, {{50.5, 
       FormBox["1", TraditionalForm]}, {41.5, 
       FormBox["10", TraditionalForm]}, {31.5, 
       FormBox["20", TraditionalForm]}, {21.5, 
       FormBox["30", TraditionalForm]}, {11.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["51", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {29.5, 
       FormBox["30", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {50.5, 
       FormBox["51", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {29.5, 
       FormBox["30", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {50.5, 
       FormBox["51", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.771694421784465*^9, 3.771694436839675*^9}, 
   3.771694614094281*^9, 3.771694880734344*^9, 3.771703749525962*^9, 
   3.7717090247043657`*^9, 3.771709521020454*^9, 3.77170967253463*^9, 
   3.771710317592867*^9, 3.771711749314455*^9, 3.7717545464121*^9, 
   3.771754601418535*^9, 3.771754659828589*^9, 3.771754744603468*^9, {
   3.7717557384091883`*^9, 3.771755757770356*^9}, 3.7717559012865343`*^9},
 CellLabel->"Out[225]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
mtU/NDVrfiSflMrZ6gXecB1+uwG1geq33izHrXLcwk+gbSzEsgNKBEcW1OYx
pfqGyhab2rU/MtXLL5HxrV5xKe67QUBE3kUOjAHfsG7TTfSC2cBsJ/SamVS/
gxlHO/i+ay1P9EiBKpqaKtqiMkA626vW8Qyla1SVkFEKrcuYOVoQ99IF4CfN
fSuZZxpyH/E5aA8C/HY9wDGt24yZsFQ+M1DZumpHKARS32nIvhe/zb43YRp2
DsY/dw6Sj/fZlN6lPp9MxqwLodq2iA+pwHernKZZcpaKXEE5g+8xdB7IvCfk
6R7iEwbuOfF514Muf3an0kGmPude73d9kXQsPZFdTXlIz7EFZPI1vLwpF2kP
QtXNnh5p8gCpOK8+m/Ca4xWLuJffvT61IpkxlqPv28J8jUiSVY5bwPY/7RYR
GduaVT+U34LGLa/yIL8qvUb468embusvMSOW3m5qN98s3PZd+WTp8svkKleK
TOEMS7fdLudCTlgBS+n6n/C8ilmfkPtWzPp3+a5i1sdNFVzKOcx0zhnCxfAB
+qPlwHd7HnGMUr9L5vjIhP5gROO2u0Rv+IqpXvoNGSNQef4lF4niMcZFqfvU
n5o1Vws4IQPE6huLvmJaCib57DubucgIEJf+pElsT8l4XmWql32To3Mx6bcE
J6aLbK8mZ64kzcIImsq5n5XrVc77PMf8KsWJ9T8ivvyI8nu9KgebiGik7bIS
draJEsEoCaVI+HFOxsA7GVfLW37LVM75FEoMzf0M7rHiUlOT9T0cch6ofLfq
+8J7B033yfrIulFjYw02gceotKna2CPRSL5jFAcLJznf+8S0FaroOLcYMTlm
HenAjUK6k9WLL2ps/c67yEmh0NvJT7+UsfmBjOuV5FZS+dyQc7fPgiXNuUfH
auP1sXNJRZ3a+FNTv/kXnCt5kmTK92qKZUpOooijQm2qxoPNB1L4Ey7xNnuw
ZsK5AAKntMk/he9v9QlGWqhsPN+xq+Uw8MCnpbgSZcwg9ZW5tPaY1xGcptDV
cRwHPikV3QpVvOQAUDTm2t92d5YwdTZwCbRdZQJE+aZxz0Ng/z2Qo8ZcAbKd
d5qKN/8dgvgmBXH2J4UFz8chnxz9nKla8CUMtA436dWmOutyMm3c0TmfESH+
sg2kcPTnZGRV0i1d8jVTOf980QLeH4Mu8IEYciv+kiBg87I0Jb1gHINS5IjF
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
RCaY8M5Ck2/JVdJrpZjy9TcITT7rizCfI5ocxdLaoaLJ4T/pHAY0yZU3SeZZ
S6Cy4R1bPZmkUzRRHPmtYoqgyeU+8a2Ca2exPSAnmkz5Pr7eFJXW/R5bqdNo
gpPONXSbCb3nzLWQqMmBJt9nb3CY9IaVaft2QJOJ34uL+3Ola4Z0wH8rmqiV
lDUZPMO0ttP1U4W+OYomujbGn6yYEjdt7e1whIQVNPqXj/2mwxFm61CEIZqo
XzqL/ShHMlW+8AoW0yDjBPYFi24JicjcaNKH/LxkV3lONEGniExFTMrQTc1Z
5yn3okjtaCiKVjhECS9aVzELooe88Zh39imfxoJ3JSU/DVMmnUFNxVTFZcHl
as04kYp/JhD6beRegShYhzZ+UZWEx35D11egdQ/Nwiazq/9maKL+9cc5NGEW
9l/5exzlZyRKrZyqJobDtagKysreolHIwpKoWDRKPdaRN5l8VsrsYMZ5zN93
moU9MnIVo0FHcjeCDVVoZlTMyg74ZI4s7CnsOw85Igv7rbhi6tla3CufHpoc
YHPFdG4qHdHkAkcie8XJMoIrtJ+x034qHKmEYbHHFo6tRZ2gyTJMyYBd3Rxv
5mq3Lcf0cn/InvIOWVhBk6pZzKRSSBO96HBsqF15M6oxK2/O8vFuZkACLkTk
eRE/jStR3ecOV8k3qsSOJ7BSQ0XGbJN73crbDiLtOkb9LPcMDkKTFmvcPUDg
Y0ZX4ONV+L1R4nAruD0q99q8I65dIl+HmCd4F2hRA8sO1CrXd9+4vRevkzFk
dNzVl9fStTO4GAzqcw2bTU8u0OIHdYs5fVTkFPcFHAJwlDI2ojCjcqHgyjWT
mgq2sdbxVTtue6CFU/0sqq9GUy+oNLWnxMrupHTabM2+ZvFvWVCpYVe/jtBV
Rp+Sm4sYa5Zeq3C25Cq5Vo4ZcjULRY6G6By/AZmuNq5WjMdoe7Ll3znK9Khf
9wCKtgEVDA2OqvB79Hm1ceIZpJO5Q4h2cHye9oTQCn4vR+3TAVygayd0vTuj
j2dx18XnV2MflB0VxTIU3GR9hI5wB7+witlULi0fc2LIzhz6LlEFGV5rjdtf
ULIjzY+U/oI86eivQW/5RGikAtsq5Hwm2BnXr0bfdT3FHeW/zXoXFw9jpEKj
K2/Vhbt3u6r3Rby30KqsUljPSjSfS6qbN2EMtI0Cqp9Nu9GL2EQrK8gqcjfZ
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
c9a0R8lNUErJ/Q/tfdTu7kUZSThh6B1Shmz8ZwRCMNlKh9EOvcgUT/sKM0bx
zmfY6QYryl+CkpUytHdDGQ/DSNErdBxBl7CKjQ+zqJ179ugaNv7TpiQb3XlK
hmP9LZryBU5hK/NIW77hAQpaVW5h0cEWFrAjJ8GUCJ/RqobbZI/Jk+zwYJe7
nh176qlwg9eA/hUb7ofS0IYHAs24YTe9et8AAhFs1Y7nTNX2LnjgGS0El6C+
V7H+XpzH+nvtaySXlq3BGCi3TKYhm7JZKONqd2CwjsEGlW6iXX+/KZnzAxlH
xhjWfpdNJkqXMUaz9mfyCVSWd+Kq2Inf8JBMqh+bkrl057lcneZdJd/5gB/h
h/WXTPG8K+W6UWJT7VxsyV2FjlSEAq6XC66kLha24iSODH0H8tmcoeVrfot0
Soi0aKDJnjJ5qeYgVZQODQkibXe3r79807X4dvgQE+jzrxYMuxEP+N+iG5Fl
uTFwNTh8sAbH5dSRT0GzvJA2Yo9uyJcphmwDhkBkCylN4HaJHHTJoquTDfau
ZjbCt/oJlOFSd2wCHnC7YxMSaJxol265cJ4YSFu+jvuYVTvYx3yHUl+6sP1l
6gR+iLksmwY94fcxj4wRB0L4Agtnuk8uwoMyTVnAoFY+h2RUQ6ESeJXMu0S+
ZYprlraOWYG1dzERBVJXSKvhLvKJ6NqUcL2bmAYCFYlkKrXI09tN4yxnDw9r
y8AWB2kuXfPXMOQc+7/+/Oc/m5KSEvOnP/3JY0g6XKlYdiu7byHcDF3QOenT
vGtARUfkGxM+5Ds0+rTvpvtZMNNyqiLwme2WMlMHZpZmz8llQ2cxaq9VkB1V
scku3eiIaYuU2CaIaZZW4Qa2upvq9pmmWuq/1oJJxkxcwewUFhUy3aoGRuKf
2lOllrxbRvJumX0NlUR1edMwx/KoqZU3jXdOXu8x0MiVIosNyiQmi6r+IAlP
tScwKfXc5N+qPXWMWcVjZHUfG8vPOl4l1bmqtiF0YfiCZ9s9A0teJANfNS29
siU7fDYXkc1UmEAXPxz96TLLcj4i3yw2wb582neORPITyulQIuFE9piU2aRz
KtCek6o5lcotBQUYp8pSC5xq43EWJNiMqj39w6YZDBZSQ2Hl/zTn4wi0KmXT
/b6IbfNDbFkjDwS7O7Um6ClKy3oBy0B77ZAjd1Rzsi5phoUWxOXIzRZQgBpP
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
/2jOm6o=\
\>"],ExpressionUUID->"1818de11-b2ee-46d6-8f2a-0845f19dbc13"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetRegressionChart", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"reordered", ",", " ", "model"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"reordered", " ", "=", " ", 
       RowBox[{"ShuffleSynchronously", "[", 
        RowBox[{"{", 
         RowBox[{"citiesFeaturesValues", ",", " ", "citiesPositivness"}], 
         "}"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"model", " ", "=", " ", 
       RowBox[{"Quiet", "@", 
        RowBox[{"FitRegression", "[", 
         RowBox[{
          RowBox[{
          "reordered", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", " ", 
          RowBox[{
          "reordered", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
           ",", " ", "citiesFeaturesNames"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{
      "model", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
    "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.771755267134492*^9, 3.7717553890909224`*^9}, {
   3.77175542082793*^9, 3.771755468300757*^9}, {3.771755501400709*^9, 
   3.7717555267626343`*^9}, {3.771755558628891*^9, 3.771755666447036*^9}, {
   3.7717557681909447`*^9, 3.771755772895278*^9}, {3.771755821273554*^9, 
   3.7717558328066263`*^9}, {3.77175591767292*^9, 3.771755958137946*^9}, {
   3.7717561206244802`*^9, 3.771756147941989*^9}, {3.771756232915742*^9, 
   3.771756263884725*^9}, 3.7717563126437263`*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"781b6f9a-1a76-4110-bb44-e1b121164761"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetRegressionChart", "[", "]"}]], "Code",
 CellChangeTimes->{
  3.7716944999393044`*^9, {3.7717095425263433`*^9, 3.771709543809411*^9}, {
   3.771709574086865*^9, 3.7717095878774652`*^9}, {3.771709626755397*^9, 
   3.771709631337878*^9}, {3.7717558476123543`*^9, 3.771755848253222*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"96017ae7-f811-4369-84f3-ccf0a0254f5b"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{{0., -0.52}, {0., 51.5}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.34299999999999997`], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5}, {-0.23713657551191236`, 1.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.51408726175632`, 187.25000000000003`}, {
            61.983844395382356`, 65.40323141045752}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.23713657551191236`]& ,
         TagBoxNote->"-0.23713657551191236"],
        StyleBox[
         RowBox[{"-", "0.23713657551191236`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.23713657551191236`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5}, {0.11201223414335892`, 2.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 187.36143415062193`}, {
            59.06445738030718, 62.483844395382356`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.11201223414335892`]& ,
         TagBoxNote->"0.11201223414335892"],
        StyleBox["0.11201223414335892`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.11201223414335892`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.5}, {0.4004072143075219, 3.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 187.64834075420848`}, {
            56.14507036523201, 59.56445738030718}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.4004072143075219]& ,
         TagBoxNote->"0.4004072143075219"],
        StyleBox["0.4004072143075219`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4004072143075219, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.5}, {0.05468038728574243, 4.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 187.30439818747894`}, {
            53.225683350156835`, 56.64507036523201}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.05468038728574243]& ,
         TagBoxNote->"0.05468038728574243"],
        StyleBox["0.05468038728574243`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.05468038728574243, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.5}, {-0.1992794384235843, 5.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.55174902208702`, 187.25000000000003`}, {
            50.306296335081655`, 53.725683350156835`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.1992794384235843]& ,
         TagBoxNote->"-0.1992794384235843"],
        StyleBox[
         RowBox[{"-", "0.1992794384235843`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.1992794384235843, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 5.5}, {9.286622661971421, 6.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 196.4886953657077}, {
            47.38690932000648, 50.806296335081655`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9.286622661971421]& ,
         TagBoxNote->"9.286622661971421"],
        StyleBox["9.286622661971421`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9.286622661971421, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 6.5}, {1.9037207580921063`, 7.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 189.14389585273122`}, {
            44.46752230493131, 47.88690932000648}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1.9037207580921063`]& ,
         TagBoxNote->"1.9037207580921063"],
        StyleBox["1.9037207580921063`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9037207580921063`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 7.5}, {-0.36232313151970885`, 8.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.38954678057857`, 187.25000000000003`}, {
            41.548135289856134`, 44.96752230493131}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -0.36232313151970885`]& ,
         TagBoxNote->"-0.36232313151970885"],
        StyleBox[
         RowBox[{"-", "0.36232313151970885`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-0.36232313151970885`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 8.5}, {-11.25237614596952, 9.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{175.55569620011894`, 187.25000000000003`}, {
            38.62874827478096, 42.048135289856134`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -11.25237614596952]& ,
         TagBoxNote->"-11.25237614596952"],
        StyleBox[
         RowBox[{"-", "11.25237614596952`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-11.25237614596952, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 9.5}, {-76.9258589489408, 10.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{110.22114742963058`, 187.25000000000003`}, {
            35.70936125970579, 39.12874827478096}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -76.9258589489408]& ,
         TagBoxNote->"-76.9258589489408"],
        StyleBox[
         RowBox[{"-", "76.9258589489408`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-76.9258589489408, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 10.5}, {-67.88684492436073, 11.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{119.21351204044022`, 187.25000000000003`}, {
            32.78997424463061, 36.20936125970579}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -67.88684492436073]& ,
         TagBoxNote->"-67.88684492436073"],
        StyleBox[
         RowBox[{"-", "67.88684492436073`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-67.88684492436073, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 11.5}, {159.26781453479543`, 12.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 345.6958498647175}, {
            29.87058722955544, 33.28997424463061}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 159.26781453479543`]& ,
         TagBoxNote->"159.26781453479543"],
        StyleBox["159.26781453479543`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[159.26781453479543`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 12.5}, {48.35408147821829, 13.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 235.3545310794434}, {
            26.951200214480266`, 30.37058722955544}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 48.35408147821829]& ,
         TagBoxNote->"48.35408147821829"],
        StyleBox["48.35408147821829`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[48.35408147821829, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 13.5}, {-2.311324926049636, 14.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{184.45060358214167`, 187.25000000000003`}, {
            24.031813199405093`, 27.451200214480266`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -2.311324926049636]& ,
         TagBoxNote->"-2.311324926049636"],
        StyleBox[
         RowBox[{"-", "2.311324926049636`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-2.311324926049636, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 14.5}, {-33.3974027766522, 15.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{153.5249577547895, 187.25000000000003`}, {
            21.11242618432992, 24.531813199405093`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -33.3974027766522]& ,
         TagBoxNote->"-33.3974027766522"],
        StyleBox[
         RowBox[{"-", "33.3974027766522`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-33.3974027766522, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 15.5}, {-8.909677898341357, 16.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{177.88630402509753`, 187.25000000000003`}, {
            18.193039169254746`, 21.61242618432992}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -8.909677898341357]& ,
         TagBoxNote->"-8.909677898341357"],
        StyleBox[
         RowBox[{"-", "8.909677898341357`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-8.909677898341357, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 16.5}, {2.9042603842481043`, 17.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 190.13927179766188`}, {
            15.273652154179572`, 18.693039169254746`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.9042603842481043`]& ,
         TagBoxNote->"2.9042603842481043"],
        StyleBox["2.9042603842481043`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.9042603842481043`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 17.5}, {-23.432794536056065`, 18.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{163.4381396858776, 187.25000000000003`}, {
            12.354265139104399`, 15.773652154179572`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -23.432794536056065`]& ,
         TagBoxNote->"-23.432794536056065"],
        StyleBox[
         RowBox[{"-", "23.432794536056065`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-23.432794536056065`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 18.5}, {21.012965557212908`, 19.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 208.154519821632}, {
            9.434878124029225, 12.854265139104399`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 21.012965557212908`]& ,
         TagBoxNote->"21.012965557212908"],
        StyleBox["21.012965557212908`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21.012965557212908`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 19.5}, {-5.114946730454989, 20.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{181.66145097905115`, 187.25000000000003`}, {
            6.515491108954052, 9.934878124029225}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -5.114946730454989]& ,
         TagBoxNote->"-5.114946730454989"],
        StyleBox[
         RowBox[{"-", "5.114946730454989`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-5.114946730454989, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 20.5}, {-12.500959044427503`, 21.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{174.3135571084853, 187.25000000000003`}, {
            3.5961040938788784`, 7.015491108954052}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -12.500959044427503`]& ,
         TagBoxNote->"-12.500959044427503"],
        StyleBox[
         RowBox[{"-", "12.500959044427503`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-12.500959044427503`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 21.5}, {-55.609122191074334`, 22.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{131.42787072025948`, 187.25000000000003`}, {
            0.6767170788037049, 4.096104093878878}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -55.609122191074334`]& ,
         TagBoxNote->"-55.609122191074334"],
        StyleBox[
         RowBox[{"-", "55.609122191074334`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-55.609122191074334`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 22.5}, {33.19946460859239, 23.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            220.2781256155041}, {-2.2426699362714686`, 1.176717078803705}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 33.19946460859239]& ,
         TagBoxNote->"33.19946460859239"],
        StyleBox["33.19946460859239`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[33.19946460859239, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 23.5}, {27.6538886651349, 24.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            214.76116981425218`}, {-5.162056951346642, -1.7426699362714686`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 27.6538886651349]& ,
         TagBoxNote->"27.6538886651349"],
        StyleBox["27.6538886651349`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[27.6538886651349, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 24.5}, {0.6559587685125798, 25.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            187.90257343335045`}, {-8.081443966421816, -4.662056951346642}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6559587685125798]& ,
         TagBoxNote->"0.6559587685125798"],
        StyleBox["0.6559587685125798`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6559587685125798, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 25.5}, {-23.816907321621557`, 26.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{163.05600926655467`, 
            187.25000000000003`}, {-11.00083098149699, -7.581443966421816}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -23.816907321621557`]& ,
         TagBoxNote->"-23.816907321621557"],
        StyleBox[
         RowBox[{"-", "23.816907321621557`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-23.816907321621557`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 26.5}, {-13.331057027885123`, 27.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{173.48774317461485`, 
            187.25000000000003`}, {-13.920217996572163`, -10.50083098149699}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -13.331057027885123`]& ,
         TagBoxNote->"-13.331057027885123"],
        StyleBox[
         RowBox[{"-", "13.331057027885123`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-13.331057027885123`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 27.5}, {3.180337568317583, 28.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            190.41392417602165`}, {-16.839605011647336`, \
-13.420217996572163`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3.180337568317583]& ,
         TagBoxNote->"3.180337568317583"],
        StyleBox["3.180337568317583`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.180337568317583, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 28.5}, {-4.942413979673184, 29.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{181.8330933062029, 
            187.25000000000003`}, {-19.75899202672251, -16.339605011647336`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -4.942413979673184]& ,
         TagBoxNote->"-4.942413979673184"],
        StyleBox[
         RowBox[{"-", "4.942413979673184`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-4.942413979673184, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 29.5}, {-25.078642744308638`, 30.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{161.80078552950516`, 
            187.25000000000003`}, {-22.678379041797683`, -19.25899202672251}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -25.078642744308638`]& ,
         TagBoxNote->"-25.078642744308638"],
        StyleBox[
         RowBox[{"-", "25.078642744308638`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-25.078642744308638`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 30.5}, {-54.658662438529745`, 31.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{132.3734252486117, 
            187.25000000000003`}, {-25.597766056872857`, \
-22.178379041797683`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -54.658662438529745`]& ,
         TagBoxNote->"-54.658662438529745"],
        StyleBox[
         RowBox[{"-", "54.658662438529745`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-54.658662438529745`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 31.5}, {-14.639938228306335`, 32.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{172.1856169742997, 
            187.25000000000003`}, {-28.517153071948044`, \
-25.097766056872857`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -14.639938228306335`]& ,
         TagBoxNote->"-14.639938228306335"],
        StyleBox[
         RowBox[{"-", "14.639938228306335`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-14.639938228306335`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 32.5}, {13.546233722288946`, 33.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            200.72632301518934`}, {-31.436540087023218`, \
-28.017153071948044`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13.546233722288946`]& ,
         TagBoxNote->"13.546233722288946"],
        StyleBox["13.546233722288946`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13.546233722288946`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 33.5}, {-15.554304126592541`, 34.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{171.27597002356802`, 
            187.25000000000003`}, {-34.35592710209839, -30.936540087023218`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -15.554304126592541`]& ,
         TagBoxNote->"-15.554304126592541"],
        StyleBox[
         RowBox[{"-", "15.554304126592541`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-15.554304126592541`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 34.5}, {20.928326798429964`, 35.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            208.07031787470362`}, {-37.275314117173565`, -33.85592710209839}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 20.928326798429964`]& ,
         TagBoxNote->"20.928326798429964"],
        StyleBox["20.928326798429964`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[20.928326798429964`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 35.5}, {-19.266949074513718`, 36.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{167.58248565111307`, 
            187.25000000000003`}, {-40.19470113224874, -36.775314117173565`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -19.266949074513718`]& ,
         TagBoxNote->"-19.266949074513718"],
        StyleBox[
         RowBox[{"-", "19.266949074513718`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-19.266949074513718`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 36.5}, {6.118720309330275, 37.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            193.33714222850432`}, {-43.11408814732391, -39.69470113224874}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6.118720309330275]& ,
         TagBoxNote->"6.118720309330275"],
        StyleBox["6.118720309330275`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6.118720309330275, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 37.5}, {30.038675347697335`, 38.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            217.13364886011814`}, {-46.033475162399085`, -42.61408814732391}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 30.038675347697335`]& ,
         TagBoxNote->"30.038675347697335"],
        StyleBox["30.038675347697335`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[30.038675347697335`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 38.5}, {2.4855789374377313`, 39.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            189.72275112236898`}, {-48.95286217747426, -45.533475162399085`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.4855789374377313`]& ,
         TagBoxNote->"2.4855789374377313"],
        StyleBox["2.4855789374377313`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.4855789374377313`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 39.5}, {14.387814207836044`, 40.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            201.56356019114708`}, {-51.87224919254943, -48.45286217747426}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 14.387814207836044`]& ,
         TagBoxNote->"14.387814207836044"],
        StyleBox["14.387814207836044`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[14.387814207836044`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 40.5}, {13.87211222108121, 41.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            201.0505196888525}, {-54.791636207624606`, -51.37224919254943}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13.87211222108121]& ,
         TagBoxNote->"13.87211222108121"],
        StyleBox["13.87211222108121`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13.87211222108121, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 41.5}, {3.2191251989311596`, 42.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            190.45251162769705`}, {-57.71102322269978, -54.291636207624606`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3.2191251989311596`]& ,
         TagBoxNote->"3.2191251989311596"],
        StyleBox["3.2191251989311596`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.2191251989311596`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 42.5}, {24.725461841433628`, 43.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            211.84785629762442`}, {-60.63041023777495, -57.21102322269978}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 24.725461841433628`]& ,
         TagBoxNote->"24.725461841433628"],
        StyleBox["24.725461841433628`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[24.725461841433628`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 43.5}, {9.563041075638495, 44.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            196.76368721261454`}, {-63.54979725285011, -60.13041023777495}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9.563041075638495]& ,
         TagBoxNote->"9.563041075638495"],
        StyleBox["9.563041075638495`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9.563041075638495, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 44.5}, {0.9731291773390147, 45.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            188.2181069585968}, {-66.4691842679253, -63.04979725285011}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.9731291773390147]& ,
         TagBoxNote->"0.9731291773390147"],
        StyleBox["0.9731291773390147`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.9731291773390147, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 45.5}, {23.371024925541633`, 46.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            210.5004094901606}, {-69.38857128300046, -65.9691842679253}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 23.371024925541633`]& ,
         TagBoxNote->"23.371024925541633"],
        StyleBox["23.371024925541633`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23.371024925541633`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 46.5}, {23.762030109162822`, 47.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            210.8893967365878}, {-72.30795829807565, -68.88857128300046}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 23.762030109162822`]& ,
         TagBoxNote->"23.762030109162822"],
        StyleBox["23.762030109162822`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23.762030109162822`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 47.5}, {0.4110792356927835, 48.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            187.65895769839835`}, {-75.22734531315083, -71.80795829807565}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.4110792356927835]& ,
         TagBoxNote->"0.4110792356927835"],
        StyleBox["0.4110792356927835`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4110792356927835, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 48.5}, {2.5608789490153647`, 49.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            189.79766251839766`}, {-78.146732328226, -74.72734531315083}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2.5608789490153647`]& ,
         TagBoxNote->"2.5608789490153647"],
        StyleBox["2.5608789490153647`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.5608789490153647`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 49.5}, {-2.5029305432337345`, 50.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{184.25998682167273`, 
            187.25000000000003`}, {-81.06611934330118, -77.646732328226}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, -2.5029305432337345`]& ,
         TagBoxNote->"-2.5029305432337345"],
        StyleBox[
         RowBox[{"-", "2.5029305432337345`"}], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[-2.5029305432337345`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 50.5}, {0.026336300839163718`, 51.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.75000000000003`, 
            187.2762003819224}, {-83.98550635837634, -80.56611934330118}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.026336300839163718`]& ,
         TagBoxNote->"0.026336300839163718"],
        StyleBox["0.026336300839163718`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.026336300839163718`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], LineBox[{{0., -0.52}, {0., 52.5404}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}], 
        LineBox[{{0., 51.5}, 
          Offset[{-6., 0.}, {0., 
           51.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
          LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
          LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
          LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
          LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
          LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
          LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
          LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
          LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
          LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
          LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
          LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
          LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
          LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
          LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
          LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
          LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
          LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
          LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
          LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
          LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
          LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
          LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
          LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
          LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
          LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
          LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
          LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
          LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
          LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
          LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
          LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
          LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
          LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
          LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
          LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
          LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
          LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
          LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
          LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
          LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
          LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
          LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
          LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
          LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
          LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
          LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
          LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
          LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
          LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
          LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
          LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
          LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
          LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
          LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
          LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
          LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
          LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
          LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
          LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
          LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
          LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
          LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
          LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
          LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
          LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
          LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
          LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
          LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
          LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
          LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
          LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
          LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
          LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
          LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
          LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
          LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
          LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
          LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
          LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
          LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
          LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
          LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
          LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
          LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
          LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
          LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
          LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
          LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
          LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
          LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
          LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
          LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
          LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
          LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
          LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
          LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
          LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
          LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
          LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"Population\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Latitude\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Longitude\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Elevation\"\>", Offset[{-2, 0}, {0., 4.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"MagneticFieldStrength\"\>", 
          Offset[{-2, 0}, {0., 5.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryPopulation\"\>", Offset[{-2, 0}, {0., 6.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryLatitude\"\>", Offset[{-2, 0}, {0., 7.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryLongitude\"\>", Offset[{-2, 0}, {0., 8.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryArea\"\>", Offset[{-2, 0}, {0., 9.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"CountryWaterArea\"\>", Offset[{-2, 0}, {0., 10.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryBoundaryLength\"\>", 
          Offset[{-2, 0}, {0., 11.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryCoastlineLength\"\>", 
          Offset[{-2, 0}, {0., 12.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryWaterwayLength\"\>", 
          Offset[{-2, 0}, {0., 13.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryContributingFamilyWorkers\"\>", 
          Offset[{-2, 0}, {0., 14.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryGDPPerPersonEmployed\"\>", 
          Offset[{-2, 0}, {0., 15.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryGiniIndex\"\>", Offset[{-2, 0}, {0., 16.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryInterestRateSpread\"\>", 
          Offset[{-2, 0}, {0., 17.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryPovertyHeadcount\"\>", 
          Offset[{-2, 0}, {0., 18.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryUnemploymentRate\"\>", 
          Offset[{-2, 0}, {0., 19.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryBookTitles\"\>", Offset[{-2, 0}, {0., 20.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryIlliteracyFraction\"\>", 
          Offset[{-2, 0}, {0., 21.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryMaleLifeExpectancy\"\>", 
          Offset[{-2, 0}, {0., 22.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryMaleMedianAge\"\>", 
          Offset[{-2, 0}, {0., 23.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryFemaleLifeExpectancy\"\>", 
          Offset[{-2, 0}, {0., 24.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryFemaleMedianAge\"\>", 
          Offset[{-2, 0}, {0., 25.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryHospitalBedsPer10000Population\"\>", 
          Offset[{-2, 0}, {0., 26.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryArmy\"\>", Offset[{-2, 0}, {0., 27.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"CountryHIVAIDSPopulation\"\>", 
          Offset[{-2, 0}, {0., 28.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryElectricityTotal\"\>", 
          Offset[{-2, 0}, {0., 29.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryChildPopulation\"\>", 
          Offset[{-2, 0}, {0., 30.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryElderlyPopulation\"\>", 
          Offset[{-2, 0}, {0., 31.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryAnnualMarriages\"\>", 
          Offset[{-2, 0}, {0., 32.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryAnnualDivorces\"\>", 
          Offset[{-2, 0}, {0., 33.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryNetIncomeFromAbroad\"\>", 
          Offset[{-2, 0}, {0., 34.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryGovernmentDebt\"\>", 
          Offset[{-2, 0}, {0., 35.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryGovernmentSurplus\"\>", 
          Offset[{-2, 0}, {0., 36.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryImportsValue\"\>", Offset[{-2, 0}, {0., 37.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryExportsValue\"\>", Offset[{-2, 0}, {0., 38.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryLeisureArrivals\"\>", 
          Offset[{-2, 0}, {0., 39.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryNewspaperTitles\"\>", 
          Offset[{-2, 0}, {0., 40.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"Street\"\>", Offset[{-2, 0}, {0., 41.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Highway\"\>", Offset[{-2, 0}, {0., 42.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Water\"\>", Offset[{-2, 0}, {0., 43.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Park\"\>", Offset[{-2, 0}, {0., 44.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Train\"\>", Offset[{-2, 0}, {0., 45.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Interesting\"\>", Offset[{-2, 0}, {0., 46.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Building\"\>", Offset[{-2, 0}, {0., 47.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Annotations\"\>", Offset[{-2, 0}, {0., 48.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"MeanNeighborDegree\"\>", Offset[{-2, 0}, {0., 49.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"DegreeCentrality\"\>", Offset[{-2, 0}, {0., 50.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"ClosenessCentrality\"\>", Offset[{-2, 0}, {0., 51.}], {1, 0},
           Automatic, {1, 0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., -0.52},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{3.77175632203936*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"419c4db3-9630-485b-9d51-e62d74b36b65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GetRegressionChart", "[", "]"}], ",", " ", "4"}], "]"}], "}"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.771755267134492*^9, 3.7717553890909224`*^9}, {
   3.77175542082793*^9, 3.771755468300757*^9}, {3.771755501400709*^9, 
   3.7717555267626343`*^9}, {3.771755558628891*^9, 3.771755666447036*^9}, {
   3.7717557681909447`*^9, 3.771755772895278*^9}, {3.771755821273554*^9, 
   3.7717558328066263`*^9}, {3.77175591767292*^9, 3.771755958137946*^9}, {
   3.7717561206244802`*^9, 3.771756147941989*^9}, {3.771756232915742*^9, 
   3.771756263884725*^9}, 
   3.7717563126437263`*^9},ExpressionUUID->"836daa6d-8de7-45ed-9d10-\
01d7dbdf13ab"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {Opacity[0], PointBox[{{0., -0.52}, {0., 51.5}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.34299999999999997`], Thickness[Small]}], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0.5}, {-0.02534698613377845, 1.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.43766719118673`, 187.24999999999997`}, {
                72.06329147323578, 75.86774185777251}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.02534698613377845]& ,
             TagBoxNote->"-0.02534698613377845"],
            StyleBox[
             RowBox[{"-", "0.02534698613377845`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.02534698613377845, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 1.5}, {-1.8010684473895537`, 2.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{164.55671973902082`, 187.24999999999997`}, {
                68.75884108869903, 72.56329147323578}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.8010684473895537`]& ,
             TagBoxNote->"-1.8010684473895537"],
            StyleBox[
             RowBox[{"-", "1.8010684473895537`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.8010684473895537`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 2.5}, {0.40481727739532136`, 3.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 192.23827421286651`}, {
                65.45439070416228, 69.25884108869903}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.40481727739532136`]& ,
             TagBoxNote->"0.40481727739532136"],
            StyleBox["0.40481727739532136`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.40481727739532136`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 3.5}, {0.09673718865806691, 4.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 188.44202329187397`}, {
                62.14994031962554, 65.95439070416228}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.09673718865806691]& ,
             TagBoxNote->"0.09673718865806691"],
            StyleBox["0.09673718865806691`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.09673718865806691, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 4.5}, {0.5760758863975592, 5.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 194.34857174886574`}, {
                58.8454899350888, 62.64994031962554}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5760758863975592]& ,
             TagBoxNote->"0.5760758863975592"],
            StyleBox["0.5760758863975592`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5760758863975592, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 5.5}, {1.8293403698432371`, 6.5}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{186.74999999999997`, 209.7916549712466}, {
                55.54103955055206, 59.3454899350888}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.8293403698432371`]& ,
             TagBoxNote->"1.8293403698432371"],
            StyleBox["1.8293403698432371`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.8293403698432371`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 6.5}, {1.438247494680414, 7.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 204.97249676593754`}, {
                52.23658916601531, 56.04103955055206}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.438247494680414]& ,
             TagBoxNote->"1.438247494680414"],
            StyleBox["1.438247494680414`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.438247494680414, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 7.5}, {-1.1536444029740807`, 8.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{172.534463886521, 187.24999999999997`}, {
                48.93213878147857, 52.73658916601531}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.1536444029740807`]& ,
             TagBoxNote->"-1.1536444029740807"],
            StyleBox[
             RowBox[{"-", "1.1536444029740807`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.1536444029740807`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 8.5}, {-4.08786168590521, 9.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{136.37819975281565`, 187.24999999999997`}, {
                45.62768839694182, 49.43213878147857}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -4.08786168590521]& ,
             TagBoxNote->"-4.08786168590521"],
            StyleBox[
             RowBox[{"-", "4.08786168590521`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-4.08786168590521, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 9.5}, {1.970537724663533, 10.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 211.53152913992554`}, {
                42.32323801240508, 46.12768839694182}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.970537724663533]& ,
             TagBoxNote->"1.970537724663533"],
            StyleBox["1.970537724663533`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.970537724663533, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 10.5}, {11.89829161807333, 11.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 333.8641505557375}, {
                39.018787627868335`, 42.82323801240508}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 11.89829161807333]& ,
             TagBoxNote->"11.89829161807333"],
            StyleBox["11.89829161807333`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[11.89829161807333, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 11.5}, {-9.613528337972951, 12.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{68.289355702592, 187.24999999999997`}, {
                35.71433724333159, 39.518787627868335`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -9.613528337972951]& ,
             TagBoxNote->"-9.613528337972951"],
            StyleBox[
             RowBox[{"-", "9.613528337972951`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-9.613528337972951, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 12.5}, {0.23730813309235543`, 13.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 190.17417865271125`}, {
                32.40988685879485, 36.21433724333159}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.23730813309235543`]& ,
             TagBoxNote->"0.23730813309235543"],
            StyleBox["0.23730813309235543`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.23730813309235543`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 13.5}, {1.1515591499542417`, 14.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 201.43984102967946`}, {
                29.105436474258106`, 32.90988685879485}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.1515591499542417`]& ,
             TagBoxNote->"1.1515591499542417"],
            StyleBox["1.1515591499542417`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.1515591499542417`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 14.5}, {-1.8449719208657598`, 15.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{164.0157285886289, 187.24999999999997`}, {
                25.800986089721363`, 29.605436474258106`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.8449719208657598`]& ,
             TagBoxNote->"-1.8449719208657598"],
            StyleBox[
             RowBox[{"-", "1.8449719208657598`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.8449719208657598`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 15.5}, {-0.535527786396325, 16.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{180.1510735304027, 187.24999999999997`}, {
                22.496535705184613`, 26.300986089721363`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.535527786396325]& ,
             TagBoxNote->"-0.535527786396325"],
            StyleBox[
             RowBox[{"-", "0.535527786396325`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-0.535527786396325, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 16.5}, {-0.3515041701957724, 17.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{182.41866513409613`, 187.24999999999997`}, {
                19.19208532064787, 22.996535705184613`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.3515041701957724]& ,
             TagBoxNote->"-0.3515041701957724"],
            StyleBox[
             RowBox[{"-", "0.3515041701957724`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.3515041701957724, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 17.5}, {0.4374354395955038, 18.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 192.64020453170363`}, {
                15.887634936111127`, 19.69208532064787}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.4374354395955038]& ,
             TagBoxNote->"0.4374354395955038"],
            StyleBox["0.4374354395955038`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.4374354395955038, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 18.5}, {2.732442911142158, 19.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 220.91994264543203`}, {
                12.58318455157439, 16.387634936111127`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.732442911142158]& ,
             TagBoxNote->"2.732442911142158"],
            StyleBox["2.732442911142158`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.732442911142158, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 19.5}, {-0.7160529414705659, 20.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{177.92659096477547`, 187.24999999999997`}, {
                9.27873416703764, 13.08318455157439}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.7160529414705659]& ,
             TagBoxNote->"-0.7160529414705659"],
            StyleBox[
             RowBox[{"-", "0.7160529414705659`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.7160529414705659, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 20.5}, {0.027395831486778377`, 21.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 187.58757926693448`}, {
                5.9742837825008905`, 9.77873416703764}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.027395831486778377`]& ,
             TagBoxNote->"0.027395831486778377"],
            StyleBox["0.027395831486778377`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.027395831486778377`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 21.5}, {8.507848801972074, 22.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 292.0861449859782}, {
                2.6698333979641546`, 6.4742837825008905`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 8.507848801972074]& ,
             TagBoxNote->"8.507848801972074"],
            StyleBox["8.507848801972074`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[8.507848801972074, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 22.5}, {-1.8152118259540337`, 23.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{164.38244098533238`, 
                187.24999999999997`}, {-0.6346169865725955, 
                3.1698333979641546`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.8152118259540337`]& ,
             TagBoxNote->"-1.8152118259540337"],
            StyleBox[
             RowBox[{"-", "1.8152118259540337`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.8152118259540337`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 23.5}, {-9.685979730091503, 24.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{67.39658893799978, 
                187.24999999999997`}, {-3.9390673711093314`, \
-0.13461698657259547`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -9.685979730091503]& ,
             TagBoxNote->"-9.685979730091503"],
            StyleBox[
             RowBox[{"-", "9.685979730091503`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-9.685979730091503, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 24.5}, {1.6513382565310222`, 25.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                207.59826204744613`}, {-7.2435177556460815`, \
-3.4390673711093314`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.6513382565310222`]& ,
             TagBoxNote->"1.6513382565310222"],
            StyleBox["1.6513382565310222`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.6513382565310222`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 25.5}, {0.212051821513338, 26.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                189.86296316168193`}, {-10.547968140182817`, \
-6.7435177556460815`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.212051821513338]& ,
             TagBoxNote->"0.212051821513338"],
            StyleBox["0.212051821513338`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.212051821513338, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 26.5}, {2.2767651263454, 27.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                215.3049507214137}, {-13.852418524719567`, \
-10.047968140182817`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.2767651263454]& ,
             TagBoxNote->"2.2767651263454"],
            StyleBox["2.2767651263454`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.2767651263454, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 27.5}, {-2.3513407922228637`, 28.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{157.7761066054932, 
                187.24999999999997`}, {-17.156868909256318`, \
-13.352418524719567`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -2.3513407922228637`]& ,
             TagBoxNote->"-2.3513407922228637"],
            StyleBox[
             RowBox[{"-", "2.3513407922228637`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-2.3513407922228637`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 28.5}, {-0.7373836610237472, 29.5}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{177.66374774085565`, 
                187.24999999999997`}, {-20.461319293793053`, \
-16.656868909256318`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.7373836610237472]& ,
             TagBoxNote->"-0.7373836610237472"],
            StyleBox[
             RowBox[{"-", "0.7373836610237472`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.7373836610237472, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 29.5}, {0.5206319686534329, 30.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                193.66537594526065`}, {-23.765769678329804`, \
-19.961319293793053`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5206319686534329]& ,
             TagBoxNote->"0.5206319686534329"],
            StyleBox["0.5206319686534329`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5206319686534329, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 30.5}, {1.5403913128362898`, 31.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                206.2311420920191}, {-27.07022006286654, \
-23.265769678329804`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.5403913128362898`]& ,
             TagBoxNote->"1.5403913128362898"],
            StyleBox["1.5403913128362898`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.5403913128362898`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 31.5}, {2.5462923917431866`, 32.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                218.62614273253251`}, {-30.37467044740329, \
-26.57022006286654}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.5462923917431866`]& ,
             TagBoxNote->"2.5462923917431866"],
            StyleBox["2.5462923917431866`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.5462923917431866`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 32.5}, {-0.9589472911226373, 33.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{174.93357735474316`, 
                187.24999999999997`}, {-33.679120831940025`, \
-29.87467044740329}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.9589472911226373]& ,
             TagBoxNote->"-0.9589472911226373"],
            StyleBox[
             RowBox[{"-", "0.9589472911226373`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.9589472911226373, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 33.5}, {0.7070305653486546, 34.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                195.96223273751977`}, {-36.983571216476776`, \
-33.179120831940025`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7070305653486546]& ,
             TagBoxNote->"0.7070305653486546"],
            StyleBox["0.7070305653486546`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7070305653486546, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 34.5}, {-1.1250826692328566`, 35.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{172.88640973431882`, 
                187.24999999999997`}, {-40.28802160101351, \
-36.483571216476776`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.1250826692328566`]& ,
             TagBoxNote->"-1.1250826692328566"],
            StyleBox[
             RowBox[{"-", "1.1250826692328566`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.1250826692328566`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 35.5}, {-1.3260429537536567`, 36.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{170.4101196620784, 
                187.24999999999997`}, {-43.59247198555026, \
-39.78802160101351}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.3260429537536567`]& ,
             TagBoxNote->"-1.3260429537536567"],
            StyleBox[
             RowBox[{"-", "1.3260429537536567`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.3260429537536567`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 36.5}, {7.867676136776183, 37.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                284.19775440609624`}, {-46.89692237008701, \
-43.09247198555026}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 7.867676136776183]& ,
             TagBoxNote->"7.867676136776183"],
            StyleBox["7.867676136776183`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[7.867676136776183, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 37.5}, {-4.5973790420104415`, 38.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{130.09978124058975`, 
                187.24999999999997`}, {-50.20137275462375, \
-46.39692237008701}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -4.5973790420104415`]& ,
             TagBoxNote->"-4.5973790420104415"],
            StyleBox[
             RowBox[{"-", "4.5973790420104415`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-4.5973790420104415`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 38.5}, {-0.7761388888987325, 39.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{177.18619474443608`, 
                187.24999999999997`}, {-53.5058231391605, \
-49.70137275462375}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.7761388888987325]& ,
             TagBoxNote->"-0.7761388888987325"],
            StyleBox[
             RowBox[{"-", "0.7761388888987325`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.7761388888987325, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 39.5}, {0.33550850005697086`, 40.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                191.38423164594172`}, {-56.81027352369725, \
-53.0058231391605}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.33550850005697086`]& ,
             TagBoxNote->"0.33550850005697086"],
            StyleBox["0.33550850005697086`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.33550850005697086`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 40.5}, {-0.5084617488636027, 41.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{180.48458898196063`, 
                187.24999999999997`}, {-60.11472390823397, \
-56.31027352369725}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.5084617488636027]& ,
             TagBoxNote->"-0.5084617488636027"],
            StyleBox[
             RowBox[{"-", "0.5084617488636027`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.5084617488636027, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 41.5}, {-0.04832145966879864, 42.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.15456916082027`, 
                187.24999999999997`}, {-63.41917429277072, \
-59.61472390823397}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.04832145966879864]& ,
             TagBoxNote->"-0.04832145966879864"],
            StyleBox[
             RowBox[{"-", "0.04832145966879864`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.04832145966879864, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 42.5}, {-0.9702482012252922, 43.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{174.7943243099875, 
                187.24999999999997`}, {-66.72362467730747, \
-62.91917429277072}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.9702482012252922]& ,
             TagBoxNote->"-0.9702482012252922"],
            StyleBox[
             RowBox[{"-", "0.9702482012252922`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.9702482012252922, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 43.5}, {-0.33061655874715257`, 44.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{182.67604825328493`, 
                187.24999999999997`}, {-70.02807506184422, \
-66.22362467730747}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.33061655874715257`]& ,
             TagBoxNote->"-0.33061655874715257"],
            StyleBox[
             RowBox[{"-", "0.33061655874715257`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.33061655874715257`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 44.5}, {-0.09110765178777225, 45.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.62734547069746`, 
                187.24999999999997`}, {-73.33252544638097, \
-69.52807506184422}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.09110765178777225]& ,
             TagBoxNote->"-0.09110765178777225"],
            StyleBox[
             RowBox[{"-", "0.09110765178777225`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.09110765178777225, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 45.5}, {-1.0430243971655209`, 46.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{173.89755521985637`, 
                187.24999999999997`}, {-76.63697583091769, \
-72.83252544638097}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.0430243971655209`]& ,
             TagBoxNote->"-1.0430243971655209"],
            StyleBox[
             RowBox[{"-", "1.0430243971655209`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.0430243971655209`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 46.5}, {-0.49011984175763956`, 47.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{180.71060320452582`, 
                187.24999999999997`}, {-79.94142621545444, \
-76.13697583091769}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.49011984175763956`]& ,
             TagBoxNote->"-0.49011984175763956"],
            StyleBox[
             RowBox[{"-", "0.49011984175763956`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.49011984175763956`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 47.5}, {-0.07172302872745417, 48.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.86620833732232`, 
                187.24999999999997`}, {-83.24587659999119, \
-79.44142621545444}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.07172302872745417]& ,
             TagBoxNote->"-0.07172302872745417"],
            StyleBox[
             RowBox[{"-", "0.07172302872745417`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.07172302872745417, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 48.5}, {-0.422082138833356, 49.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{181.548983229172, 
                187.24999999999997`}, {-86.55032698452794, \
-82.74587659999119}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.422082138833356]& ,
             TagBoxNote->"-0.422082138833356"],
            StyleBox[
             RowBox[{"-", "0.422082138833356`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-0.422082138833356, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 49.5}, {0.49528712968414634`, 50.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                193.35306959442207`}, {-89.85477736906466, \
-86.05032698452794}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.49528712968414634`]& ,
             TagBoxNote->"0.49528712968414634"],
            StyleBox["0.49528712968414634`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.49528712968414634`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 50.5}, {0.010943145922744035`, 51.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.74999999999997`, 
                187.38484457226053`}, {-93.15922775360141, \
-89.35477736906466}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.010943145922744035`]& ,
             TagBoxNote->"0.010943145922744035"],
            StyleBox["0.010943145922744035`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.010943145922744035`, {}], 
            "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
       StyleBox[{
         {Thickness[Tiny], LineBox[{{0., -0.52}, {0., 52.5404}}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}], 
            LineBox[{{0., 51.5}, 
              Offset[{-6., 0.}, {0., 
               51.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
              LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}]}, {}}}, 
           StyleBox[
            {Thickness[Tiny], 
             InsetBox["\<\"Population\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Latitude\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Longitude\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Elevation\"\>", Offset[{-2, 0}, {0., 4.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"MagneticFieldStrength\"\>", 
              Offset[{-2, 0}, {0., 5.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPopulation\"\>", 
              Offset[{-2, 0}, {0., 6.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLatitude\"\>", Offset[{-2, 0}, {0., 7.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryLongitude\"\>", Offset[{-2, 0}, {0., 8.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryArea\"\>", Offset[{-2, 0}, {0., 9.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterArea\"\>", 
              Offset[{-2, 0}, {0., 10.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBoundaryLength\"\>", 
              Offset[{-2, 0}, {0., 11.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryCoastlineLength\"\>", 
              Offset[{-2, 0}, {0., 12.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterwayLength\"\>", 
              Offset[{-2, 0}, {0., 13.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryContributingFamilyWorkers\"\>", 
              Offset[{-2, 0}, {0., 14.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGDPPerPersonEmployed\"\>", 
              Offset[{-2, 0}, {0., 15.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGiniIndex\"\>", 
              Offset[{-2, 0}, {0., 16.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryInterestRateSpread\"\>", 
              Offset[{-2, 0}, {0., 17.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPovertyHeadcount\"\>", 
              Offset[{-2, 0}, {0., 18.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryUnemploymentRate\"\>", 
              Offset[{-2, 0}, {0., 19.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBookTitles\"\>", 
              Offset[{-2, 0}, {0., 20.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryIlliteracyFraction\"\>", 
              Offset[{-2, 0}, {0., 21.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleLifeExpectancy\"\>", 
              Offset[{-2, 0}, {0., 22.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleMedianAge\"\>", 
              Offset[{-2, 0}, {0., 23.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleLifeExpectancy\"\>", 
              Offset[{-2, 0}, {0., 24.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleMedianAge\"\>", 
              Offset[{-2, 0}, {0., 25.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryHospitalBedsPer10000Population\"\>", 
              Offset[{-2, 0}, {0., 26.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryArmy\"\>", Offset[{-2, 0}, {0., 27.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryHIVAIDSPopulation\"\>", 
              Offset[{-2, 0}, {0., 28.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElectricityTotal\"\>", 
              Offset[{-2, 0}, {0., 29.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryChildPopulation\"\>", 
              Offset[{-2, 0}, {0., 30.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElderlyPopulation\"\>", 
              Offset[{-2, 0}, {0., 31.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualMarriages\"\>", 
              Offset[{-2, 0}, {0., 32.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualDivorces\"\>", 
              Offset[{-2, 0}, {0., 33.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNetIncomeFromAbroad\"\>", 
              Offset[{-2, 0}, {0., 34.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentDebt\"\>", 
              Offset[{-2, 0}, {0., 35.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentSurplus\"\>", 
              Offset[{-2, 0}, {0., 36.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryImportsValue\"\>", 
              Offset[{-2, 0}, {0., 37.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryExportsValue\"\>", 
              Offset[{-2, 0}, {0., 38.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLeisureArrivals\"\>", 
              Offset[{-2, 0}, {0., 39.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNewspaperTitles\"\>", 
              Offset[{-2, 0}, {0., 40.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"Street\"\>", Offset[{-2, 0}, {0., 41.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Highway\"\>", Offset[{-2, 0}, {0., 42.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Water\"\>", Offset[{-2, 0}, {0., 43.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Park\"\>", Offset[{-2, 0}, {0., 44.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Train\"\>", Offset[{-2, 0}, {0., 45.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Interesting\"\>", Offset[{-2, 0}, {0., 46.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Building\"\>", Offset[{-2, 0}, {0., 47.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Annotations\"\>", Offset[{-2, 0}, {0., 48.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"MeanNeighborDegree\"\>", 
              Offset[{-2, 0}, {0., 49.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"DegreeCentrality\"\>", 
              Offset[{-2, 0}, {0., 50.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"ClosenessCentrality\"\>", 
              Offset[{-2, 0}, {0., 51.}], {1, 0}, Automatic, {1, 0}]}, 
            "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., -0.52},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{Automatic, 195.98828125},
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, None}], 
     GraphicsBox[{
       {Opacity[0], PointBox[{{0., -0.52}, {0., 51.5}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.34299999999999997`], Thickness[Small]}], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0.5}, {-0.14432070858855328`, 1.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{180.01620172206265`, 187.25000000000003`}, {
                72.43934893918642, 76.25101097424266}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.14432070858855328`]& ,
             TagBoxNote->"-0.14432070858855328"],
            StyleBox[
             RowBox[{"-", "0.14432070858855328`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.14432070858855328`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 1.5}, {-1.0129121200433828`, 2.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{139.48896617916824`, 187.25000000000003`}, {
                69.12768690413019, 72.93934893918642}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.0129121200433828`]& ,
             TagBoxNote->"-1.0129121200433828"],
            StyleBox[
             RowBox[{"-", "1.0129121200433828`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.0129121200433828`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 2.5}, {1.3082984937864095`, 3.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 248.2933404231895}, {
                65.81602486907394, 69.62768690413019}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.3082984937864095`]& ,
             TagBoxNote->"1.3082984937864095"],
            StyleBox["1.3082984937864095`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.3082984937864095`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 3.5}, {0.2914277955087014, 4.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 200.84760499190918`}, {
                62.50436283401771, 66.31602486907394}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.2914277955087014]& ,
             TagBoxNote->"0.2914277955087014"],
            StyleBox["0.2914277955087014`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.2914277955087014, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 4.5}, {0.26156362256952015`, 5.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 199.45418530684375`}, {
                59.19270079896147, 63.00436283401771}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.26156362256952015`]& ,
             TagBoxNote->"0.26156362256952015"],
            StyleBox["0.26156362256952015`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.26156362256952015`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 5.5}, {-0.7425132893600441, 6.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{152.10538968636382`, 187.25000000000003`}, {
                55.88103876390524, 59.69270079896147}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.7425132893600441]& ,
             TagBoxNote->"-0.7425132893600441"],
            StyleBox[
             RowBox[{"-", "0.7425132893600441`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.7425132893600441, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 6.5}, {0.9612491964378487, 7.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 232.10051554240542`}, {
                52.569376728848994`, 56.38103876390524}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.9612491964378487]& ,
             TagBoxNote->"0.9612491964378487"],
            StyleBox["0.9612491964378487`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.9612491964378487, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 7.5}, {-0.6361952150481165, 8.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{157.06603928902285`, 187.25000000000003`}, {
                49.257714693792764`, 53.069376728848994`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.6361952150481165]& ,
             TagBoxNote->"-0.6361952150481165"],
            StyleBox[
             RowBox[{"-", "0.6361952150481165`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.6361952150481165, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 8.5}, {-0.2649228559695471, 9.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{174.38907765724846`, 187.25000000000003`}, {
                45.94605265873652, 49.757714693792764`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.2649228559695471]& ,
             TagBoxNote->"-0.2649228559695471"],
            StyleBox[
             RowBox[{"-", "0.2649228559695471`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.2649228559695471, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 9.5}, {2.989992518711766, 10.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 326.7587833925993}, {
                42.63439062368029, 46.44605265873652}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.989992518711766]& ,
             TagBoxNote->"2.989992518711766"],
            StyleBox["2.989992518711766`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.989992518711766, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 10.5}, {1.5479275216975168`, 11.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 259.474088849889}, {
                39.322728588624045`, 43.13439062368029}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.5479275216975168`]& ,
             TagBoxNote->"1.5479275216975168"],
            StyleBox["1.5479275216975168`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.5479275216975168`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 11.5}, {-2.597036797479152, 12.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{65.57596970569375, 187.25000000000003`}, {
                36.011066553567815`, 39.822728588624045`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -2.597036797479152]& ,
             TagBoxNote->"-2.597036797479152"],
            StyleBox[
             RowBox[{"-", "2.597036797479152`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-2.597036797479152, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 12.5}, {0.6758607898554314, 13.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 218.78469981795024`}, {
                32.69940451851157, 36.511066553567815`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6758607898554314]& ,
             TagBoxNote->"0.6758607898554314"],
            StyleBox["0.6758607898554314`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6758607898554314, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 13.5}, {0.22888459272191675`, 14.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 197.9294284159958}, {
                29.38774248345534, 33.19940451851157}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.22888459272191675`]& ,
             TagBoxNote->"0.22888459272191675"],
            StyleBox["0.22888459272191675`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.22888459272191675`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 14.5}, {-0.7429619171178192, 15.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{152.08445735549955`, 187.25000000000003`}, {
                26.076080448399097`, 29.88774248345534}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.7429619171178192]& ,
             TagBoxNote->"-0.7429619171178192"],
            StyleBox[
             RowBox[{"-", "0.7429619171178192`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.7429619171178192, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 15.5}, {0.02910079829329959, 16.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 188.60780171363135`}, {
                22.764418413342867`, 26.576080448399097`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.02910079829329959]& ,
             TagBoxNote->"0.02910079829329959"],
            StyleBox["0.02910079829329959`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.02910079829329959, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 16.5}, {-0.23045415488823973`, 17.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{175.99733805351465`, 187.25000000000003`}, {
                19.452756378286622`, 23.264418413342867`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.23045415488823973`]& ,
             TagBoxNote->"-0.23045415488823973"],
            StyleBox[
             RowBox[{"-", "0.23045415488823973`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.23045415488823973`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 17.5}, {0.20109144299701764`, 18.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 196.63263971819677`}, {
                16.141094343230392`, 19.952756378286622`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.20109144299701764`]& ,
             TagBoxNote->"0.20109144299701764"],
            StyleBox["0.20109144299701764`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.20109144299701764`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 18.5}, {0.13914058567978804`, 19.5}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{186.75000000000003`, 193.74210113645515`}, {
                12.829432308174148`, 16.641094343230392`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.13914058567978804`]& ,
             TagBoxNote->"0.13914058567978804"],
            StyleBox["0.13914058567978804`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.13914058567978804`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 19.5}, {-0.04368667854159014, 20.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{184.71164193199166`, 187.25000000000003`}, {
                9.517770273117918, 13.329432308174148`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.04368667854159014]& ,
             TagBoxNote->"-0.04368667854159014"],
            StyleBox[
             RowBox[{"-", "0.04368667854159014`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.04368667854159014, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 20.5}, {0.40886741832676043`, 21.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 206.32717017439737`}, {
                6.206108238061674, 10.017770273117918`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.40886741832676043`]& ,
             TagBoxNote->"0.40886741832676043"],
            StyleBox["0.40886741832676043`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.40886741832676043`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 21.5}, {1.6857598396791214`, 22.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 265.90514808279977`}, {
                2.894446203005444, 6.706108238061674}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.6857598396791214`]& ,
             TagBoxNote->"1.6857598396791214"],
            StyleBox["1.6857598396791214`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.6857598396791214`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 22.5}, {0.8812579995861753, 23.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                228.3682404664454}, {-0.4172158320508004, 3.394446203005444}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8812579995861753]& ,
             TagBoxNote->"0.8812579995861753"],
            StyleBox["0.8812579995861753`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8812579995861753, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 23.5}, {-1.767317172626731, 24.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{104.28950316630497`, 
                187.25000000000003`}, {-3.7288778671070304`, 
                0.08278416794919963}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.767317172626731]& ,
             TagBoxNote->"-1.767317172626731"],
            StyleBox[
             RowBox[{"-", "1.767317172626731`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-1.767317172626731, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 24.5}, {-1.1338302577691737`, 25.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{133.84709845586977`, 
                187.25000000000003`}, {-7.040539902163275, \
-3.2288778671070304`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.1338302577691737`]& ,
             TagBoxNote->"-1.1338302577691737"],
            StyleBox[
             RowBox[{"-", "1.1338302577691737`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.1338302577691737`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 25.5}, {0.1260403831020529, 26.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                193.1308643817211}, {-10.352201937219505`, \
-6.540539902163275}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.1260403831020529]& ,
             TagBoxNote->"0.1260403831020529"],
            StyleBox["0.1260403831020529`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.1260403831020529, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 26.5}, {0.21140508127725122`, 27.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                197.11385935999263`}, {-13.663863972275749`, \
-9.852201937219505}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.21140508127725122`]& ,
             TagBoxNote->"0.21140508127725122"],
            StyleBox["0.21140508127725122`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.21140508127725122`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 27.5}, {-0.7088573419728963, 28.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{153.67572815528055`, 
                187.25000000000003`}, {-16.97552600733198, \
-13.163863972275749`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.7088573419728963]& ,
             TagBoxNote->"-0.7088573419728963"],
            StyleBox[
             RowBox[{"-", "0.7088573419728963`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.7088573419728963, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 28.5}, {-0.9383234415171362, 29.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{142.9691674609232, 
                187.25000000000003`}, {-20.287188042388223`, \
-16.47552600733198}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.9383234415171362]& ,
             TagBoxNote->"-0.9383234415171362"],
            StyleBox[
             RowBox[{"-", "0.9383234415171362`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.9383234415171362, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 29.5}, {0.2861888168024418, 30.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                200.60316172291903`}, {-23.598850077444453`, \
-19.787188042388223`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.2861888168024418]& ,
             TagBoxNote->"0.2861888168024418"],
            StyleBox["0.2861888168024418`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.2861888168024418, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 30.5}, {1.210956384343918, 31.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                243.75149653020136`}, {-26.910512112500697`, \
-23.098850077444453`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.210956384343918]& ,
             TagBoxNote->"1.210956384343918"],
            StyleBox["1.210956384343918`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.210956384343918, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 31.5}, {-0.19133822863874705`, 32.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{177.82243134327732`, 
                187.25000000000003`}, {-30.222174147556927`, \
-26.410512112500697`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.19133822863874705`]& ,
             TagBoxNote->"-0.19133822863874705"],
            StyleBox[
             RowBox[{"-", "0.19133822863874705`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.19133822863874705`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 32.5}, {-0.024790085372239368`, 33.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.59332999870858`, 
                187.25000000000003`}, {-33.53383618261317, \
-29.722174147556927`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.024790085372239368`]& ,
             TagBoxNote->"-0.024790085372239368"],
            StyleBox[
             RowBox[{"-", "0.024790085372239368`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.024790085372239368`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 33.5}, {-2.7227413924355957`, 34.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{59.71077271958603, 
                187.25000000000003`}, {-36.8454982176694, \
-33.03383618261317}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -2.7227413924355957`]& ,
             TagBoxNote->"-2.7227413924355957"],
            StyleBox[
             RowBox[{"-", "2.7227413924355957`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-2.7227413924355957`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 34.5}, {-0.04551636717589047, 35.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{184.62627127177726`, 
                187.25000000000003`}, {-40.157160252725646`, \
-36.3454982176694}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.04551636717589047]& ,
             TagBoxNote->"-0.04551636717589047"],
            StyleBox[
             RowBox[{"-", "0.04551636717589047`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.04551636717589047, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 35.5}, {1.4934644709050158`, 36.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                256.93292063345984`}, {-43.468822287781876`, \
-39.657160252725646`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.4934644709050158`]& ,
             TagBoxNote->"1.4934644709050158"],
            StyleBox["1.4934644709050158`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.4934644709050158`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 36.5}, {1.9932270325008066`, 37.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                280.2511284607614}, {-46.78048432283812, \
-42.968822287781876`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.9932270325008066`]& ,
             TagBoxNote->"1.9932270325008066"],
            StyleBox["1.9932270325008066`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.9932270325008066`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 37.5}, {-1.5371347559852087`, 38.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{115.02948619404269`, 
                
                187.25000000000003`}, {-50.09214635789435, \
-46.28048432283812}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.5371347559852087`]& ,
             TagBoxNote->"-1.5371347559852087"],
            StyleBox[
             RowBox[{"-", "1.5371347559852087`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.5371347559852087`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 38.5}, {-0.4669020388318202, 39.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{164.96501726398452`, 
                187.25000000000003`}, {-53.40380839295058, \
-49.59214635789435}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.4669020388318202]& ,
             TagBoxNote->"-0.4669020388318202"],
            StyleBox[
             RowBox[{"-", "0.4669020388318202`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.4669020388318202, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 39.5}, {0.043176902952130725`, 40.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                189.2645726665923}, {-56.71547042800684, -52.90380839295058}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.043176902952130725`]& ,
             TagBoxNote->"0.043176902952130725"],
            StyleBox["0.043176902952130725`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.043176902952130725`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 40.5}, {0.35945935704049603`, 41.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                204.02186055348784`}, {-60.02713246306307, \
-56.21547042800684}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.35945935704049603`]& ,
             TagBoxNote->"0.35945935704049603"],
            StyleBox["0.35945935704049603`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.35945935704049603`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 41.5}, {0.3242224501145996, 42.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                202.37775676895126`}, {-63.3387944981193, \
-59.52713246306307}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.3242224501145996]& ,
             TagBoxNote->"0.3242224501145996"],
            StyleBox["0.3242224501145996`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.3242224501145996, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 42.5}, {0.591053506982895, 43.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                214.82771304211806`}, {-66.65045653317553, \
-62.8387944981193}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.591053506982895]& ,
             TagBoxNote->"0.591053506982895"],
            StyleBox["0.591053506982895`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.591053506982895, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 43.5}, {0.4222466671236076, 44.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                206.9514268274405}, {-69.96211856823179, -66.15045653317553}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.4222466671236076]& ,
             TagBoxNote->"0.4222466671236076"],
            StyleBox["0.4222466671236076`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.4222466671236076, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 44.5}, {-0.06149523544691138, 45.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{183.88072008443143`, 
                187.25000000000003`}, {-73.27378060328802, \
-69.46211856823179}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.06149523544691138]& ,
             TagBoxNote->"-0.06149523544691138"],
            StyleBox[
             RowBox[{"-", "0.06149523544691138`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.06149523544691138, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 45.5}, {0.29776202107541616`, 46.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                201.14315091619378`}, {-76.58544263834425, \
-72.77378060328802}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.29776202107541616`]& ,
             TagBoxNote->"0.29776202107541616"],
            StyleBox["0.29776202107541616`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.29776202107541616`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 46.5}, {0.3425356300441771, 47.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                203.23222360658934`}, {-79.89710467340048, \
-76.08544263834425}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.3425356300441771]& ,
             TagBoxNote->"0.3425356300441771"],
            StyleBox["0.3425356300441771`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.3425356300441771, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 47.5}, {-0.06571555325849165, 48.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{183.68380607888156`, 
                187.25000000000003`}, {-83.20876670845674, \
-79.39710467340048}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.06571555325849165]& ,
             TagBoxNote->"-0.06571555325849165"],
            StyleBox[
             RowBox[{"-", "0.06571555325849165`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.06571555325849165, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 48.5}, {-1.0917518451182033`, 49.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{135.81041713285356`, 
                187.25000000000003`}, {-86.52042874351297, \
-82.70876670845674}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.0917518451182033`]& ,
             TagBoxNote->"-1.0917518451182033"],
            StyleBox[
             RowBox[{"-", "1.0917518451182033`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.0917518451182033`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 49.5}, {0.8526909429763663, 50.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                227.03534237797157`}, {-89.8320907785692, \
-86.02042874351297}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8526909429763663]& ,
             TagBoxNote->"0.8526909429763663"],
            StyleBox["0.8526909429763663`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8526909429763663, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 50.5}, {0.1750751184672068, 51.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000003`, 
                195.41875514798897`}, {-93.14375281362543, \
-89.3320907785692}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.1750751184672068]& ,
             TagBoxNote->"0.1750751184672068"],
            StyleBox["0.1750751184672068`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.1750751184672068, {}], 
            "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
       StyleBox[{
         {Thickness[Tiny], LineBox[{{0., -0.52}, {0., 52.5404}}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}], 
            LineBox[{{0., 51.5}, 
              Offset[{-6., 0.}, {0., 
               51.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
              LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}]}, {}}}, 
           StyleBox[
            {Thickness[Tiny], 
             InsetBox["\<\"Population\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Latitude\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Longitude\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Elevation\"\>", Offset[{-2, 0}, {0., 4.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"MagneticFieldStrength\"\>", 
              Offset[{-2, 0}, {0., 5.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPopulation\"\>", 
              Offset[{-2, 0}, {0., 6.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLatitude\"\>", Offset[{-2, 0}, {0., 7.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryLongitude\"\>", Offset[{-2, 0}, {0., 8.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryArea\"\>", Offset[{-2, 0}, {0., 9.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterArea\"\>", 
              Offset[{-2, 0}, {0., 10.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBoundaryLength\"\>", 
              Offset[{-2, 0}, {0., 11.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryCoastlineLength\"\>", 
              Offset[{-2, 0}, {0., 12.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterwayLength\"\>", 
              Offset[{-2, 0}, {0., 13.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryContributingFamilyWorkers\"\>", 
              Offset[{-2, 0}, {0., 14.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGDPPerPersonEmployed\"\>", 
              Offset[{-2, 0}, {0., 15.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGiniIndex\"\>", 
              Offset[{-2, 0}, {0., 16.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryInterestRateSpread\"\>", 
              Offset[{-2, 0}, {0., 17.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPovertyHeadcount\"\>", 
              Offset[{-2, 0}, {0., 18.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryUnemploymentRate\"\>", 
              Offset[{-2, 0}, {0., 19.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBookTitles\"\>", 
              Offset[{-2, 0}, {0., 20.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryIlliteracyFraction\"\>", 
              Offset[{-2, 0}, {0., 21.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleLifeExpectancy\"\>", 
              Offset[{-2, 0}, {0., 22.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleMedianAge\"\>", 
              Offset[{-2, 0}, {0., 23.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleLifeExpectancy\"\>", 
              Offset[{-2, 0}, {0., 24.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleMedianAge\"\>", 
              Offset[{-2, 0}, {0., 25.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryHospitalBedsPer10000Population\"\>", 
              Offset[{-2, 0}, {0., 26.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryArmy\"\>", Offset[{-2, 0}, {0., 27.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryHIVAIDSPopulation\"\>", 
              Offset[{-2, 0}, {0., 28.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElectricityTotal\"\>", 
              Offset[{-2, 0}, {0., 29.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryChildPopulation\"\>", 
              Offset[{-2, 0}, {0., 30.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElderlyPopulation\"\>", 
              Offset[{-2, 0}, {0., 31.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualMarriages\"\>", 
              Offset[{-2, 0}, {0., 32.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualDivorces\"\>", 
              Offset[{-2, 0}, {0., 33.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNetIncomeFromAbroad\"\>", 
              Offset[{-2, 0}, {0., 34.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentDebt\"\>", 
              Offset[{-2, 0}, {0., 35.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentSurplus\"\>", 
              Offset[{-2, 0}, {0., 36.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryImportsValue\"\>", 
              Offset[{-2, 0}, {0., 37.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryExportsValue\"\>", 
              Offset[{-2, 0}, {0., 38.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLeisureArrivals\"\>", 
              Offset[{-2, 0}, {0., 39.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNewspaperTitles\"\>", 
              Offset[{-2, 0}, {0., 40.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"Street\"\>", Offset[{-2, 0}, {0., 41.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Highway\"\>", Offset[{-2, 0}, {0., 42.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Water\"\>", Offset[{-2, 0}, {0., 43.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Park\"\>", Offset[{-2, 0}, {0., 44.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Train\"\>", Offset[{-2, 0}, {0., 45.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Interesting\"\>", Offset[{-2, 0}, {0., 46.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Building\"\>", Offset[{-2, 0}, {0., 47.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Annotations\"\>", Offset[{-2, 0}, {0., 48.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"MeanNeighborDegree\"\>", 
              Offset[{-2, 0}, {0., 49.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"DegreeCentrality\"\>", 
              Offset[{-2, 0}, {0., 50.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"ClosenessCentrality\"\>", 
              Offset[{-2, 0}, {0., 51.}], {1, 0}, Automatic, {1, 0}]}, 
            "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., -0.52},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{Automatic, 196.37890625},
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, None}], 
     GraphicsBox[{
       {Opacity[0], PointBox[{{0., -0.52}, {0., 51.5}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.34299999999999997`], Thickness[Small]}], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0.5}, {-0.27120063371748615`, 1.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.09398506672446`, 187.25000000000009`}, {
                72.72201775750669, 76.57745451121625}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.27120063371748615`]& ,
             TagBoxNote->"-0.27120063371748615"],
            StyleBox[
             RowBox[{"-", "0.27120063371748615`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.27120063371748615`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 1.5}, {-0.26841599756493384`, 2.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.10072090238523`, 187.25000000000009`}, {
                69.36658100379714, 73.22201775750669}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.26841599756493384`]& ,
             TagBoxNote->"-0.26841599756493384"],
            StyleBox[
             RowBox[{"-", "0.26841599756493384`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.26841599756493384`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 2.5}, {-0.6006293586377538, 3.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.29712054603618`, 187.25000000000009`}, {
                66.01114425008757, 69.86658100379714}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.6006293586377538]& ,
             TagBoxNote->"-0.6006293586377538"],
            StyleBox[
             RowBox[{"-", "0.6006293586377538`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.6006293586377538, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 3.5}, {-0.03848795918906589, 4.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.6569003798656, 187.25000000000009`}, {
                62.655707496378014`, 66.51114425008757}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.03848795918906589]& ,
             TagBoxNote->"-0.03848795918906589"],
            StyleBox[
             RowBox[{"-", "0.03848795918906589`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.03848795918906589, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 4.5}, {-0.1589135912369115, 5.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.36559939030067`, 187.25000000000009`}, {
                59.30027074266846, 63.155707496378014`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.1589135912369115]& ,
             TagBoxNote->"-0.1589135912369115"],
            StyleBox[
             RowBox[{"-", "0.1589135912369115`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.1589135912369115, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 5.5}, {7.147577090895368, 6.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 204.53947769808897`}, {
                55.944833988958905`, 59.80027074266846}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 7.147577090895368]& ,
             TagBoxNote->"7.147577090895368"],
            StyleBox["7.147577090895368`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[7.147577090895368, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 6.5}, {1.667344050192039, 7.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 191.28318598795636`}, {
                52.58939723524934, 56.444833988958905`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.667344050192039]& ,
             TagBoxNote->"1.667344050192039"],
            StyleBox["1.667344050192039`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.667344050192039, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 7.5}, {3.22904481462058, 8.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 195.06082842458983`}, {
                49.23396048153978, 53.08939723524934}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3.22904481462058]& ,
             TagBoxNote->"3.22904481462058"],
            StyleBox["3.22904481462058`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3.22904481462058, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 8.5}, {-1.5967822988309095`, 9.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{182.8874978411207, 187.25000000000009`}, {
                45.87852372783023, 49.73396048153978}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.5967822988309095`]& ,
             TagBoxNote->"-1.5967822988309095"],
            StyleBox[
             RowBox[{"-", "1.5967822988309095`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.5967822988309095`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 9.5}, {-7.811560298779408, 10.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{167.8543944184862, 187.25000000000009`}, {
                42.523086974120666`, 46.37852372783023}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -7.811560298779408]& ,
             TagBoxNote->"-7.811560298779408"],
            StyleBox[
             RowBox[{"-", "7.811560298779408`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-7.811560298779408, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 10.5}, {61.07293871278904, 11.5}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{186.75000000000009`, 334.98107004002145`}, {
                39.16765022041111, 43.023086974120666`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 61.07293871278904]& ,
             TagBoxNote->"61.07293871278904"],
            StyleBox["61.07293871278904`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[61.07293871278904, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 11.5}, {-50.57622333500035, 12.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{64.40973360148661, 187.25000000000009`}, {
                35.81221346670155, 39.66765022041111}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -50.57622333500035]& ,
             TagBoxNote->"-50.57622333500035"],
            StyleBox[
             RowBox[{"-", "50.57622333500035`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-50.57622333500035, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 12.5}, {-5.021053764964051, 13.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{174.60443011159242`, 187.25000000000009`}, {
                32.45677671299199, 36.31221346670155}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -5.021053764964051]& ,
             TagBoxNote->"-5.021053764964051"],
            StyleBox[
             RowBox[{"-", "5.021053764964051`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-5.021053764964051, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 13.5}, {-2.013268626761803, 14.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{181.8800472062066, 187.25000000000009`}, {
                29.101339959282434`, 32.95677671299199}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -2.013268626761803]& ,
             TagBoxNote->"-2.013268626761803"],
            StyleBox[
             RowBox[{"-", "2.013268626761803`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-2.013268626761803, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 14.5}, {6.608804256142408, 15.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 203.23622475064428`}, {
                25.745903205572873`, 29.601339959282434`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 6.608804256142408]& ,
             TagBoxNote->"6.608804256142408"],
            StyleBox["6.608804256142408`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[6.608804256142408, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 15.5}, {-0.683594397731988, 16.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.09643405117237`, 187.25000000000009`}, {
                22.39046645186332, 26.245903205572873`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.683594397731988]& ,
             TagBoxNote->"-0.683594397731988"],
            StyleBox[
             RowBox[{"-", "0.683594397731988`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-0.683594397731988, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 16.5}, {-1.0730749066960756`, 17.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{184.15430856054246`, 187.25000000000009`}, {
                19.035029698153757`, 22.89046645186332}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.0730749066960756`]& ,
             TagBoxNote->"-1.0730749066960756"],
            StyleBox[
             RowBox[{"-", "1.0730749066960756`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.0730749066960756`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 17.5}, {3.0080775096066033`, 18.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 194.52632432012732`}, {
                15.679592944444202`, 19.535029698153757`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3.0080775096066033`]& ,
             TagBoxNote->"3.0080775096066033"],
            StyleBox["3.0080775096066033`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3.0080775096066033`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 18.5}, {-0.6516473809098442, 19.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.1737115996119, 187.25000000000009`}, {
                12.32415619073464, 16.179592944444202`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.6516473809098442]& ,
             TagBoxNote->"-0.6516473809098442"],
            StyleBox[
             RowBox[{"-", "0.6516473809098442`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.6516473809098442, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 19.5}, {-2.002181443965468, 20.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{181.9068663082959, 187.25000000000009`}, {
                8.968719437025086, 12.82415619073464}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -2.002181443965468]& ,
             TagBoxNote->"-2.002181443965468"],
            StyleBox[
             RowBox[{"-", "2.002181443965468`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-2.002181443965468, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 20.5}, {-1.4100158831302072`, 21.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{183.33927244081303`, 187.25000000000009`}, {
                5.613282683315518, 9.468719437025086}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.4100158831302072`]& ,
             TagBoxNote->"-1.4100158831302072"],
            StyleBox[
             RowBox[{"-", "1.4100158831302072`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.4100158831302072`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 21.5}, {2.4854787743249602`, 22.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 193.26219536232833`}, {
                2.2578459296059634`, 6.113282683315518}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.4854787743249602`]& ,
             TagBoxNote->"2.4854787743249602"],
            StyleBox["2.4854787743249602`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.4854787743249602`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 22.5}, {-1.4981046528705093`, 23.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{183.12619200803016`, 
                187.25000000000009`}, {-1.097590824103591, 
                2.7578459296059634`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.4981046528705093`]& ,
             TagBoxNote->"-1.4981046528705093"],
            StyleBox[
             RowBox[{"-", "1.4981046528705093`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.4981046528705093`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 23.5}, {0.6992514170877655, 24.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                188.9414391586621}, {-4.453027577813145, -0.597590824103591}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6992514170877655]& ,
             TagBoxNote->"0.6992514170877655"],
            StyleBox["0.6992514170877655`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6992514170877655, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 24.5}, {3.050558277020114, 25.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                194.62908225774075`}, {-7.808464331522714, \
-3.9530275778131454`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3.050558277020114]& ,
             TagBoxNote->"3.050558277020114"],
            StyleBox["3.050558277020114`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3.050558277020114, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 25.5}, {-1.2910784810539502`, 26.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{183.62697350853367`, 
                187.25000000000009`}, {-11.163901085232268`, \
-7.308464331522714}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.2910784810539502`]& ,
             TagBoxNote->"-1.2910784810539502"],
            StyleBox[
             RowBox[{"-", "1.2910784810539502`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.2910784810539502`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 26.5}, {0.5509783815130636, 27.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                188.58277729196294`}, {-14.519337838941823`, \
-10.663901085232268`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5509783815130636]& ,
             TagBoxNote->"0.5509783815130636"],
            StyleBox["0.5509783815130636`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5509783815130636, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 27.5}, {-1.7821086348190214`, 28.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{182.43920669124049`, 
                187.25000000000009`}, {-17.87477459265139, \
-14.019337838941823`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.7821086348190214`]& ,
             TagBoxNote->"-1.7821086348190214"],
            StyleBox[
             RowBox[{"-", "1.7821086348190214`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.7821086348190214`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 28.5}, {-1.6129640791929214`, 29.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{182.84835527194986`, 
                187.25000000000009`}, {-21.230211346360946`, \
-17.37477459265139}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.6129640791929214`]& ,
             TagBoxNote->"-1.6129640791929214"],
            StyleBox[
             RowBox[{"-", "1.6129640791929214`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.6129640791929214`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 29.5}, {2.369955859117555, 30.5}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{186.75000000000009`, 
                192.98275369409632`}, {-24.5856481000705, \
-20.730211346360946`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.369955859117555]& ,
             TagBoxNote->"2.369955859117555"],
            StyleBox["2.369955859117555`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.369955859117555, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 30.5}, {-3.8427050617282967`, 31.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{177.45477133437095`, 
                187.25000000000009`}, {-27.941084853780055`, \
-24.0856481000705}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -3.8427050617282967`]& ,
             TagBoxNote->"-3.8427050617282967"],
            StyleBox[
             RowBox[{"-", "3.8427050617282967`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-3.8427050617282967`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 31.5}, {0.04537877712645999, 32.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                187.359768015807}, {-31.296521607489623`, \
-27.441084853780055`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.04537877712645999]& ,
             TagBoxNote->"0.04537877712645999"],
            StyleBox["0.04537877712645999`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.04537877712645999, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 32.5}, {0.4036610833628669, 33.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                188.22642728572725`}, {-34.65195836119918, \
-30.796521607489623`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.4036610833628669]& ,
             TagBoxNote->"0.4036610833628669"],
            StyleBox["0.4036610833628669`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.4036610833628669, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 33.5}, {0.9718093018408744, 34.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                189.6007371851052}, {-38.00739511490873, -34.15195836119918}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.9718093018408744]& ,
             TagBoxNote->"0.9718093018408744"],
            StyleBox["0.9718093018408744`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.9718093018408744, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 34.5}, {-1.1561203460454665`, 35.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{183.95342758321263`, 
                187.25000000000009`}, {-41.36283186861829, \
-37.50739511490873}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.1561203460454665`]& ,
             TagBoxNote->"-1.1561203460454665"],
            StyleBox[
             RowBox[{"-", "1.1561203460454665`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.1561203460454665`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 35.5}, {-5.780186320686073, 36.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{172.7681427620278, 
                187.25000000000009`}, {-44.718268622327855`, \
-40.86283186861829}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -5.780186320686073]& ,
             TagBoxNote->"-5.780186320686073"],
            StyleBox[
             RowBox[{"-", "5.780186320686073`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-5.780186320686073, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 36.5}, {1.759034147144277, 37.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                191.50497777365263`}, {-48.07370537603741, \
-44.218268622327855`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.759034147144277]& ,
             TagBoxNote->"1.759034147144277"],
            StyleBox["1.759034147144277`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.759034147144277, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 37.5}, {-5.532914268974414, 38.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{173.36627616710504`, 
                187.25000000000009`}, {-51.429142129746964`, \
-47.57370537603741}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -5.532914268974414]& ,
             TagBoxNote->"-5.532914268974414"],
            StyleBox[
             RowBox[{"-", "5.532914268974414`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-5.532914268974414, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 38.5}, {0.8952253039879494, 39.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                189.4154859725516}, {-54.78457888345653, \
-50.929142129746964`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8952253039879494]& ,
             TagBoxNote->"0.8952253039879494"],
            StyleBox["0.8952253039879494`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8952253039879494, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 39.5}, {-0.24098140007950408`, 40.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.16708323123433`, 
                187.25000000000009`}, {-58.14001563716607, \
-54.28457888345653}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.24098140007950408`]& ,
             TagBoxNote->"-0.24098140007950408"],
            StyleBox[
             RowBox[{"-", "0.24098140007950408`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.24098140007950408`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 40.5}, {-0.18720410368155527`, 41.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.29716666439103`, 
                187.25000000000009`}, {-61.49545239087564, \
-57.64001563716607}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.18720410368155527`]& ,
             TagBoxNote->"-0.18720410368155527"],
            StyleBox[
             RowBox[{"-", "0.18720410368155527`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.18720410368155527`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 41.5}, {-0.2900958589077294, 42.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.0482788686139, 
                187.25000000000009`}, {-64.85088914458521, \
-60.99545239087564}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.2900958589077294]& ,
             TagBoxNote->"-0.2900958589077294"],
            StyleBox[
             RowBox[{"-", "0.2900958589077294`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.2900958589077294, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 42.5}, {-0.6008435234159002, 43.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.29660249675763`, 
                187.25000000000009`}, {-68.20632589829475, \
-64.35088914458521}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.6008435234159002]& ,
             TagBoxNote->"-0.6008435234159002"],
            StyleBox[
             RowBox[{"-", "0.6008435234159002`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.6008435234159002, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 43.5}, {-0.08037973226071493, 44.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.5555671774328, 
                187.25000000000009`}, {-71.56176265200432, \
-67.70632589829475}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.08037973226071493]& ,
             TagBoxNote->"-0.08037973226071493"],
            StyleBox[
             RowBox[{"-", "0.08037973226071493`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.08037973226071493, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 44.5}, {-0.0005502889284654255, 45.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.7486688904457, 
                187.25000000000009`}, {-74.91719940571389, \
-71.06176265200432}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.0005502889284654255]& ,
             TagBoxNote->"-0.0005502889284654255"],
            StyleBox[
             RowBox[{"-", "0.0005502889284654255`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.0005502889284654255, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 45.5}, {-0.622132824621719, 46.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.24510520001985`, 
                187.25000000000009`}, {-78.27263615942343, \
-74.41719940571389}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.622132824621719]& ,
             TagBoxNote->"-0.622132824621719"],
            StyleBox[
             RowBox[{"-", "0.622132824621719`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-0.622132824621719, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 46.5}, {-0.6322541988128725, 47.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{185.2206223198597, 
                187.25000000000009`}, {-81.628072913133, -77.77263615942343}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.6322541988128725]& ,
             TagBoxNote->"-0.6322541988128725"],
            StyleBox[
             RowBox[{"-", "0.6322541988128725`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.6322541988128725, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 47.5}, {0.1687802958132747, 48.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                187.65826746227867`}, {-84.98350966684256, -81.128072913133}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.1687802958132747]& ,
             TagBoxNote->"0.1687802958132747"],
            StyleBox["0.1687802958132747`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.1687802958132747, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 48.5}, {1.441337060708717, 49.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75000000000009`, 
                190.7364912472642}, {-88.3389464205521, -84.48350966684256}}],
              
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.441337060708717]& ,
             TagBoxNote->"1.441337060708717"],
            StyleBox["1.441337060708717`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.441337060708717, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 49.5}, {-1.4407546325075682`, 50.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{183.26491760489193`, 
                187.25000000000009`}, {-91.69438317426167, \
-87.8389464205521}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.4407546325075682`]& ,
             TagBoxNote->"-1.4407546325075682"],
            StyleBox[
             RowBox[{"-", "1.4407546325075682`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.4407546325075682`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 50.5}, {-0.0847175081418381, 51.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.54507440786875`, 
                187.25000000000009`}, {-95.04981992797121, \
-91.19438317426167}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.0847175081418381]& ,
             TagBoxNote->"-0.0847175081418381"],
            StyleBox[
             RowBox[{"-", "0.0847175081418381`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.0847175081418381, {}], 
            "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
       StyleBox[{
         {Thickness[Tiny], LineBox[{{0., -0.52}, {0., 52.5404}}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}], 
            LineBox[{{0., 51.5}, 
              Offset[{-6., 0.}, {0., 
               51.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
              LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}]}, {}}}, 
           StyleBox[
            {Thickness[Tiny], 
             InsetBox["\<\"Population\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Latitude\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Longitude\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Elevation\"\>", Offset[{-2, 0}, {0., 4.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"MagneticFieldStrength\"\>", 
              Offset[{-2, 0}, {0., 5.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPopulation\"\>", 
              Offset[{-2, 0}, {0., 6.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLatitude\"\>", Offset[{-2, 0}, {0., 7.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryLongitude\"\>", Offset[{-2, 0}, {0., 8.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryArea\"\>", Offset[{-2, 0}, {0., 9.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterArea\"\>", 
              Offset[{-2, 0}, {0., 10.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBoundaryLength\"\>", 
              Offset[{-2, 0}, {0., 11.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryCoastlineLength\"\>", 
              Offset[{-2, 0}, {0., 12.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterwayLength\"\>", 
              Offset[{-2, 0}, {0., 13.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryContributingFamilyWorkers\"\>", 
              Offset[{-2, 0}, {0., 14.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGDPPerPersonEmployed\"\>", 
              Offset[{-2, 0}, {0., 15.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGiniIndex\"\>", 
              Offset[{-2, 0}, {0., 16.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryInterestRateSpread\"\>", 
              Offset[{-2, 0}, {0., 17.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPovertyHeadcount\"\>", 
              Offset[{-2, 0}, {0., 18.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryUnemploymentRate\"\>", 
              Offset[{-2, 0}, {0., 19.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBookTitles\"\>", 
              Offset[{-2, 0}, {0., 20.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryIlliteracyFraction\"\>", 
              Offset[{-2, 0}, {0., 21.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleLifeExpectancy\"\>", 
              Offset[{-2, 0}, {0., 22.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleMedianAge\"\>", 
              Offset[{-2, 0}, {0., 23.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleLifeExpectancy\"\>", 
              Offset[{-2, 0}, {0., 24.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleMedianAge\"\>", 
              Offset[{-2, 0}, {0., 25.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryHospitalBedsPer10000Population\"\>", 
              Offset[{-2, 0}, {0., 26.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryArmy\"\>", Offset[{-2, 0}, {0., 27.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryHIVAIDSPopulation\"\>", 
              Offset[{-2, 0}, {0., 28.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElectricityTotal\"\>", 
              Offset[{-2, 0}, {0., 29.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryChildPopulation\"\>", 
              Offset[{-2, 0}, {0., 30.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElderlyPopulation\"\>", 
              Offset[{-2, 0}, {0., 31.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualMarriages\"\>", 
              Offset[{-2, 0}, {0., 32.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualDivorces\"\>", 
              Offset[{-2, 0}, {0., 33.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNetIncomeFromAbroad\"\>", 
              Offset[{-2, 0}, {0., 34.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentDebt\"\>", 
              Offset[{-2, 0}, {0., 35.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentSurplus\"\>", 
              Offset[{-2, 0}, {0., 36.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryImportsValue\"\>", 
              Offset[{-2, 0}, {0., 37.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryExportsValue\"\>", 
              Offset[{-2, 0}, {0., 38.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLeisureArrivals\"\>", 
              Offset[{-2, 0}, {0., 39.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNewspaperTitles\"\>", 
              Offset[{-2, 0}, {0., 40.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"Street\"\>", Offset[{-2, 0}, {0., 41.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Highway\"\>", Offset[{-2, 0}, {0., 42.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Water\"\>", Offset[{-2, 0}, {0., 43.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Park\"\>", Offset[{-2, 0}, {0., 44.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Train\"\>", Offset[{-2, 0}, {0., 45.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Interesting\"\>", Offset[{-2, 0}, {0., 46.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Building\"\>", Offset[{-2, 0}, {0., 47.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Annotations\"\>", Offset[{-2, 0}, {0., 48.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"MeanNeighborDegree\"\>", 
              Offset[{-2, 0}, {0., 49.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"DegreeCentrality\"\>", 
              Offset[{-2, 0}, {0., 50.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"ClosenessCentrality\"\>", 
              Offset[{-2, 0}, {0., 51.}], {1, 0}, Automatic, {1, 0}]}, 
            "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., -0.52},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{Automatic, 198.75},
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, None}], 
     GraphicsBox[{
       {Opacity[0], PointBox[{{0., -0.52}, {0., 51.5}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.34299999999999997`], Thickness[Small]}], 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0.5}, {0.022617220094396706`, 1.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 187.76102886749433`}, {
                72.35316858144644, 76.18235492726504}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.022617220094396706`]& ,
             TagBoxNote->"0.022617220094396706"],
            StyleBox["0.022617220094396706`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.022617220094396706`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 1.5}, {0.3470125505390351, 2.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 195.09063779581018`}, {
                69.02398223562783, 72.85316858144644}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.3470125505390351]& ,
             TagBoxNote->"0.3470125505390351"],
            StyleBox["0.3470125505390351`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.3470125505390351, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 2.5}, {-0.44953957655068644`, 3.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{176.59279678316898`, 187.25}, {
                65.69479588980923, 69.52398223562783}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.44953957655068644`]& ,
             TagBoxNote->"-0.44953957655068644"],
            StyleBox[
             RowBox[{"-", "0.44953957655068644`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.44953957655068644`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 3.5}, {0.0784704196397179, 4.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 189.02301408010905`}, {
                62.36560954399062, 66.19479588980923}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.0784704196397179]& ,
             TagBoxNote->"0.0784704196397179"],
            StyleBox["0.0784704196397179`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.0784704196397179, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 4.5}, {0.0390113839510855, 5.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 188.13144976600591`}, {
                59.03642319817202, 62.86560954399062}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.0390113839510855]& ,
             TagBoxNote->"0.0390113839510855"],
            StyleBox["0.0390113839510855`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.0390113839510855, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 5.5}, {0.09279206232064752, 6.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 189.34660702430588`}, {
                55.70723685235342, 59.53642319817202}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.09279206232064752]& ,
             TagBoxNote->"0.09279206232064752"],
            StyleBox["0.09279206232064752`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.09279206232064752, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 6.5}, {-1.4989358364492382`, 7.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{152.88202331010152`, 187.25}, {
                52.378050506534805`, 56.20723685235342}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.4989358364492382`]& ,
             TagBoxNote->"-1.4989358364492382"],
            StyleBox[
             RowBox[{"-", "1.4989358364492382`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.4989358364492382`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 7.5}, {-1.2665355814621417`, 8.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{158.1330328778456, 187.25}, {
                49.04886416071621, 52.878050506534805`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.2665355814621417`]& ,
             TagBoxNote->"-1.2665355814621417"],
            StyleBox[
             RowBox[{"-", "1.2665355814621417`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.2665355814621417`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 8.5}, {0.8088175118699894, 9.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 205.52497346603212`}, {
                45.719677814897594`, 49.54886416071621}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8088175118699894]& ,
             TagBoxNote->"0.8088175118699894"],
            StyleBox["0.8088175118699894`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8088175118699894, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 9.5}, {-0.7603559623484877, 10.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{169.5699997740757, 187.25}, {
                42.390491469078995`, 46.219677814897594`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.7603559623484877]& ,
             TagBoxNote->"-0.7603559623484877"],
            StyleBox[
             RowBox[{"-", "0.7603559623484877`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.7603559623484877, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 10.5}, {-2.2314287819451266`, 11.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{136.33157905470463`, 187.25}, {
                39.06130512326039, 42.890491469078995`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -2.2314287819451266`]& ,
             TagBoxNote->"-2.2314287819451266"],
            StyleBox[
             RowBox[{"-", "2.2314287819451266`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-2.2314287819451266`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 11.5}, {2.233211086982635, 12.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 237.7086915586177}, {
                35.732118777441784`, 39.56130512326039}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.233211086982635]& ,
             TagBoxNote->"2.233211086982635"],
            StyleBox["2.233211086982635`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.233211086982635, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 12.5}, {0.18383594764901545`, 13.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 191.40371454757604`}, {
                32.40293243162318, 36.232118777441784`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.18383594764901545`]& ,
             TagBoxNote->"0.18383594764901545"],
            StyleBox["0.18383594764901545`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.18383594764901545`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 13.5}, {1.0990936080961324`, 14.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 212.0836691897331}, {
                29.073746085804572`, 32.90293243162318}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.0990936080961324`]& ,
             TagBoxNote->"1.0990936080961324"],
            StyleBox["1.0990936080961324`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.0990936080961324`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 14.5}, {-4.011782966448521, 15.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{96.10504463321864, 187.25}, {
                25.744559739985966`, 29.573746085804572`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -4.011782966448521]& ,
             TagBoxNote->"-4.011782966448521"],
            StyleBox[
             RowBox[{"-", "4.011782966448521`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-4.011782966448521, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 15.5}, {-4.813002592885347, 16.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{78.00174296292694, 187.25}, {
                22.415373394167368`, 26.244559739985966`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -4.813002592885347]& ,
             TagBoxNote->"-4.813002592885347"],
            StyleBox[
             RowBox[{"-", "4.813002592885347`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-4.813002592885347, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 16.5}, {-0.18819019651719282`, 17.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{182.49790258933973`, 187.25}, {
                19.086187048348762`, 22.915373394167368`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.18819019651719282`]& ,
             TagBoxNote->"-0.18819019651719282"],
            StyleBox[
             RowBox[{"-", "0.18819019651719282`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.18819019651719282`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 17.5}, {-1.1622615836928425`, 18.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{160.48907056801045`, 187.25}, {
                15.757000702530156`, 19.586187048348762`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.1622615836928425`]& ,
             TagBoxNote->"-1.1622615836928425"],
            StyleBox[
             RowBox[{"-", "1.1622615836928425`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.1622615836928425`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 18.5}, {2.0644171041985686`, 19.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 233.89484540502386`}, {
                12.42781435671155, 16.257000702530156`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.0644171041985686`]& ,
             TagBoxNote->"2.0644171041985686"],
            StyleBox["2.0644171041985686`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.0644171041985686`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 19.5}, {1.1345543835326328`, 20.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 212.8848940898823}, {
                9.098628010892952, 12.92781435671155}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.1345543835326328`]& ,
             TagBoxNote->"1.1345543835326328"],
            StyleBox["1.1345543835326328`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.1345543835326328`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 20.5}, {0.38462026593871457`, 21.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 195.9403721190177}, {
                5.769441665074339, 9.598628010892952}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.38462026593871457`]& ,
             TagBoxNote->"0.38462026593871457"],
            StyleBox["0.38462026593871457`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.38462026593871457`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 21.5}, {-0.5014051054860174, 22.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{175.42091171492476`, 187.25}, {
                2.4402553192557406`, 6.269441665074339}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.5014051054860174]& ,
             TagBoxNote->"-0.5014051054860174"],
            StyleBox[
             RowBox[{"-", "0.5014051054860174`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.5014051054860174, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 22.5}, {1.93601502097113, 23.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                230.9936413268141}, {-0.8889310265628723, 
                2.9402553192557406`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.93601502097113]& ,
             TagBoxNote->"1.93601502097113"],
            StyleBox["1.93601502097113`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.93601502097113, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 23.5}, {0.42859062092221833`, 24.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                196.93386825235154`}, {-4.218117372381471, \
-0.38893102656287226`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.42859062092221833`]& ,
             TagBoxNote->"0.42859062092221833"],
            StyleBox["0.42859062092221833`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.42859062092221833`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 24.5}, {2.177323829152934, 25.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                236.44593680994052`}, {-7.547303718200084, \
-3.718117372381471}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.177323829152934]& ,
             TagBoxNote->"2.177323829152934"],
            StyleBox["2.177323829152934`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.177323829152934, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 25.5}, {-0.25600613028699915`, 26.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{180.96562321602096`, 
                187.25}, {-10.876490064018682`, -7.047303718200084}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.25600613028699915`]& ,
             TagBoxNote->"-0.25600613028699915"],
            StyleBox[
             RowBox[{"-", "0.25600613028699915`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.25600613028699915`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 26.5}, {1.7615426825828422`, 27.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                227.05149454115565`}, {-14.205676409837295`, \
-10.376490064018682`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.7615426825828422`]& ,
             TagBoxNote->"1.7615426825828422"],
            StyleBox["1.7615426825828422`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.7615426825828422`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 27.5}, {2.6592251697513802`, 28.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                247.3343437539503}, {-17.534862755655894`, \
-13.705676409837295`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.6592251697513802`]& ,
             TagBoxNote->"2.6592251697513802"],
            StyleBox["2.6592251697513802`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.6592251697513802`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 28.5}, {-0.21730367438615872`, 29.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{181.84009285135673`, 
                187.25}, {-20.864049101474492`, -17.034862755655894`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.21730367438615872`]& ,
             TagBoxNote->"-0.21730367438615872"],
            StyleBox[
             RowBox[{"-", "0.21730367438615872`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.21730367438615872`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 29.5}, {1.1893137211480926`, 30.5}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{186.75, 
                214.12216384140675`}, {-24.193235447293105`, \
-20.364049101474492`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.1893137211480926`]& ,
             TagBoxNote->"1.1893137211480926"],
            StyleBox["1.1893137211480926`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.1893137211480926`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 30.5}, {-0.2143244084465561, 31.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{181.90740841413256`, 
                187.25}, {-27.522421793111704`, -23.693235447293105`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.2143244084465561]& ,
             TagBoxNote->"-0.2143244084465561"],
            StyleBox[
             RowBox[{"-", "0.2143244084465561`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.2143244084465561, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 31.5}, {2.356960979021391, 32.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                240.50478086212937`}, {-30.851608138930317`, \
-27.022421793111704`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 2.356960979021391]& ,
             TagBoxNote->"2.356960979021391"],
            StyleBox["2.356960979021391`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[2.356960979021391, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 32.5}, {-0.5874501639342562, 33.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{173.47675108913762`, 
                187.25}, {-34.180794484748915`, -30.351608138930317`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.5874501639342562]& ,
             TagBoxNote->"-0.5874501639342562"],
            StyleBox[
             RowBox[{"-", "0.5874501639342562`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.5874501639342562, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 33.5}, {-3.1663663679462957`, 34.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{115.20696277746222`, 
                187.25}, {-37.50998083056753, -33.680794484748915`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -3.1663663679462957`]& ,
             TagBoxNote->"-3.1663663679462957"],
            StyleBox[
             RowBox[{"-", "3.1663663679462957`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-3.1663663679462957`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 34.5}, {1.0935880650221854`, 35.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                211.95927320161968`}, {-40.83916717638613, \
-37.00998083056753}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 1.0935880650221854`]& ,
             TagBoxNote->"1.0935880650221854"],
            StyleBox["1.0935880650221854`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[1.0935880650221854`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 35.5}, {7.046359565733994, 36.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                346.4602448402593}, {-44.168353522204725`, \
-40.33916717638613}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 7.046359565733994]& ,
             TagBoxNote->"7.046359565733994"],
            StyleBox["7.046359565733994`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[7.046359565733994, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 36.5}, {3.2869611019970995`, 37.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                261.5178367385946}, {-47.49753986802334, \
-43.668353522204725`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 3.2869611019970995`]& ,
             TagBoxNote->"3.2869611019970995"],
            StyleBox["3.2869611019970995`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[3.2869611019970995`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 37.5}, {4.6953531882599435`, 38.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                293.3400062990879}, {-50.82672621384195, -46.99753986802334}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 4.6953531882599435`]& ,
             TagBoxNote->"4.6953531882599435"],
            StyleBox["4.6953531882599435`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[4.6953531882599435`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 38.5}, {-3.176589620938394, 39.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{114.97597163987524`, 
                187.25}, {-54.155912559660536`, -50.32672621384195}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -3.176589620938394]& ,
             TagBoxNote->"-3.176589620938394"],
            StyleBox[
             RowBox[{"-", "3.176589620938394`"}], {}, StripOnInput -> False]],
           
           Annotation[#, 
            Style[-3.176589620938394, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 39.5}, {-0.49574316603848523`, 40.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{175.5488414291698, 
                187.25}, {-57.48509890547915, -53.655912559660536`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.49574316603848523`]& ,
             TagBoxNote->"-0.49574316603848523"],
            StyleBox[
             RowBox[{"-", "0.49574316603848523`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.49574316603848523`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 40.5}, {-0.8454359414458352, 41.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{167.6476448081208, 
                187.25}, {-60.81428525129776, -56.98509890547915}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.8454359414458352]& ,
             TagBoxNote->"-0.8454359414458352"],
            StyleBox[
             RowBox[{"-", "0.8454359414458352`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.8454359414458352, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 41.5}, {-0.24043901148526015`, 42.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{181.31735729554973`, 
                187.25}, {-64.14347159711637, -60.31428525129776}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.24043901148526015`]& ,
             TagBoxNote->"-0.24043901148526015"],
            StyleBox[
             RowBox[{"-", "0.24043901148526015`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.24043901148526015`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 42.5}, {-1.6995065392976443`, 43.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{148.35019231135922`, 
                187.25}, {-67.47265794293496, -63.643471597116374`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.6995065392976443`]& ,
             TagBoxNote->"-1.6995065392976443"],
            StyleBox[
             RowBox[{"-", "1.6995065392976443`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.6995065392976443`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 43.5}, {-0.7870655770210071, 44.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{168.96650455758405`, 
                187.25}, {-70.80184428875357, -66.97265794293496}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.7870655770210071]& ,
             TagBoxNote->"-0.7870655770210071"],
            StyleBox[
             RowBox[{"-", "0.7870655770210071`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.7870655770210071, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 44.5}, {-0.09846093612177276, 45.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{184.5253065819434, 
                187.25}, {-74.13103063457218, -70.30184428875357}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.09846093612177276]& ,
             TagBoxNote->"-0.09846093612177276"],
            StyleBox[
             RowBox[{"-", "0.09846093612177276`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.09846093612177276, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 45.5}, {-1.8510572291896281`, 46.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{144.92595285574757`, 
                187.25}, {-77.46021698039077, -73.63103063457218}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.8510572291896281`]& ,
             TagBoxNote->"-1.8510572291896281"],
            StyleBox[
             RowBox[{"-", "1.8510572291896281`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.8510572291896281`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 46.5}, {-1.5096165458908253`, 47.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{152.64069609008112`, 
                187.25}, {-80.78940332620938, -76.96021698039077}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -1.5096165458908253`]& ,
             TagBoxNote->"-1.5096165458908253"],
            StyleBox[
             RowBox[{"-", "1.5096165458908253`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-1.5096165458908253`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 47.5}, {-0.013037378330153615`, 48.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.45542459880804`, 
                187.25}, {-84.118589672028, -80.28940332620938}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.013037378330153615`]& ,
             TagBoxNote->"-0.013037378330153615"],
            StyleBox[
             RowBox[{"-", "0.013037378330153615`"}], {}, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[-0.013037378330153615`, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 48.5}, {-0.6908391275397641, 49.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{171.14071046335687`, 
                187.25}, {-87.4477760178466, -83.618589672028}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, -0.6908391275397641]& ,
             TagBoxNote->"-0.6908391275397641"],
            StyleBox[
             RowBox[{"-", "0.6908391275397641`"}], {}, StripOnInput -> False]],
           Annotation[#, 
            Style[-0.6908391275397641, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 49.5}, {0.655082044764864, 50.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                202.05136966677878`}, {-90.77696236366519, \
-86.9477760178466}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.655082044764864]& ,
             TagBoxNote->"0.655082044764864"],
            StyleBox["0.655082044764864`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.655082044764864, {}], "Tooltip"]& ]}, 
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 50.5}, {0.07836919979323453, 51.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{186.75, 
                189.02072704999213`}, {-94.1061487094838, \
-90.27696236366519}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.07836919979323453]& ,
             TagBoxNote->"0.07836919979323453"],
            StyleBox["0.07836919979323453`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.07836919979323453, {}], 
            "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
       StyleBox[{
         {Thickness[Tiny], LineBox[{{0., -0.52}, {0., 52.5404}}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}], 
            LineBox[{{0., 51.5}, 
              Offset[{-6., 0.}, {0., 
               51.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
              LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}]}, {}}}, 
           StyleBox[
            {Thickness[Tiny], 
             InsetBox["\<\"Population\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Latitude\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Longitude\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Elevation\"\>", Offset[{-2, 0}, {0., 4.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"MagneticFieldStrength\"\>", 
              Offset[{-2, 0}, {0., 5.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPopulation\"\>", 
              Offset[{-2, 0}, {0., 6.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLatitude\"\>", Offset[{-2, 0}, {0., 7.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryLongitude\"\>", Offset[{-2, 0}, {0., 8.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryArea\"\>", Offset[{-2, 0}, {0., 9.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterArea\"\>", 
              Offset[{-2, 0}, {0., 10.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBoundaryLength\"\>", 
              Offset[{-2, 0}, {0., 11.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryCoastlineLength\"\>", 
              Offset[{-2, 0}, {0., 12.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterwayLength\"\>", 
              Offset[{-2, 0}, {0., 13.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryContributingFamilyWorkers\"\>", 
              Offset[{-2, 0}, {0., 14.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGDPPerPersonEmployed\"\>", 
              Offset[{-2, 0}, {0., 15.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGiniIndex\"\>", 
              Offset[{-2, 0}, {0., 16.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryInterestRateSpread\"\>", 
              Offset[{-2, 0}, {0., 17.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPovertyHeadcount\"\>", 
              Offset[{-2, 0}, {0., 18.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryUnemploymentRate\"\>", 
              Offset[{-2, 0}, {0., 19.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBookTitles\"\>", 
              Offset[{-2, 0}, {0., 20.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryIlliteracyFraction\"\>", 
              Offset[{-2, 0}, {0., 21.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleLifeExpectancy\"\>", 
              Offset[{-2, 0}, {0., 22.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleMedianAge\"\>", 
              Offset[{-2, 0}, {0., 23.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleLifeExpectancy\"\>", 
              Offset[{-2, 0}, {0., 24.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleMedianAge\"\>", 
              Offset[{-2, 0}, {0., 25.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryHospitalBedsPer10000Population\"\>", 
              Offset[{-2, 0}, {0., 26.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryArmy\"\>", Offset[{-2, 0}, {0., 27.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryHIVAIDSPopulation\"\>", 
              Offset[{-2, 0}, {0., 28.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElectricityTotal\"\>", 
              Offset[{-2, 0}, {0., 29.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryChildPopulation\"\>", 
              Offset[{-2, 0}, {0., 30.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElderlyPopulation\"\>", 
              Offset[{-2, 0}, {0., 31.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualMarriages\"\>", 
              Offset[{-2, 0}, {0., 32.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualDivorces\"\>", 
              Offset[{-2, 0}, {0., 33.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNetIncomeFromAbroad\"\>", 
              Offset[{-2, 0}, {0., 34.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentDebt\"\>", 
              Offset[{-2, 0}, {0., 35.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentSurplus\"\>", 
              Offset[{-2, 0}, {0., 36.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryImportsValue\"\>", 
              Offset[{-2, 0}, {0., 37.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryExportsValue\"\>", 
              Offset[{-2, 0}, {0., 38.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLeisureArrivals\"\>", 
              Offset[{-2, 0}, {0., 39.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNewspaperTitles\"\>", 
              Offset[{-2, 0}, {0., 40.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"Street\"\>", Offset[{-2, 0}, {0., 41.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Highway\"\>", Offset[{-2, 0}, {0., 42.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Water\"\>", Offset[{-2, 0}, {0., 43.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Park\"\>", Offset[{-2, 0}, {0., 44.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Train\"\>", Offset[{-2, 0}, {0., 45.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Interesting\"\>", Offset[{-2, 0}, {0., 46.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Building\"\>", Offset[{-2, 0}, {0., 47.}], {1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Annotations\"\>", Offset[{-2, 0}, {0., 48.}], {1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"MeanNeighborDegree\"\>", 
              Offset[{-2, 0}, {0., 49.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"DegreeCentrality\"\>", 
              Offset[{-2, 0}, {0., 50.}], {1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"ClosenessCentrality\"\>", 
              Offset[{-2, 0}, {0., 51.}], {1, 0}, Automatic, {1, 0}]}, 
            "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., -0.52},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{Automatic, 197.328125},
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.05]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, None}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.771755777067276*^9, {3.771755829914609*^9, 3.771755834539391*^9}, 
   3.771755919983369*^9, 3.771755960672641*^9, {3.7717561268718147`*^9, 
   3.771756149373868*^9}, {3.771756239272098*^9, 3.7717562653517027`*^9}},
 CellLabel->
  "Out[239]=",ExpressionUUID->"e207a8fb-0631-4ee7-a5ef-8d2291c07043"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<PostImageRegression.gif\>\"", ",", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"GetRegressionChart", "[", "]"}], ",", " ", "10"}], "]"}], ",", 
   " ", 
   RowBox[{
   "\"\<AnimationRepetitions\>\"", " ", "\[Rule]", " ", "Infinity"}]}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.771773509285816*^9, 3.771773546115485*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"d1896f4b-d0b8-4a6f-9935-9e74f8ba475e"],

Cell[BoxData["\<\"PostImageRegression.gif\"\>"], "Output",
 CellChangeTimes->{3.771776835787735*^9, 3.7717769654960403`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"6650b35b-e979-42e1-9de6-f5ce912e26df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conclusions", "Subsection",
 CellChangeTimes->{{3.771763596541285*^9, 
  3.7717636009698477`*^9}},ExpressionUUID->"161c4b84-42ee-4e02-ba4d-\
49076cf421f9"],

Cell[CellGroupData[{

Cell["\<\
Simple Regression models have huge variance and are totally unusable in this \
setting.\
\>", "Item",
 CellChangeTimes->{{3.771763596541285*^9, 
  3.7717636935237637`*^9}},ExpressionUUID->"b1fb0052-c812-4c32-9314-\
613d76f209ae"],

Cell["\<\
Often we expect non-linear relations between an input factor and predicted \
value, but such models can\[CloseCurlyQuote]t approximate them.\
\>", "Item",
 CellChangeTimes->{{3.771763596541285*^9, 
  3.771763770613768*^9}},ExpressionUUID->"0c7f419c-d673-4c0f-9768-\
cab683c6749d"],

Cell["\<\
Non-linear models require a lot more data then 5000 data points.\
\>", "Item",
 CellChangeTimes->{{3.771763596541285*^9, 
  3.7717637973084307`*^9}},ExpressionUUID->"6af5b0fc-e0ad-428a-bf06-\
19c09147d278"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non-linear approach?", "Section",
 CellChangeTimes->{{3.771713042559826*^9, 3.771713056087331*^9}, {
  3.771713531989307*^9, 
  3.7717135359131517`*^9}},ExpressionUUID->"50d2f7c6-3d90-4674-8c7d-\
134ca91d9f53"],

Cell["\<\
Lets see if Convolutional NN models will be able to recognize the patterns, \
that lie deeper than our manually extracted features.
For that we have collected rasterized maps and satellite images of various \
regions and augmented them with rotated versions. \
\>", "Text",
 CellChangeTimes->{{3.771763596541285*^9, 
  3.771763941715365*^9}},ExpressionUUID->"48da48be-3356-45b9-96b0-\
65578a69064f"],

Cell[CellGroupData[{

Cell["MLP", "Subsection",
 CellChangeTimes->{{3.771713548867407*^9, 
  3.7717135491509933`*^9}},ExpressionUUID->"c3071551-c538-4e23-a9ff-\
aeaae2cb1355"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BuildDataset", "[", 
    RowBox[{"city_", ",", " ", "rating_Real", ",", " ", "imgs_"}], "]"}], " ",
    ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ratings", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"ratings", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"rating", ",", " ", 
         RowBox[{"Length", "[", "imgs", "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "Same", " ", "for", " ", "all", " ", "images", " ", "within", " ", 
        "city"}], "*)"}], "\n", "\t", 
      RowBox[{"AssociationsFromPair", "[", 
       RowBox[{"imgs", ",", " ", "ratings"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.771695084462446*^9, 3.771695092612587*^9}, {
  3.771695420377442*^9, 3.7716954240693274`*^9}, {3.771695525490217*^9, 
  3.7716955427053223`*^9}, {3.77169557475178*^9, 3.771695608141577*^9}, {
  3.7717013125325403`*^9, 3.771701315713105*^9}, {3.7717013958100977`*^9, 
  3.771701472688505*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"b3ef612e-213d-4424-ab69-0f6a32ff097c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetMaps", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BuildDataset", "[", 
         RowBox[{"#1", ",", " ", "#2", ",", " ", 
          RowBox[{"ImportMaps", "[", "#1", "]"}]}], "]"}], " ", "&"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"citiesPopular", ",", " ", "citiesPositivness"}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetSatellites", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BuildDataset", "[", 
         RowBox[{"#1", ",", " ", "#2", ",", " ", 
          RowBox[{"ImportSatellites", "[", "#1", "]"}]}], "]"}], " ", "&"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"citiesPopular", ",", " ", "citiesPositivness"}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771695084462446*^9, 3.771695131022481*^9}, {
   3.771695179577177*^9, 3.771695215558429*^9}, {3.7716953433989143`*^9, 
   3.7716953529173613`*^9}, {3.771695495691889*^9, 3.771695521620345*^9}, {
   3.771695563051428*^9, 3.771695563864685*^9}, 3.7716969865035973`*^9, {
   3.771701456371614*^9, 3.771701489783415*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"3dc86f4f-ab41-4a3b-a7fc-d050a07843dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetTrain", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"datasetMaps", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetMaps", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetValidate", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"datasetMaps", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetMaps", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"modelMapsANN", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{"datasetTrain", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}], ",", " ", 
     RowBox[{"ValidationSet", "\[Rule]", "datasetValidate"}], ",", " ", 
     RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771695084462446*^9, 3.7716951066201973`*^9}, {
   3.771701050881578*^9, 3.771701051706173*^9}, {3.771701577001584*^9, 
   3.771701581530403*^9}, {3.771701613310336*^9, 3.771701614358871*^9}, 
   3.771702026850885*^9, {3.77170385339028*^9, 3.771703857527769*^9}, {
   3.771756571011951*^9, 
   3.771756571210349*^9}},ExpressionUUID->"c345457d-adc3-4886-82ee-\
570b19476758"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetTrain", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"datasetSatellites", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetSatellites", "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetValidate", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"datasetSatellites", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetSatellites", "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"modelSatellitesANN", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{"datasetTrain", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}], ",", " ", 
     RowBox[{"ValidationSet", "\[Rule]", "datasetValidate"}], ",", " ", 
     RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771695084462446*^9, 3.7716951066201973`*^9}, {
   3.771701050881578*^9, 3.77170106832066*^9}, {3.7717015871684303`*^9, 
   3.771701628612402*^9}, 3.771701836007718*^9, 3.771702025299842*^9, 
   3.771702128773827*^9, {3.771702475598556*^9, 3.771702475949767*^9}, {
   3.771703862173395*^9, 3.7717038631782417`*^9}, {3.771756580304154*^9, 
   3.771756580546401*^9}},ExpressionUUID->"dca30a8c-da2c-4c72-a317-\
5b189a17c869"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pretrained CNN", "Subsection",
 CellChangeTimes->{{3.7717135654198103`*^9, 3.7717135656393414`*^9}, {
  3.771753384187619*^9, 
  3.771753388063509*^9}},ExpressionUUID->"d0f91c15-f044-48eb-9e34-\
777ac2da01e6"],

Cell["\<\
Common approach to tackle problems like that is using a model pretrained on a \
huge dataset and fine-tuning it to your specific problem. The closest model \
to our task is the huge ResNet-101 model trained on images of places to \
predict their coordinates. One could try to use some of its internal \
representations, but our problem is very different from the original one, so \
the network doesn\[CloseCurlyQuote]t converge.
Training for 8 hours made us reach 30% error rate on training dataset and 55% \
error on the validation dataset. And the losses stayed around the level 0.7.\
\>", "Text",
 CellChangeTimes->{{3.7717530001282797`*^9, 3.771753050532826*^9}, {
  3.771753101153401*^9, 3.771753111466648*^9}, {3.771753150804446*^9, 
  3.7717531670882998`*^9}, {3.771753216166688*^9, 3.771753310154085*^9}, {
  3.771764153864119*^9, 
  3.7717641545421*^9}},ExpressionUUID->"a4f6ead6-2c1e-48b4-be6a-e97c3e48071d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelGeoCNNFull", " ", "=", " ", 
   RowBox[{
   "NetModel", "[", "\"\<ResNet-101 Trained on YFCC100m Geotagged Data\>\"", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"modelGeoCNN", " ", "=", " ", 
   RowBox[{"NetFlatten", "[", 
    RowBox[{
     RowBox[{"NetChain", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NetTake", "[", 
         RowBox[{"modelGeoCNN", ",", " ", "\"\<pool1\>\""}], "]"}], ",", " ", 
        
        RowBox[{"LinearLayer", "[", 
         RowBox[{"{", "}"}], "]"}], ",", " ", "LogisticSigmoid"}], "}"}], 
      "]"}], ",", " ", "1"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetTrain", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"datasetSatellites", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetSatellites", "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetValidate", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"datasetSatellites", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetSatellites", "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"modelGeoCNN", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"modelGeoCNN", ",", " ", 
    RowBox[{"Association", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"Keys", "[", "datasetTrain", "]"}]}], ",", 
       RowBox[{"\"\<Output\>\"", "\[Rule]", 
        RowBox[{"Values", "[", "datasetTrain", "]"}]}]}], "}"}], "]"}], ",", 
    " ", "All"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.771697076399399*^9, 3.771697086936078*^9}, {
  3.771701157745332*^9, 3.771701163246292*^9}, {3.771701236513834*^9, 
  3.7717012371068773`*^9}, {3.771701284764735*^9, 3.77170128529869*^9}, {
  3.77170207100424*^9, 3.771702074100959*^9}, {3.7717529411470623`*^9, 
  3.7717529660546303`*^9}},ExpressionUUID->"8eb4279a-1f74-4ac8-9b4d-\
7a561e752984"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["43", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{3}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 3,
                     "Interleaving" -> False, 
                    "$SpatialDimensions" -> {224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 7, 7}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{3, 3}, {3, 3}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 1,
                     1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Outputs", "Output"]}], 
                    "7" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Outputs", "Output"]}], 
                    "8" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Outputs", "Output"]}], 
                    "9" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Outputs", "Output"]}], 
                    "10" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Outputs", "Output"]}], 
                    "11" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Outputs", "Output"]}], 
                    "12" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Outputs", "Output"]}], 
                    "13" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Outputs", "Output"]}], 
                    "14" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Outputs", "Output"]}], 
                    "15" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Outputs", "Output"]}], 
                    "16" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Outputs", "Output"]}], 
                    "17" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit5" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Outputs", "Output"]}], 
                    "18" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit6" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Outputs", "Output"]}], 
                    "19" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit7" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Outputs", "Output"]}], 
                    "20" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit8" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Outputs", "Output"]}], 
                    "21" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit9" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Outputs", "Output"]}], 
                    "22" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit10" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Outputs", "Output"]}], 
                    "23" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit11" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Outputs", "Output"]}], 
                    "24" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit12" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Outputs", "Output"]}], 
                    "25" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit13" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Outputs", "Output"]}], 
                    "26" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit14" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Outputs", "Output"]}], 
                    "27" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit15" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Outputs", "Output"]}], 
                    "28" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit16" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Outputs", "Output"]}], 
                    "29" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit17" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Outputs", "Output"]}], 
                    "30" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit18" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Outputs", "Output"]}], 
                    "31" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit19" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Outputs", "Output"]}], 
                    "32" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit20" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Outputs", "Output"]}], 
                    "33" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit21" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Outputs", "Output"]}], 
                    "34" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit22" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Outputs", "Output"]}], 
                    "35" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit23" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Outputs", "Output"]}], 
                    "36" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Outputs", "Output"]}], 
                    "37" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 2048,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 2048],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Outputs", "Output"]}], 
                    "38" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 2048,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 2048],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Outputs", "Output"]}], 
                    "39" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "40" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "41" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]]], 
                    "42" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 2048}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2048, "$InputDimensions" -> {2048}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], "43" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "22", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "23", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "24", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "26", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "27", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "28", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "30", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "29", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "31", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "30", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "32", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "31", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "33", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "32", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "34", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "33", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "34", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "36", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "37", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "36", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "38", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "37", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "39", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "38", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "40", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "39", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "41", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "40", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "42", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "41", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "43", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "42", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "43", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10", "Interleaving" -> False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart = {"Nodes", "6"}, 
                   NeuralNetworks`Private`NetChain`part = {"Nodes", "6"}, 
                   NeuralNetworks`Private`NetChain`selected = 
                   Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Outputs", "Output"]}]}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"22\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"23\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"24\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"25\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"26\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"27\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"28\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"29\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"30\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"31\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"32\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"33\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"34\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"35\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"36\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"37\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"38\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"39\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"40\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"41\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["AggregationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"42\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"43\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {656., {418.9169921875, 424.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771703769226363*^9, 3.771709054798896*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"852a8ecc-2c1b-4f07-b637-9308c09b0413"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nice cities vs bad cities?", "Section",
 CellChangeTimes->{{3.771760826418881*^9, 
  3.771760836768162*^9}},ExpressionUUID->"af2e4d91-ccd2-4f87-bc80-\
5035ab5bf083"],

Cell["\<\
The sophisticated approaches proved to require a lot more data, that what we \
can process within the scope of this project. However, we still can see some \
differences between successfull cities and not so much.\
\>", "Text",
 CellChangeTimes->{{3.771760826418881*^9, 3.7717608351115*^9}, {
  3.77176110080478*^9, 
  3.7717612080381536`*^9}},ExpressionUUID->"0d903749-6bc3-432d-9248-\
120708078057"],

Cell[BoxData[
 RowBox[{
  RowBox[{"citieslAllFeaturesNormalized", " ", "=", " ", 
   RowBox[{
    RowBox[{"PrepareFeaturesAndNames", "[", 
     RowBox[{"Join", "[", 
      RowBox[{"citiesPopular", ",", " ", "citiesUnpopular"}], "]"}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.771775681151247*^9, 3.771775704282976*^9}, {
   3.771775878545282*^9, 3.7717759243017187`*^9}, 
   3.771776085955407*^9},ExpressionUUID->"01e18503-62cd-49aa-8cb9-\
9ff0949c465a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"citieslAllFeaturesNormalizedOfGood", " ", "=", " ", 
   RowBox[{"citieslAllFeaturesNormalized", "\[LeftDoubleBracket]", 
    RowBox[{"1", ";;", 
     RowBox[{"Length", "[", "citiesPopular", "]"}]}], 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citieslAllFeaturesNormalizedOfBad", " ", "=", " ", 
   RowBox[{"citieslAllFeaturesNormalized", "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "citiesPopular", "]"}], "+", "1"}], ";;", 
     RowBox[{
      RowBox[{"Length", "[", "citiesPopular", "]"}], "+", 
      RowBox[{"Length", "[", "citiesUnpopular", "]"}]}]}], 
    "\[RightDoubleBracket]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771775840439398*^9, 3.7717758884638147`*^9}, 
   3.771775945277217*^9, {3.771775981456218*^9, 3.771776035549383*^9}, {
   3.7717760962136497`*^9, 3.771776124216045*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"582b48cd-780f-429f-bd04-3042d9bbe6c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"averagePerFeatureGood", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"Mean", ",", " ", 
     RowBox[{"Transpose", "[", "citieslAllFeaturesNormalizedOfGood", "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"averagePerFeatureBad", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"Mean", ",", " ", 
     RowBox[{"Transpose", "[", "citieslAllFeaturesNormalizedOfBad", "]"}]}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771776135141968*^9, 3.771776204931179*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"b0946a50-e66a-4b86-b6fc-0b47fafe6dbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colorsPerFeatureGood", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", " ", "0.2", ",", " ", "0.8", ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"averagePerFeatureGood", "[", 
            RowBox[{"[", "#", "]"}], "]"}], ">", 
           RowBox[{"averagePerFeatureBad", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], ",", " ", "0.8", ",", " ", 
          "0.4"}], "]"}]}], "]"}], " ", "&"}], ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "citiesFeaturesNames", "]"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"colorsPerFeatureBad", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", " ", "0.2", ",", " ", "0.8", ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"averagePerFeatureGood", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "<", 
           RowBox[{"averagePerFeatureBad", "[", 
            RowBox[{"[", "#", "]"}], "]"}]}], ",", " ", "0.8", ",", " ", 
          "0.4"}], "]"}]}], "]"}], " ", "&"}], ",", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "citiesFeaturesNames", "]"}], "]"}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7717763595342827`*^9, 3.7717764168971167`*^9}, {
  3.771776460239888*^9, 3.771776496679187*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"f6c95bf9-aecc-4d5a-ac44-c8478261efb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{"BarChart", "[", 
      RowBox[{"averagePerFeatureBad", ",", 
       RowBox[{"ChartLabels", "\[Rule]", "citiesFeaturesNames"}], ",", 
       RowBox[{"BarOrigin", "\[Rule]", "Right"}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", "colorsPerFeatureBad"}]}], "]"}], ",",
      " ", "\n", "\t", 
     RowBox[{"BarChart", "[", 
      RowBox[{"averagePerFeatureGood", ",", 
       RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", "colorsPerFeatureGood"}]}], "]"}]}], 
    "\n", "}"}], "}"}], "]"}]], "Code",
 CellChangeTimes->{
  3.7717762229091377`*^9, {3.7717762627653103`*^9, 3.7717762690049763`*^9}, {
   3.771776425011805*^9, 3.7717764393209257`*^9}, {3.771776548146475*^9, 
   3.771776569500556*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"2a8c6f62-3e57-409b-8b8e-0916524b756d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {Opacity[0], PointBox[{{0., -0.52}, {0., 51.5}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.34299999999999997`], Thickness[Small]}], 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.6624793510078025, 0.5}, {0., 1.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{221.26359423167128`, 718.5060851422921}, {
                193.804618908189, 202.4942413546301}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6624793510078025]& ,
             TagBoxNote->"0.6624793510078025"],
            StyleBox["0.6624793510078025`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6624793510078025, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8119867189437364, 1.5}, {0., 2.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{109.15947771089566`, 718.5060851422921}, {
                185.61499646174792`, 194.304618908189}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8119867189437364]& ,
             TagBoxNote->"0.8119867189437364"],
            StyleBox["0.8119867189437364`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8119867189437364, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8416714520531352, 2.5}, {0., 3.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{86.90117147939156, 718.5060851422921}, {
                177.42537401530683`, 186.11499646174792`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8416714520531352]& ,
             TagBoxNote->"0.8416714520531352"],
            StyleBox["0.8416714520531352`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8416714520531352, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5340745836499169, 3.5}, {0., 4.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{317.5444879457512, 718.5060851422921}, {
                169.23575156886574`, 177.92537401530683`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5340745836499169]& ,
             TagBoxNote->"0.5340745836499169"],
            StyleBox["0.5340745836499169`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5340745836499169, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8152625929029053, 4.5}, {0., 5.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{106.7031509017487, 718.5060851422921}, {
                161.04612912242465`, 169.73575156886574`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8152625929029053]& ,
             TagBoxNote->"0.8152625929029053"],
            StyleBox["0.8152625929029053`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8152625929029053, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8720897322524969, 5.5}, {0., 6.5}, 
                 "RoundingRadius" -> 0]},
               ImageSizeCache->{{64.09283450637986, 718.5060851422921}, {
                152.85650667598355`, 161.54612912242465`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8720897322524969]& ,
             TagBoxNote->"0.8720897322524969"],
            StyleBox["0.8720897322524969`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8720897322524969, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8098422556390966, 6.5}, {0., 7.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{110.7674463849271, 718.5060851422921}, {
                144.66688422954246`, 153.35650667598355`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8098422556390966]& ,
             TagBoxNote->"0.8098422556390966"],
            StyleBox["0.8098422556390966`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8098422556390966, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8125600114416479, 7.5}, {0., 8.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{108.72960960557327`, 718.5060851422921}, {
                136.47726178310137`, 145.16688422954246`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8125600114416479]& ,
             TagBoxNote->"0.8125600114416479"],
            StyleBox["0.8125600114416479`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8125600114416479, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.7151099456998671, 8.5}, {0., 9.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{181.79994503917658`, 718.5060851422921}, {
                128.28763933666028`, 136.97726178310137`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7151099456998671]& ,
             TagBoxNote->"0.7151099456998671"],
            StyleBox["0.7151099456998671`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7151099456998671, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{-0.6178307565802393, 9.5}, {0., 10.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{254.74215319032567`, 718.5060851422921}, {
                120.09801689021918`, 128.78763933666028`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6178307565802393]& ,
             TagBoxNote->"0.6178307565802393"],
            StyleBox["0.6178307565802393`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6178307565802393, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5685384060518481, 10.5}, {0., 11.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{291.7027089375554, 718.5060851422921}, {
                111.90839444377809`, 120.59801689021918`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5685384060518481]& ,
             TagBoxNote->"0.5685384060518481"],
            StyleBox["0.5685384060518481`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5685384060518481, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5292109013626696, 11.5}, {0., 12.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{321.191390525718, 718.5060851422921}, {
                103.718771997337, 112.40839444377809`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5292109013626696]& ,
             TagBoxNote->"0.5292109013626696"],
            StyleBox["0.5292109013626696`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5292109013626696, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8701966124401925, 12.5}, {0., 13.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{65.51233995923008, 718.5060851422921}, {
                95.52914955089591, 104.218771997337}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8701966124401925]& ,
             TagBoxNote->"0.8701966124401925"],
            StyleBox["0.8701966124401925`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8701966124401925, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8670185401256034, 13.5}, {0., 14.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{67.89533281091894, 718.5060851422921}, {
                87.33952710445482, 96.02914955089591}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8670185401256034]& ,
             TagBoxNote->"0.8670185401256034"],
            StyleBox["0.8670185401256034`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8670185401256034, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5620087890953614, 14.5}, {0., 15.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{296.59876824374084`, 718.5060851422921}, {
                79.14990465801372, 87.83952710445482}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5620087890953614]& ,
             TagBoxNote->"0.5620087890953614"],
            StyleBox["0.5620087890953614`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5620087890953614, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.7770451127819553, 15.5}, {0., 16.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{135.3595101418183, 718.5060851422921}, {
                70.96028221157263, 79.64990465801372}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7770451127819553]& ,
             TagBoxNote->"0.7770451127819553"],
            StyleBox["0.7770451127819553`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7770451127819553, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5572755000629961, 16.5}, {0., 17.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{300.147898915603, 718.5060851422921}, {
                62.77065976513154, 71.46028221157263}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5572755000629961]& ,
             TagBoxNote->"0.5572755000629961"],
            StyleBox["0.5572755000629961`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5572755000629961, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5537286879169754, 17.5}, {0., 18.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{302.80738150555254`, 718.5060851422921}, {
                54.58103731869045, 63.27065976513154}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5537286879169754]& ,
             TagBoxNote->"0.5537286879169754"],
            StyleBox["0.5537286879169754`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5537286879169754, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5792712027328969, 18.5}, {0., 19.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{283.65500730025775`, 718.5060851422921}, {
                46.39141487224936, 55.08103731869045}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5792712027328969]& ,
             TagBoxNote->"0.5792712027328969"],
            StyleBox["0.5792712027328969`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5792712027328969, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.506436581473058, 19.5}, {0., 20.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{338.26810751855857`, 718.5060851422921}, {
                38.201792425808264`, 46.89141487224936}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.506436581473058]& ,
             TagBoxNote->"0.506436581473058"],
            StyleBox["0.506436581473058`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.506436581473058, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.6189932885906052, 20.5}, {0., 21.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{253.8704595357023, 718.5060851422921}, {
                30.012169979367172`, 38.701792425808264`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6189932885906052]& ,
             TagBoxNote->"0.6189932885906052"],
            StyleBox["0.6189932885906052`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6189932885906052, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8269203359306085, 21.5}, {0., 22.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{97.96190288976493, 718.5060851422921}, {
                21.82254753292608, 30.512169979367172`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8269203359306085]& ,
             TagBoxNote->"0.8269203359306085"],
            StyleBox["0.8269203359306085`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8269203359306085, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.7642200266007969, 22.5}, {0., 23.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{144.9760593158876, 718.5060851422921}, {
                13.632925086484988`, 22.32254753292608}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7642200266007969]& ,
             TagBoxNote->"0.7642200266007969"],
            StyleBox["0.7642200266007969`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7642200266007969, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8086170486982922, 23.5}, {0., 24.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{111.68613516629102`, 718.5060851422921}, {
                5.443302640043896, 14.132925086484988`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8086170486982922]& ,
             TagBoxNote->"0.8086170486982922"],
            StyleBox["0.8086170486982922`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8086170486982922, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.7661415127222022, 24.5}, {0., 25.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{143.5352841419217, 
                718.5060851422921}, {-2.746319806397196, 5.943302640043896}}],
              
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7661415127222022]& ,
             TagBoxNote->"0.7661415127222022"],
            StyleBox["0.7661415127222022`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7661415127222022, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5664501679731254, 25.5}, {0., 26.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{293.26851862394204`, 
                718.5060851422921}, {-10.935942252838288`, \
-2.246319806397196}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5664501679731254]& ,
             TagBoxNote->"0.5664501679731254"],
            StyleBox["0.5664501679731254`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5664501679731254, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5453500183000871, 26.5}, {0., 27.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{309.08990368481545`, 
                718.5060851422921}, {-19.12556469927938, \
-10.435942252838288`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5453500183000871]& ,
             TagBoxNote->"0.5453500183000871"],
            StyleBox["0.5453500183000871`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5453500183000871, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5049001608210023, 27.5}, {0., 28.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{339.420151609635, 
                718.5060851422921}, {-27.315187145720472`, \
-18.62556469927938}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5049001608210023]& ,
             TagBoxNote->"0.5049001608210023"],
            StyleBox["0.5049001608210023`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5049001608210023, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5483695845576408, 28.5}, {0., 29.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{306.82576237691643`, 
                718.5060851422921}, {-35.504809592161564`, \
-26.815187145720472`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5483695845576408]& ,
             TagBoxNote->"0.5483695845576408"],
            StyleBox["0.5483695845576408`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5483695845576408, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.6130110289311269, 29.5}, {0., 30.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{258.3560975559708, 
                718.5060851422921}, {-43.694432038602656`, \
-35.004809592161564`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6130110289311269]& ,
             TagBoxNote->"0.6130110289311269"],
            StyleBox["0.6130110289311269`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6130110289311269, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.6430224185917496, 30.5}, {0., 31.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{235.8528566126446, 
                718.5060851422921}, {-51.88405448504378, \
-43.194432038602656`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6430224185917496]& ,
             TagBoxNote->"0.6430224185917496"],
            StyleBox["0.6430224185917496`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6430224185917496, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.7274007333924133, 31.5}, {0., 32.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{172.58402535147434`, 
                718.5060851422921}, {-60.07367693148481, -51.38405448504378}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7274007333924133]& ,
             TagBoxNote->"0.7274007333924133"],
            StyleBox["0.7274007333924133`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7274007333924133, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.6405668017758527, 32.5}, {0., 33.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{237.69413545702662`, 
                718.5060851422921}, {-68.26329937792596, -59.57367693148481}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6405668017758527]& ,
             TagBoxNote->"0.6405668017758527"],
            StyleBox["0.6405668017758527`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6405668017758527, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.9083951178168458, 33.5}, {0., 34.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{36.87020842562697, 
                718.5060851422921}, {-76.452921824367, -67.76329937792596}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.9083951178168458]& ,
             TagBoxNote->"0.9083951178168458"],
            StyleBox["0.9083951178168458`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.9083951178168458, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5019965434050212, 34.5}, {0., 35.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{341.59735176790673`, 
                718.5060851422921}, {-84.64254427080814, -75.952921824367}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5019965434050212]& ,
             TagBoxNote->"0.5019965434050212"],
            StyleBox["0.5019965434050212`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5019965434050212, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.6095289652921846, 35.5}, {0., 36.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{260.96703020298264`, 
                718.5060851422921}, {-92.83216671724918, -84.14254427080814}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6095289652921846]& ,
             TagBoxNote->"0.6095289652921846"],
            StyleBox["0.6095289652921846`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6095289652921846, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5029662199294782, 36.5}, {0., 37.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{340.8702656611419, 
                718.5060851422921}, {-101.02178916369033`, \
-92.33216671724918}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5029662199294782]& ,
             TagBoxNote->"0.5029662199294782"],
            StyleBox["0.5029662199294782`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5029662199294782, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.502852519015502, 37.5}, {0., 38.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{340.9555212621526, 
                718.5060851422921}, {-109.21141161013136`, \
-100.52178916369033`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.502852519015502]& ,
             TagBoxNote->"0.502852519015502"],
            StyleBox["0.502852519015502`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.502852519015502, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5018016226412478, 38.5}, {0., 39.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{341.7435079093467, 
                718.5060851422921}, {-117.40103405657251`, \
-108.71141161013136`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5018016226412478]& ,
             TagBoxNote->"0.5018016226412478"],
            StyleBox["0.5018016226412478`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5018016226412478, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5119170059290107, 39.5}, {0., 40.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{334.15875725525456`, 
                718.5060851422921}, {-125.59065650301355`, \
-116.90103405657251`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5119170059290107]& ,
             TagBoxNote->"0.5119170059290107"],
            StyleBox["0.5119170059290107`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5119170059290107, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5581259488127571, 40.5}, {0., 41.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{299.5102125791074, 
                718.5060851422921}, {-133.7802789494547, \
-125.09065650301355`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5581259488127571]& ,
             TagBoxNote->"0.5581259488127571"],
            StyleBox["0.5581259488127571`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5581259488127571, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.6491527239127973, 41.5}, {0., 42.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{231.25621049743, 
                718.5060851422921}, {-141.96990139589573`, \
-133.2802789494547}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6491527239127973]& ,
             TagBoxNote->"0.6491527239127973"],
            StyleBox["0.6491527239127973`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6491527239127973, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5484824506737512, 42.5}, {0., 43.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{306.7411327268439, 
                718.5060851422921}, {-150.15952384233688`, \
-141.46990139589573`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5484824506737512]& ,
             TagBoxNote->"0.5484824506737512"],
            StyleBox["0.5484824506737512`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5484824506737512, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.53306133656852, 43.5}, {0., 44.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{318.3042442737867, 
                718.5060851422921}, {-158.34914628877792`, \
-149.65952384233688`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.53306133656852]& ,
             TagBoxNote->"0.53306133656852"],
            StyleBox["0.53306133656852`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.53306133656852, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5692028042848264, 44.5}, {0., 45.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{291.20452762412407`, 
                718.5060851422921}, {-166.53876873521907`, \
-157.84914628877792`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5692028042848264]& ,
             TagBoxNote->"0.5692028042848264"],
            StyleBox["0.5692028042848264`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5692028042848264, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8210472181991819, 45.5}, {0., 46.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{102.36570374315306`, 
                718.5060851422921}, {-174.7283911816601, \
-166.03876873521907`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8210472181991819]& ,
             TagBoxNote->"0.8210472181991819"],
            StyleBox["0.8210472181991819`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8210472181991819, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5791588137765846, 46.5}, {0., 47.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{283.7392791647687, 
                718.5060851422921}, {-182.91801362810125`, \
-174.2283911816601}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5791588137765846]& ,
             TagBoxNote->"0.5791588137765846"],
            StyleBox["0.5791588137765846`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5791588137765846, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.5689583839842256, 47.5}, {0., 48.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{291.3877996744376, 
                718.5060851422921}, {-191.10763607454228`, \
-182.41801362810125`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5689583839842256]& ,
             TagBoxNote->"0.5689583839842256"],
            StyleBox["0.5689583839842256`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5689583839842256, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8279557267319884, 48.5}, {0., 49.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{97.18554268327557, 
                718.5060851422921}, {-199.29725852098343`, \
-190.60763607454228`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8279557267319884]& ,
             TagBoxNote->"0.8279557267319884"],
            StyleBox["0.8279557267319884`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8279557267319884, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.8363289170507819, 49.5}, {0., 50.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{90.90712900970391, 
                718.5060851422921}, {-207.48688096742447`, \
-198.79725852098343`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8363289170507819]& ,
             TagBoxNote->"0.8363289170507819"],
            StyleBox["0.8363289170507819`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8363289170507819, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{-0.6019368841195964, 50.5}, {0., 51.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{266.65974999436924`, 
                718.5060851422921}, {-215.67650341386562`, \
-206.98688096742447`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6019368841195964]& ,
             TagBoxNote->"0.6019368841195964"],
            StyleBox["0.6019368841195964`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6019368841195964, {}], 
            "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
       StyleBox[{
         {Thickness[Tiny], LineBox[{{0., -0.52}, {0., 52.5404}}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0., 0.5}, Offset[{6., 0.}, {0., 0.5}]}], 
            LineBox[{{0., 51.5}, 
              Offset[{6., 0.}, {0., 
               51.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
              LineBox[{{0., 1.5}, Offset[{4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 1.5}, Offset[{4., 0.}, {0., 1.5}]}], 
              LineBox[{{0., 2.5}, Offset[{4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 2.5}, Offset[{4., 0.}, {0., 2.5}]}], 
              LineBox[{{0., 3.5}, Offset[{4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 3.5}, Offset[{4., 0.}, {0., 3.5}]}], 
              LineBox[{{0., 4.5}, Offset[{4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 4.5}, Offset[{4., 0.}, {0., 4.5}]}], 
              LineBox[{{0., 5.5}, Offset[{4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 5.5}, Offset[{4., 0.}, {0., 5.5}]}], 
              LineBox[{{0., 6.5}, Offset[{4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 6.5}, Offset[{4., 0.}, {0., 6.5}]}], 
              LineBox[{{0., 7.5}, Offset[{4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 7.5}, Offset[{4., 0.}, {0., 7.5}]}], 
              LineBox[{{0., 8.5}, Offset[{4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 8.5}, Offset[{4., 0.}, {0., 8.5}]}], 
              LineBox[{{0., 9.5}, Offset[{4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 9.5}, Offset[{4., 0.}, {0., 9.5}]}], 
              LineBox[{{0., 10.5}, Offset[{4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 10.5}, Offset[{4., 0.}, {0., 10.5}]}], 
              LineBox[{{0., 11.5}, Offset[{4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 11.5}, Offset[{4., 0.}, {0., 11.5}]}], 
              LineBox[{{0., 12.5}, Offset[{4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 12.5}, Offset[{4., 0.}, {0., 12.5}]}], 
              LineBox[{{0., 13.5}, Offset[{4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 13.5}, Offset[{4., 0.}, {0., 13.5}]}], 
              LineBox[{{0., 14.5}, Offset[{4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 14.5}, Offset[{4., 0.}, {0., 14.5}]}], 
              LineBox[{{0., 15.5}, Offset[{4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 15.5}, Offset[{4., 0.}, {0., 15.5}]}], 
              LineBox[{{0., 16.5}, Offset[{4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 16.5}, Offset[{4., 0.}, {0., 16.5}]}], 
              LineBox[{{0., 17.5}, Offset[{4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 17.5}, Offset[{4., 0.}, {0., 17.5}]}], 
              LineBox[{{0., 18.5}, Offset[{4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 18.5}, Offset[{4., 0.}, {0., 18.5}]}], 
              LineBox[{{0., 19.5}, Offset[{4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 19.5}, Offset[{4., 0.}, {0., 19.5}]}], 
              LineBox[{{0., 20.5}, Offset[{4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 20.5}, Offset[{4., 0.}, {0., 20.5}]}], 
              LineBox[{{0., 21.5}, Offset[{4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 21.5}, Offset[{4., 0.}, {0., 21.5}]}], 
              LineBox[{{0., 22.5}, Offset[{4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 22.5}, Offset[{4., 0.}, {0., 22.5}]}], 
              LineBox[{{0., 23.5}, Offset[{4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 23.5}, Offset[{4., 0.}, {0., 23.5}]}], 
              LineBox[{{0., 24.5}, Offset[{4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 24.5}, Offset[{4., 0.}, {0., 24.5}]}], 
              LineBox[{{0., 25.5}, Offset[{4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 25.5}, Offset[{4., 0.}, {0., 25.5}]}], 
              LineBox[{{0., 26.5}, Offset[{4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 26.5}, Offset[{4., 0.}, {0., 26.5}]}], 
              LineBox[{{0., 27.5}, Offset[{4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 27.5}, Offset[{4., 0.}, {0., 27.5}]}], 
              LineBox[{{0., 28.5}, Offset[{4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 28.5}, Offset[{4., 0.}, {0., 28.5}]}], 
              LineBox[{{0., 29.5}, Offset[{4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 29.5}, Offset[{4., 0.}, {0., 29.5}]}], 
              LineBox[{{0., 30.5}, Offset[{4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 30.5}, Offset[{4., 0.}, {0., 30.5}]}], 
              LineBox[{{0., 31.5}, Offset[{4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 31.5}, Offset[{4., 0.}, {0., 31.5}]}], 
              LineBox[{{0., 32.5}, Offset[{4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 32.5}, Offset[{4., 0.}, {0., 32.5}]}], 
              LineBox[{{0., 33.5}, Offset[{4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 33.5}, Offset[{4., 0.}, {0., 33.5}]}], 
              LineBox[{{0., 34.5}, Offset[{4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 34.5}, Offset[{4., 0.}, {0., 34.5}]}], 
              LineBox[{{0., 35.5}, Offset[{4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 35.5}, Offset[{4., 0.}, {0., 35.5}]}], 
              LineBox[{{0., 36.5}, Offset[{4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 36.5}, Offset[{4., 0.}, {0., 36.5}]}], 
              LineBox[{{0., 37.5}, Offset[{4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 37.5}, Offset[{4., 0.}, {0., 37.5}]}], 
              LineBox[{{0., 38.5}, Offset[{4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 38.5}, Offset[{4., 0.}, {0., 38.5}]}], 
              LineBox[{{0., 39.5}, Offset[{4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 39.5}, Offset[{4., 0.}, {0., 39.5}]}], 
              LineBox[{{0., 40.5}, Offset[{4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 40.5}, Offset[{4., 0.}, {0., 40.5}]}], 
              LineBox[{{0., 41.5}, Offset[{4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 41.5}, Offset[{4., 0.}, {0., 41.5}]}], 
              LineBox[{{0., 42.5}, Offset[{4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 42.5}, Offset[{4., 0.}, {0., 42.5}]}], 
              LineBox[{{0., 43.5}, Offset[{4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 43.5}, Offset[{4., 0.}, {0., 43.5}]}], 
              LineBox[{{0., 44.5}, Offset[{4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 44.5}, Offset[{4., 0.}, {0., 44.5}]}], 
              LineBox[{{0., 45.5}, Offset[{4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 45.5}, Offset[{4., 0.}, {0., 45.5}]}], 
              LineBox[{{0., 46.5}, Offset[{4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 46.5}, Offset[{4., 0.}, {0., 46.5}]}], 
              LineBox[{{0., 47.5}, Offset[{4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 47.5}, Offset[{4., 0.}, {0., 47.5}]}], 
              LineBox[{{0., 48.5}, Offset[{4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 48.5}, Offset[{4., 0.}, {0., 48.5}]}], 
              LineBox[{{0., 49.5}, Offset[{4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 49.5}, Offset[{4., 0.}, {0., 49.5}]}], 
              LineBox[{{0., 50.5}, Offset[{4., 0.}, {0., 50.5}]}], 
              LineBox[{{0., 50.5}, Offset[{4., 0.}, {0., 50.5}]}]}, {}}}, 
           StyleBox[
            {Thickness[Tiny], 
             InsetBox["\<\"Population\"\>", Offset[{2, 0}, {0., 1.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Latitude\"\>", Offset[{2, 0}, {0., 2.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Longitude\"\>", Offset[{2, 0}, {0., 3.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Elevation\"\>", Offset[{2, 0}, {0., 4.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"MagneticFieldStrength\"\>", 
              Offset[{2, 0}, {0., 5.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPopulation\"\>", Offset[{2, 0}, {0., 6.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryLatitude\"\>", Offset[{2, 0}, {0., 7.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryLongitude\"\>", Offset[{2, 0}, {0., 8.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryArea\"\>", Offset[{2, 0}, {0., 9.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterArea\"\>", Offset[{2, 0}, {0., 10.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryBoundaryLength\"\>", 
              Offset[{2, 0}, {0., 11.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryCoastlineLength\"\>", 
              Offset[{2, 0}, {0., 12.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryWaterwayLength\"\>", 
              Offset[{2, 0}, {0., 13.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryContributingFamilyWorkers\"\>", 
              Offset[{2, 0}, {0., 14.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGDPPerPersonEmployed\"\>", 
              Offset[{2, 0}, {0., 15.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGiniIndex\"\>", Offset[{2, 0}, {0., 16.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryInterestRateSpread\"\>", 
              Offset[{2, 0}, {0., 17.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryPovertyHeadcount\"\>", 
              Offset[{2, 0}, {0., 18.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryUnemploymentRate\"\>", 
              Offset[{2, 0}, {0., 19.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryBookTitles\"\>", 
              Offset[{2, 0}, {0., 20.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryIlliteracyFraction\"\>", 
              Offset[{2, 0}, {0., 21.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleLifeExpectancy\"\>", 
              Offset[{2, 0}, {0., 22.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryMaleMedianAge\"\>", 
              Offset[{2, 0}, {0., 23.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleLifeExpectancy\"\>", 
              Offset[{2, 0}, {0., 24.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryFemaleMedianAge\"\>", 
              Offset[{2, 0}, {0., 25.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryHospitalBedsPer10000Population\"\>", 
              Offset[{2, 0}, {0., 26.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryArmy\"\>", Offset[{2, 0}, {0., 27.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"CountryHIVAIDSPopulation\"\>", 
              Offset[{2, 0}, {0., 28.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElectricityTotal\"\>", 
              Offset[{2, 0}, {0., 29.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryChildPopulation\"\>", 
              Offset[{2, 0}, {0., 30.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryElderlyPopulation\"\>", 
              Offset[{2, 0}, {0., 31.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualMarriages\"\>", 
              Offset[{2, 0}, {0., 32.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryAnnualDivorces\"\>", 
              Offset[{2, 0}, {0., 33.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNetIncomeFromAbroad\"\>", 
              Offset[{2, 0}, {0., 34.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentDebt\"\>", 
              Offset[{2, 0}, {0., 35.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryGovernmentSurplus\"\>", 
              Offset[{2, 0}, {0., 36.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryImportsValue\"\>", 
              Offset[{2, 0}, {0., 37.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryExportsValue\"\>", 
              Offset[{2, 0}, {0., 38.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryLeisureArrivals\"\>", 
              Offset[{2, 0}, {0., 39.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"CountryNewspaperTitles\"\>", 
              Offset[{2, 0}, {0., 40.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"Street\"\>", Offset[{2, 0}, {0., 41.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Highway\"\>", Offset[{2, 0}, {0., 42.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Water\"\>", Offset[{2, 0}, {0., 43.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Park\"\>", Offset[{2, 0}, {0., 44.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Train\"\>", Offset[{2, 0}, {0., 45.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Interesting\"\>", Offset[{2, 0}, {0., 46.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"Building\"\>", Offset[{2, 0}, {0., 47.}], {-1, 0}, 
              Automatic, {1, 0}], 
             InsetBox["\<\"Annotations\"\>", Offset[{2, 0}, {0., 48.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"MeanNeighborDegree\"\>", 
              Offset[{2, 0}, {0., 49.}], {-1, 0}, Automatic, {1, 0}], 
             InsetBox["\<\"DegreeCentrality\"\>", Offset[{2, 0}, {0., 50.}], {-1, 0},
               Automatic, {1, 0}], 
             InsetBox["\<\"ClosenessCentrality\"\>", 
              Offset[{2, 0}, {0., 51.}], {-1, 0}, Automatic, {1, 0}]}, 
            "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., -0.52},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {
         Charting`FindScaledTicks[
          Charting`FindTicks[{-1, 0}, {1, 0}], {Identity, Identity}], 
         Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{Automatic, 460.59765625},
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.05], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->FrontEndValueCache[{
         Charting`FindScaledTicks[
          Charting`FindTicks[{-1., 0.}, {1., 0.}], {Identity, Identity}], 
         None}, {{{0., 
           FormBox["0", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-0.2, 
           FormBox[
            TagBox[
             InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
             NumberForm[#, {
               DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-0.4, 
           FormBox[
            TagBox[
             InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
             NumberForm[#, {
               DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-0.6, 
           FormBox[
            TagBox[
             InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
             NumberForm[#, {
               DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-0.8, 
           FormBox[
            TagBox[
             InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
             NumberForm[#, {
               DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {0.2, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {0.15, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {0.1, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {0.05, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.05, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.1, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.15, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.25, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.3, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.35, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.45, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.5, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.55, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.65, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.7, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.75, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.85, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.9, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-0.95, 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}, {-1., 
           FormBox[
            TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
           
            AbsoluteThickness[0.1]}}}, None}]], 
     GraphicsBox[{
       {Opacity[0], PointBox[{{0., -0.52}, {0., 51.5}}]}, {{}, 
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.34299999999999997`], Thickness[Small]}], 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 0.5}, {0.5340504209893813, 1.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 416.0578646079109}, {
                193.6241032502621, 202.27190996825462`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5340504209893813]& ,
             TagBoxNote->"0.5340504209893813"],
            StyleBox["0.5340504209893813`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5340504209893813, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 1.5}, {0.8189114025993096, 2.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 629.808550838624}, {
                185.4762965322696, 194.1241032502621}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8189114025993096]& ,
             TagBoxNote->"0.8189114025993096"],
            StyleBox["0.8189114025993096`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8189114025993096, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                RectangleBox[{0., 2.5}, {0.725362609542086, 3.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 559.6124902934911}, {
                177.32848981427708`, 185.9762965322696}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.725362609542086]& ,
             TagBoxNote->"0.725362609542086"],
            StyleBox["0.725362609542086`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.725362609542086, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 3.5}, {0.523184744440109, 4.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 407.9046040046449}, {
                169.18068309628455`, 177.82848981427708`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.523184744440109]& ,
             TagBoxNote->"0.523184744440109"],
            StyleBox["0.523184744440109`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.523184744440109, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 4.5}, {0.7989619409936569, 5.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 614.8391047458605}, {
                161.03287637829203`, 169.68068309628455`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7989619409936569]& ,
             TagBoxNote->"0.7989619409936569"],
            StyleBox["0.7989619409936569`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7989619409936569, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 5.5}, {0.5273083731901972, 6.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 410.9988448168142}, {
                152.8850696602995, 161.53287637829203`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5273083731901972]& ,
             TagBoxNote->"0.5273083731901972"],
            StyleBox["0.5273083731901972`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5273083731901972, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 6.5}, {0.8124084288571427, 7.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 624.928924671247}, {
                144.737262942307, 153.3850696602995}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8124084288571427]& ,
             TagBoxNote->"0.8124084288571427"],
            StyleBox["0.8124084288571427`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8124084288571427, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 7.5}, {0.6786276680978263, 8.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 524.5440658704442}, {
                136.5894562243145, 145.237262942307}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6786276680978263]& ,
             TagBoxNote->"0.6786276680978263"],
            StyleBox["0.6786276680978263`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6786276680978263, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 8.5}, {0.573845850460062, 9.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 445.9190983582459}, {
                128.441649506322, 137.0894562243145}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.573845850460062]& ,
             TagBoxNote->"0.573845850460062"],
            StyleBox["0.573845850460062`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.573845850460062, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 9.5}, {0.5662633019997458, 10.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 440.2293934095015}, {
                120.29384278832946`, 128.941649506322}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5662633019997458]& ,
             TagBoxNote->"0.5662633019997458"],
            StyleBox["0.5662633019997458`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5662633019997458, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 10.5}, {0.5484463993624167, 11.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 426.86015223188775`}, {
                112.14603607033695`, 120.79384278832946`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5484463993624167]& ,
             TagBoxNote->"0.5484463993624167"],
            StyleBox["0.5484463993624167`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5484463993624167, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 11.5}, {0.5426125460213779, 12.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 422.48261288631346`}, {
                103.99822935234442`, 112.64603607033695`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5426125460213779]& ,
             TagBoxNote->"0.5426125460213779"],
            StyleBox["0.5426125460213779`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5426125460213779, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 12.5}, {0.5360814499999998, 13.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 417.581884648566}, {
                95.85042263435192, 104.49822935234442`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5360814499999998]& ,
             TagBoxNote->"0.5360814499999998"],
            StyleBox["0.5360814499999998`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5360814499999998, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 13.5}, {0.5008620131796424, 14.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 391.154331297931}, {
                87.70261591635939, 96.35042263435192}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5008620131796424]& ,
             TagBoxNote->"0.5008620131796424"],
            StyleBox["0.5008620131796424`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5008620131796424, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 14.5}, {0.6803891985737198, 15.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 525.865862719948}, {
                79.55480919836688, 88.20261591635939}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6803891985737198]& ,
             TagBoxNote->"0.6803891985737198"],
            StyleBox["0.6803891985737198`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6803891985737198, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 15.5}, {0.7447685714285714, 16.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 574.1741113577737}, {
                71.40700248037436, 80.05480919836688}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7447685714285714]& ,
             TagBoxNote->"0.7447685714285714"],
            StyleBox["0.7447685714285714`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7447685714285714, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 16.5}, {0.5503483943135652, 17.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 428.2873491885143}, {
                63.259195762381836`, 71.90700248037436}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5503483943135652]& ,
             TagBoxNote->"0.5503483943135652"],
            StyleBox["0.5503483943135652`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5503483943135652, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 17.5}, {0.5741901408450704, 18.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 446.17744299232766`}, {
                55.11138904438934, 63.759195762381836`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5741901408450704]& ,
             TagBoxNote->"0.5741901408450704"],
            StyleBox["0.5741901408450704`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5741901408450704, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 18.5}, {0.5974323948814455, 19.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 463.61769655652654`}, {
                46.96358232639682, 55.61138904438934}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5974323948814455]& ,
             TagBoxNote->"0.5974323948814455"],
            StyleBox["0.5974323948814455`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5974323948814455, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 19.5}, {0.6389629117289233, 20.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 494.7808850897334}, {
                38.815775608404294`, 47.46358232639682}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6389629117289233]& ,
             TagBoxNote->"0.6389629117289233"],
            StyleBox["0.6389629117289233`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6389629117289233, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 20.5}, {0.5129790268456378, 21.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 400.2465557631266}, {
                30.66796889041177, 39.315775608404294`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5129790268456378]& ,
             TagBoxNote->"0.5129790268456378"],
            StyleBox["0.5129790268456378`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5129790268456378, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 21.5}, {0.8865954085195537, 22.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 680.5964917862781}, {
                22.520162172419276`, 31.16796889041177}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8865954085195537]& ,
             TagBoxNote->"0.8865954085195537"],
            StyleBox["0.8865954085195537`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8865954085195537, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 22.5}, {0.836167870036101, 23.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 642.7572591372672}, {
                14.372355454426753`, 23.020162172419276`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.836167870036101]& ,
             TagBoxNote->"0.836167870036101"],
            StyleBox["0.836167870036101`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.836167870036101, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 23.5}, {0.8842791583529839, 24.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 678.858450795939}, {
                6.22454873643423, 14.872355454426753`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8842791583529839]& ,
             TagBoxNote->"0.8842791583529839"],
            StyleBox["0.8842791583529839`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8842791583529839, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 24.5}, {0.8392135761589402, 25.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                645.0426608449164}, {-1.9232579815582937`, 6.72454873643423}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8392135761589402]& ,
             TagBoxNote->"0.8392135761589402"],
            StyleBox["0.8392135761589402`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8392135761589402, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 25.5}, {0.6506063829787239, 26.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                503.51777827772526`}, {-10.071064699550789`, \
-1.4232579815582937`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6506063829787239]& ,
             TagBoxNote->"0.6506063829787239"],
            StyleBox["0.6506063829787239`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6506063829787239, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 26.5}, {0.5779149126136224, 27.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                448.9723941192988}, {-18.218871417543312`, \
-9.571064699550789}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5779149126136224]& ,
             TagBoxNote->"0.5779149126136224"],
            StyleBox["0.5779149126136224`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5779149126136224, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 27.5}, {0.5213128937350404, 28.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                406.5000263384844}, {-26.366678135535835`, \
-17.718871417543312`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5213128937350404]& ,
             TagBoxNote->"0.5213128937350404"],
            StyleBox["0.5213128937350404`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5213128937350404, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 28.5}, {0.634557032787317, 29.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                491.4748526457837}, {-34.51448485352836, \
-25.866678135535835`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.634557032787317]& ,
             TagBoxNote->"0.634557032787317"],
            StyleBox["0.634557032787317`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.634557032787317, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 29.5}, {0.5787948061393373, 30.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                449.6326384387159}, {-42.66229157152085, -34.01448485352836}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5787948061393373]& ,
             TagBoxNote->"0.5787948061393373"],
            StyleBox["0.5787948061393373`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5787948061393373, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 30.5}, {0.7713242925630821, 31.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                594.1006860110405}, {-50.810098289513405`, \
-42.16229157152085}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7713242925630821]& ,
             TagBoxNote->"0.7713242925630821"],
            StyleBox["0.7713242925630821`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7713242925630821, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 31.5}, {0.7073166398850356, 32.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                546.0713644569763}, {-58.95790500750587, \
-50.310098289513405`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7073166398850356]& ,
             TagBoxNote->"0.7073166398850356"],
            StyleBox["0.7073166398850356`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7073166398850356, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 32.5}, {0.6891854824576717, 33.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                532.4663164073876}, {-67.1057117254984, -58.45790500750587}}],
              
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6891854824576717]& ,
             TagBoxNote->"0.6891854824576717"],
            StyleBox["0.6891854824576717`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6891854824576717, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 33.5}, {0.903100416034803, 34.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                692.9813282868367}, {-75.25351844349092, -66.6057117254984}}],
              
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.903100416034803]& ,
             TagBoxNote->"0.903100416034803"],
            StyleBox["0.903100416034803`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.903100416034803, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 34.5}, {0.6901684338122436, 35.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                533.2038920675699}, {-83.40132516148344, -74.75351844349092}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6901684338122436]& ,
             TagBoxNote->"0.6901684338122436"],
            StyleBox["0.6901684338122436`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6901684338122436, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 35.5}, {0.5878667631215122, 36.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                456.4399485147962}, {-91.54913187947596, -82.90132516148344}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5878667631215122]& ,
             TagBoxNote->"0.5878667631215122"],
            StyleBox["0.5878667631215122`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5878667631215122, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 36.5}, {0.5379870612676751, 37.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                419.01179517493057`}, {-99.69693859746849, \
-91.04913187947596}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5379870612676751]& ,
             TagBoxNote->"0.5379870612676751"],
            StyleBox["0.5379870612676751`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5379870612676751, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 37.5}, {0.5352988072920986, 38.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                416.99461427218137`}, {-107.84474531546101`, \
-99.19693859746849}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5352988072920986]& ,
             TagBoxNote->"0.5352988072920986"],
            StyleBox["0.5352988072920986`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5352988072920986, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 38.5}, {0.5334626603361139, 39.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                415.61682757200214`}, {-115.99255203345353`, \
-107.34474531546101`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5334626603361139]& ,
             TagBoxNote->"0.5334626603361139"],
            StyleBox["0.5334626603361139`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5334626603361139, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 39.5}, {0.5520031244747138, 40.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                429.5290064540099}, {-124.140358751446, \
-115.49255203345353`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5520031244747138]& ,
             TagBoxNote->"0.5520031244747138"],
            StyleBox["0.5520031244747138`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5520031244747138, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 40.5}, {0.6484561680230425, 41.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                501.9043248671427}, {-132.28816546943852`, \
-123.640358751446}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6484561680230425]& ,
             TagBoxNote->"0.6484561680230425"],
            StyleBox["0.6484561680230425`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6484561680230425, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 41.5}, {0.708529445726099, 42.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                546.9814156662603}, {-140.43597218743105`, \
-131.78816546943852`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.708529445726099]& ,
             TagBoxNote->"0.708529445726099"],
            StyleBox["0.708529445726099`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.708529445726099, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 42.5}, {0.592979296558817, 43.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                460.2762321799904}, {-148.58377890542357`, \
-139.93597218743105`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.592979296558817]& ,
             TagBoxNote->"0.592979296558817"],
            StyleBox["0.592979296558817`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.592979296558817, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 43.5}, {0.6859884679061387, 44.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                530.0673776323484}, {-156.7315856234161, \
-148.08377890542357`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6859884679061387]& ,
             TagBoxNote->"0.6859884679061387"],
            StyleBox["0.6859884679061387`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6859884679061387, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 44.5}, {0.7134370540044486, 45.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                550.6639299626029}, {-164.87939234140862`, \
-156.2315856234161}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7134370540044486]& ,
             TagBoxNote->"0.7134370540044486"],
            StyleBox["0.7134370540044486`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7134370540044486, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 45.5}, {0.6064086583826526, 46.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                470.3532012659712}, {-173.02719905940114`, \
-164.37939234140862`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6064086583826526]& ,
             TagBoxNote->"0.6064086583826526"],
            StyleBox["0.6064086583826526`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6064086583826526, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 46.5}, {0.7115630852502121, 47.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                549.2577629792233}, {-181.17500577739366`, \
-172.52719905940114`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.7115630852502121]& ,
             TagBoxNote->"0.7115630852502121"],
            StyleBox["0.7115630852502121`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.7115630852502121, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 47.5}, {0.6836801436076664, 48.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                528.3352839631735}, {-189.32281249538613`, \
-180.67500577739366`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.6836801436076664]& ,
             TagBoxNote->"0.6836801436076664"],
            StyleBox["0.6836801436076664`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.6836801436076664, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 48.5}, {0.8577677042272867, 49.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                658.965092708373}, {-197.47061921337865`, \
-188.82281249538613`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.8577677042272867]& ,
             TagBoxNote->"0.8577677042272867"],
            StyleBox["0.8577677042272867`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.8577677042272867, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 49.5}, {0.864606979072944, 50.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                
                664.097068605239}, {-205.61842593137118`, \
-196.97061921337865`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.864606979072944]& ,
             TagBoxNote->"0.864606979072944"],
            StyleBox["0.864606979072944`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.864606979072944, {}], "Tooltip"]& ]}, 
         {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
          0.34299999999999997`], Thickness[Small]}], 
          TagBox[
           TooltipBox[
            TagBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0., 50.5}, {0.5593446927931669, 51.5}, 
                 "RoundingRadius" -> 0]},
               
               ImageSizeCache->{{14.823291121828145`, 
                435.0378875131501}, {-213.7662326493637, \
-205.11842593137118`}}],
              "DelayedMouseEffectStyle"],
             StatusArea[#, 0.5593446927931669]& ,
             TagBoxNote->"0.5593446927931669"],
            StyleBox["0.5593446927931669`", {}, StripOnInput -> False]],
           Annotation[#, 
            Style[0.5593446927931669, {}], 
            "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
       StyleBox[{
         {Thickness[Tiny], LineBox[{{0., -0.52}, {0., 52.5404}}], 
          StyleBox[{}, "GraphicsLabel",
           StripOnInput->False]}, 
         StyleBox[{
           {Thickness[Tiny], 
            LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}], 
            LineBox[{{0., 51.5}, 
              Offset[{-6., 0.}, {0., 
               51.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, 
           StyleBox[{}, "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]}, "GraphicsAxes",
        StripOnInput->False,
        Antialiasing->False]},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., -0.52},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{Automatic, 458.33267282060694`},
      PlotRange->{{All, All}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.05]}, {
         Scaled[0.02], 
         Scaled[0.02]}},
      Ticks->{Automatic, None}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7717762699486437`*^9, {3.771776441650338*^9, 3.771776471278308*^9}, 
   3.7717765032105827`*^9, 3.7717765705843143`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"c18a7b5c-6841-4bb4-9fcf-1f10377d34db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"averagePerFeatureGood", ",", 
   RowBox[{"ChartLabels", "\[Rule]", "citiesFeaturesNames"}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "colorsPerFeatureGood"}]}], "]"}]], "Code",\

 CellChangeTimes->{{3.771776636613044*^9, 3.7717766457011547`*^9}, {
  3.771776686318879*^9, 3.771776690641829*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"eee9f708-8858-4445-a590-eb39462adcc6"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{{0., -0.52}, {0., 51.5}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.34299999999999997`], Thickness[Small]}], 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 0.5}, {0.5340504209893813, 1.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 672.9786103340209}, {
            236.73802796916723`, 247.11394858158764`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5340504209893813]& ,
         TagBoxNote->"0.5340504209893813"],
        StyleBox["0.5340504209893813`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5340504209893813, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 1.5}, {0.8189114025993096, 2.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 932.0648750343473}, {
            226.86210735674683`, 237.23802796916723`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8189114025993096]& ,
         TagBoxNote->"0.8189114025993096"],
        StyleBox["0.8189114025993096`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8189114025993096, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 2.5}, {0.725362609542086, 3.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 846.9805394281151}, {
            216.98618674432643`, 227.36210735674683`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.725362609542086]& ,
         TagBoxNote->"0.725362609542086"],
        StyleBox["0.725362609542086`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.725362609542086, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 3.5}, {0.523184744440109, 4.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 663.0960790912978}, {
            207.11026613190603`, 217.48618674432643`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.523184744440109]& ,
         TagBoxNote->"0.523184744440109"],
        StyleBox["0.523184744440109`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.523184744440109, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 4.5}, {0.7989619409936569, 5.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 913.9204754013055}, {
            197.2343455194856, 207.61026613190603`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7989619409936569]& ,
         TagBoxNote->"0.7989619409936569"],
        StyleBox["0.7989619409936569`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7989619409936569, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 5.5}, {0.5273083731901972, 6.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 666.8465947422416}, {
            187.35842490706523`, 197.7343455194856}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5273083731901972]& ,
         TagBoxNote->"0.5273083731901972"],
        StyleBox["0.5273083731901972`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5273083731901972, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 6.5}, {0.8124084288571427, 7.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 926.1503016632233}, {
            177.4825042946448, 187.85842490706523`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8124084288571427]& ,
         TagBoxNote->"0.8124084288571427"],
        StyleBox["0.8124084288571427`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8124084288571427, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 7.5}, {0.6786276680978263, 8.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 804.4742567447175}, {
            167.6065836822244, 177.9825042946448}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6786276680978263]& ,
         TagBoxNote->"0.6786276680978263"],
        StyleBox["0.6786276680978263`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6786276680978263, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 8.5}, {0.573845850460062, 9.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 709.1732801530784}, {
            157.730663069804, 168.1065836822244}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.573845850460062]& ,
         TagBoxNote->"0.573845850460062"],
        StyleBox["0.573845850460062`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.573845850460062, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 9.5}, {0.5662633019997458, 10.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 702.2768138613817}, {
            147.85474245738357`, 158.230663069804}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5662633019997458]& ,
         TagBoxNote->"0.5662633019997458"],
        StyleBox["0.5662633019997458`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5662633019997458, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{0., 10.5}, {0.5484463993624167, 11.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 686.0720155532861}, {
            137.9788218449632, 148.35474245738357`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5484463993624167]& ,
         TagBoxNote->"0.5484463993624167"],
        StyleBox["0.5484463993624167`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5484463993624167, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 11.5}, {0.5426125460213779, 12.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 680.766019405983}, {
            128.10290123254276`, 138.4788218449632}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5426125460213779]& ,
         TagBoxNote->"0.5426125460213779"],
        StyleBox["0.5426125460213779`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5426125460213779, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 12.5}, {0.5360814499999998, 13.5}, 
             "RoundingRadius" -> 0]},
           ImageSizeCache->{{186.74999999999997`, 674.8258683083676}, {
            118.22698062012236`, 128.60290123254276`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5360814499999998]& ,
         TagBoxNote->"0.5360814499999998"],
        StyleBox["0.5360814499999998`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5360814499999998, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 13.5}, {0.5008620131796424, 14.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 642.7931473682614}, {
            108.35106000770196`, 118.72698062012236`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5008620131796424]& ,
         TagBoxNote->"0.5008620131796424"],
        StyleBox["0.5008620131796424`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5008620131796424, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 14.5}, {0.6803891985737198, 15.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 806.0764008803437}, {
            98.47513939528156, 108.85106000770196`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6803891985737198]& ,
         TagBoxNote->"0.6803891985737198"],
        StyleBox["0.6803891985737198`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6803891985737198, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 15.5}, {0.7447685714285714, 16.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 864.6306161415739}, {
            88.59921878286113, 98.97513939528156}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7447685714285714]& ,
         TagBoxNote->"0.7447685714285714"],
        StyleBox["0.7447685714285714`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7447685714285714, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 16.5}, {0.5503483943135652, 17.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 687.8019146942177}, {
            78.72329817044073, 89.09921878286113}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5503483943135652]& ,
         TagBoxNote->"0.5503483943135652"],
        StyleBox["0.5503483943135652`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5503483943135652, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 17.5}, {0.5741901408450704, 18.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 709.4864185454265}, {
            68.84737755802033, 79.22329817044073}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5741901408450704]& ,
         TagBoxNote->"0.5741901408450704"],
        StyleBox["0.5741901408450704`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5741901408450704, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 18.5}, {0.5974323948814455, 19.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 730.6256730248145}, {
            58.971456945599925`, 69.34737755802033}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5974323948814455]& ,
         TagBoxNote->"0.5974323948814455"],
        StyleBox["0.5974323948814455`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5974323948814455, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 19.5}, {0.6389629117289233, 20.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 768.398436497985}, {
            49.095536333179524`, 59.471456945599925`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6389629117289233]& ,
         TagBoxNote->"0.6389629117289233"],
        StyleBox["0.6389629117289233`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6389629117289233, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 20.5}, {0.5129790268456378, 21.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 653.8137925696615}, {
            39.219615720759094`, 49.595536333179524`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5129790268456378]& ,
         TagBoxNote->"0.5129790268456378"],
        StyleBox["0.5129790268456378`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5129790268456378, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 21.5}, {0.8865954085195537, 22.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 993.6247144153812}, {
            29.343695108338693`, 39.719615720759094`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8865954085195537]& ,
         TagBoxNote->"0.8865954085195537"],
        StyleBox["0.8865954085195537`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8865954085195537, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 22.5}, {0.836167870036101, 23.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 947.7599472932899}, {
            19.46777449591829, 29.843695108338693`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.836167870036101]& ,
         TagBoxNote->"0.836167870036101"],
        StyleBox["0.836167870036101`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.836167870036101, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 23.5}, {0.8842791583529839, 24.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 991.5180425911935}, {
            9.59185388349789, 19.96777449591829}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8842791583529839]& ,
         TagBoxNote->"0.8842791583529839"],
        StyleBox["0.8842791583529839`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8842791583529839, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 24.5}, {0.8392135761589402, 25.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            950.5300726305038}, {-0.28406672892251095`, 10.09185388349789}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8392135761589402]& ,
         TagBoxNote->"0.8392135761589402"],
        StyleBox["0.8392135761589402`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8392135761589402, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 25.5}, {0.6506063829787239, 26.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            778.9883862243653}, {-10.15998734134294, 0.21593327107748905`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6506063829787239]& ,
         TagBoxNote->"0.6506063829787239"],
        StyleBox["0.6506063829787239`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6506063829787239, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 26.5}, {0.5779149126136224, 27.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            712.8741664880242}, {-20.035907953763314`, -9.65998734134294}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5779149126136224]& ,
         TagBoxNote->"0.5779149126136224"],
        StyleBox["0.5779149126136224`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5779149126136224, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 27.5}, {0.5213128937350404, 28.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            661.3935966926484}, {-29.911828566183743`, -19.535907953763314`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5213128937350404]& ,
         TagBoxNote->"0.5213128937350404"],
        StyleBox["0.5213128937350404`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5213128937350404, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 28.5}, {0.634557032787317, 29.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            764.3912091436059}, {-39.78774917860417, -29.411828566183743`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.634557032787317]& ,
         TagBoxNote->"0.634557032787317"],
        StyleBox["0.634557032787317`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.634557032787317, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 29.5}, {0.5787948061393373, 30.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            713.6744457176438}, {-49.663669791024546`, -39.28774917860417}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5787948061393373]& ,
         TagBoxNote->"0.5787948061393373"],
        StyleBox["0.5787948061393373`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5787948061393373, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 30.5}, {0.7713242925630821, 31.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            888.783529454866}, {-59.539590403444976`, -49.163669791024546`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7713242925630821]& ,
         TagBoxNote->"0.7713242925630821"],
        StyleBox["0.7713242925630821`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7713242925630821, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 31.5}, {0.7073166398850356, 32.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            830.5674004825262}, {-69.41551101586535, -59.039590403444976`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7073166398850356]& ,
         TagBoxNote->"0.7073166398850356"],
        StyleBox["0.7073166398850356`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7073166398850356, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 32.5}, {0.6891854824576717, 33.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            814.0767817041994}, {-79.29143162828578, -68.91551101586535}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6891854824576717]& ,
         TagBoxNote->"0.6891854824576717"],
        StyleBox["0.6891854824576717`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6891854824576717, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 33.5}, {0.903100416034803, 34.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            1008.6363201530612`}, {-89.16735224070615, -78.79143162828578}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.903100416034803]& ,
         TagBoxNote->"0.903100416034803"],
        StyleBox["0.903100416034803`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.903100416034803, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 34.5}, {0.6901684338122436, 35.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            814.9707939111322}, {-99.04327285312658, -88.66735224070615}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6901684338122436]& ,
         TagBoxNote->"0.6901684338122436"],
        StyleBox["0.6901684338122436`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6901684338122436, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 35.5}, {0.5878667631215122, 36.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            721.925556258477}, {-108.91919346554701`, -98.54327285312658}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5878667631215122]& ,
         TagBoxNote->"0.5878667631215122"],
        StyleBox["0.5878667631215122`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5878667631215122, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 36.5}, {0.5379870612676751, 37.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            676.559056555219}, {-118.79511407796738`, -108.41919346554701`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5379870612676751]& ,
         TagBoxNote->"0.5379870612676751"],
        StyleBox["0.5379870612676751`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5379870612676751, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 37.5}, {0.5352988072920986, 38.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            674.1140404734739}, {-128.6710346903878, -118.29511407796738`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5352988072920986]& ,
         TagBoxNote->"0.5352988072920986"],
        StyleBox["0.5352988072920986`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5352988072920986, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 38.5}, {0.5334626603361139, 39.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            672.4440312866125}, {-138.5469553028082, -128.1710346903878}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5334626603361139]& ,
         TagBoxNote->"0.5334626603361139"],
        StyleBox["0.5334626603361139`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5334626603361139, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 39.5}, {0.5520031244747138, 40.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            689.3069219932728}, {-148.42287591522862`, -138.0469553028082}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5520031244747138]& ,
         TagBoxNote->"0.5520031244747138"],
        StyleBox["0.5520031244747138`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5520031244747138, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 40.5}, {0.6484561680230425, 41.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            777.0327264564961}, {-158.29879652764905`, -147.92287591522862`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6484561680230425]& ,
         TagBoxNote->"0.6484561680230425"],
        StyleBox["0.6484561680230425`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6484561680230425, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 41.5}, {0.708529445726099, 42.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            831.6704695423601}, {-168.17471714006942`, -157.79879652764905`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.708529445726099]& ,
         TagBoxNote->"0.708529445726099"],
        StyleBox["0.708529445726099`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.708529445726099, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 42.5}, {0.592979296558817, 43.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            726.5754987811093}, {-178.05063775248985`, -167.67471714006942`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.592979296558817]& ,
         TagBoxNote->"0.592979296558817"],
        StyleBox["0.592979296558817`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.592979296558817, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 43.5}, {0.6859884679061387, 44.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            811.1690385880028}, {-187.92655836491022`, -177.55063775248985`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6859884679061387]& ,
         TagBoxNote->"0.6859884679061387"],
        StyleBox["0.6859884679061387`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6859884679061387, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 44.5}, {0.7134370540044486, 45.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            836.1340288907271}, {-197.80247897733065`, -187.42655836491022`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7134370540044486]& ,
         TagBoxNote->"0.7134370540044486"],
        StyleBox["0.7134370540044486`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7134370540044486, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 45.5}, {0.6064086583826526, 46.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            738.7897485972219}, {-207.67839958975108`, -197.30247897733065`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6064086583826526]& ,
         TagBoxNote->"0.6064086583826526"],
        StyleBox["0.6064086583826526`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6064086583826526, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 46.5}, {0.7115630852502121, 47.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            834.4296200876812}, {-217.55432020217145`, -207.17839958975108`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.7115630852502121]& ,
         TagBoxNote->"0.7115630852502121"],
        StyleBox["0.7115630852502121`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.7115630852502121, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 47.5}, {0.6836801436076664, 48.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            809.0695754855863}, {-227.43024081459188`, -217.05432020217145`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.6836801436076664]& ,
         TagBoxNote->"0.6836801436076664"],
        StyleBox["0.6836801436076664`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6836801436076664, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 48.5}, {0.8577677042272867, 49.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            967.4053909307895}, {-237.30616142701226`, -226.93024081459188`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.8577677042272867]& ,
         TagBoxNote->"0.8577677042272867"],
        StyleBox["0.8577677042272867`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8577677042272867, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.8], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 49.5}, {0.864606979072944, 50.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            973.6258362968267}, {-247.1820820394327, -236.80616142701226`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.864606979072944]& ,
         TagBoxNote->"0.864606979072944"],
        StyleBox["0.864606979072944`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.864606979072944, {}], "Tooltip"]& ]}, 
     {RGBColor[0.2, 0.2, 0.8], Opacity[0.4], EdgeForm[{Opacity[
      0.34299999999999997`], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0., 50.5}, {0.5593446927931669, 51.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{186.74999999999997`, 
            695.9842124453394}, {-257.05800265185314`, -246.6820820394327}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5593446927931669]& ,
         TagBoxNote->"0.5593446927931669"],
        StyleBox["0.5593446927931669`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5593446927931669, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], LineBox[{{0., -0.52}, {0., 52.5404}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}], 
        LineBox[{{0., 51.5}, 
          Offset[{-6., 0.}, {0., 
           51.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
          LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
          LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
          LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
          LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
          LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
          LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
          LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
          LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
          LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
          LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
          LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
          LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
          LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
          LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
          LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
          LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
          LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
          LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
          LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
          LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
          LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
          LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
          LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
          LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
          LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
          LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
          LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
          LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
          LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
          LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
          LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
          LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
          LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
          LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
          LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
          LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
          LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
          LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
          LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
          LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
          LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
          LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
          LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
          LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
          LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
          LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
          LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
          LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
          LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
          LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
          LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
          LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
          LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
          LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
          LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
          LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
          LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
          LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
          LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
          LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
          LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
          LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
          LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
          LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
          LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
          LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
          LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
          LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
          LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
          LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
          LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
          LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
          LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
          LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
          LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
          LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
          LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
          LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
          LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
          LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
          LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
          LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
          LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
          LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
          LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
          LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
          LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
          LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
          LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
          LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
          LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
          LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
          LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
          LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
          LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
          LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
          LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
          LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
          LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], 
         InsetBox["\<\"Population\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Latitude\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Longitude\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Elevation\"\>", Offset[{-2, 0}, {0., 4.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"MagneticFieldStrength\"\>", 
          Offset[{-2, 0}, {0., 5.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryPopulation\"\>", Offset[{-2, 0}, {0., 6.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryLatitude\"\>", Offset[{-2, 0}, {0., 7.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryLongitude\"\>", Offset[{-2, 0}, {0., 8.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryArea\"\>", Offset[{-2, 0}, {0., 9.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"CountryWaterArea\"\>", Offset[{-2, 0}, {0., 10.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryBoundaryLength\"\>", 
          Offset[{-2, 0}, {0., 11.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryCoastlineLength\"\>", 
          Offset[{-2, 0}, {0., 12.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryWaterwayLength\"\>", 
          Offset[{-2, 0}, {0., 13.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryContributingFamilyWorkers\"\>", 
          Offset[{-2, 0}, {0., 14.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryGDPPerPersonEmployed\"\>", 
          Offset[{-2, 0}, {0., 15.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryGiniIndex\"\>", Offset[{-2, 0}, {0., 16.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryInterestRateSpread\"\>", 
          Offset[{-2, 0}, {0., 17.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryPovertyHeadcount\"\>", 
          Offset[{-2, 0}, {0., 18.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryUnemploymentRate\"\>", 
          Offset[{-2, 0}, {0., 19.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryBookTitles\"\>", Offset[{-2, 0}, {0., 20.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryIlliteracyFraction\"\>", 
          Offset[{-2, 0}, {0., 21.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryMaleLifeExpectancy\"\>", 
          Offset[{-2, 0}, {0., 22.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryMaleMedianAge\"\>", 
          Offset[{-2, 0}, {0., 23.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryFemaleLifeExpectancy\"\>", 
          Offset[{-2, 0}, {0., 24.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryFemaleMedianAge\"\>", 
          Offset[{-2, 0}, {0., 25.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryHospitalBedsPer10000Population\"\>", 
          Offset[{-2, 0}, {0., 26.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryArmy\"\>", Offset[{-2, 0}, {0., 27.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"CountryHIVAIDSPopulation\"\>", 
          Offset[{-2, 0}, {0., 28.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryElectricityTotal\"\>", 
          Offset[{-2, 0}, {0., 29.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryChildPopulation\"\>", 
          Offset[{-2, 0}, {0., 30.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryElderlyPopulation\"\>", 
          Offset[{-2, 0}, {0., 31.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryAnnualMarriages\"\>", 
          Offset[{-2, 0}, {0., 32.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryAnnualDivorces\"\>", 
          Offset[{-2, 0}, {0., 33.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryNetIncomeFromAbroad\"\>", 
          Offset[{-2, 0}, {0., 34.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryGovernmentDebt\"\>", 
          Offset[{-2, 0}, {0., 35.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryGovernmentSurplus\"\>", 
          Offset[{-2, 0}, {0., 36.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryImportsValue\"\>", Offset[{-2, 0}, {0., 37.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryExportsValue\"\>", Offset[{-2, 0}, {0., 38.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"CountryLeisureArrivals\"\>", 
          Offset[{-2, 0}, {0., 39.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"CountryNewspaperTitles\"\>", 
          Offset[{-2, 0}, {0., 40.}], {1, 0}, Automatic, {1, 0}], 
         InsetBox["\<\"Street\"\>", Offset[{-2, 0}, {0., 41.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Highway\"\>", Offset[{-2, 0}, {0., 42.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Water\"\>", Offset[{-2, 0}, {0., 43.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Park\"\>", Offset[{-2, 0}, {0., 44.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Train\"\>", Offset[{-2, 0}, {0., 45.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Interesting\"\>", Offset[{-2, 0}, {0., 46.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Building\"\>", Offset[{-2, 0}, {0., 47.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"Annotations\"\>", Offset[{-2, 0}, {0., 48.}], {1, 0}, 
          Automatic, {1, 0}], 
         InsetBox["\<\"MeanNeighborDegree\"\>", Offset[{-2, 0}, {0., 49.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"DegreeCentrality\"\>", Offset[{-2, 0}, {0., 50.}], {1, 0},
           Automatic, {1, 0}], 
         InsetBox["\<\"ClosenessCentrality\"\>", Offset[{-2, 0}, {0., 51.}], {1, 0},
           Automatic, {1, 0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., -0.52},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1054.046875, Automatic},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.05]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{{3.7717766400579157`*^9, 3.771776648115377*^9}, 
   3.771776691624318*^9},
 CellLabel->"Out[142]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzc3Qm0bUV1L/ztOfdeWrFFY7yKGmOb/r33vTfyool50djQCIoNXlGiIIKo
sclLYoM9atSIXVSMqEkU6QRFQbFDQREVBFQawb7vQEmM/frqV6v+a9c+9xy6
Q8b4xrfGOPucs/ZaVbNmP2dVzdptv6ccuP8h+z3lsY/a7zZ/+aT9nnjgYx/1
5Nvc6wlPKreWrzebbbj1bLZ0p9vM/D3MZvlY7bqdj9W/W9dX76m/lodf//rX
+Wa2qd371a9+Nd07ut375S9/Od1715Xc69/duMq9Y67kuV/84hfTveePYL67
/tpxOOOMM4YXvehFwz/8wz8MF154YX3mQx/60HDsscfWvy+55JLhZS972XDY
YYe5//b62k7DT3/60+Ftb3tbvf36179++Pd///f6+Bve8Ibh85///PDe9763
fvfiF7+4/tbFN77xjaPq6xvq40ceeWT96s1vfvPS8POf/3y2zfBP//RPw5e/
/OUJpcbyr//6r8O3vvWt2djz9StA//iP/1hf/fCHP1yf+/GPfzy8+tWv9lwd
6zve8Y7hhS98Yb339a9/fXr3s5/97PCSl7ykfveJT3yivnvuuecO//zP/1z/
/sIXvlDbBnUBC5jB10lt4N/85jeHv/u7vxvOOeec4QMf+MDw3Oc+t47Gq5/5
zGcMZHje8543vOc97xk+97nPDX//938/fOlLXzqqvf7+979/eP7zn+9WHe1b
3/rW2vPHP/7x4Xvf+97wyU9+cnj0ox89nHzyycMFF1wwnH/++cNPfvKT8fVt
hqOPPnp4+ctfXl9HMb1gtNNPP322NHz/+98vJP/2t789fPWrXx2e9rSnDWee
eSaEzN5W379BJZvue+ggHNQf/ehH60gg9dBDDx0uvfTS4YQTTqikKwzZ2tip
Itv3njv77LNrP/qEGUjVxrOe9azhne985/CVr3ylIvTf/u3fFvC4aTjttNPq
Ny4jePrTn27AS+1rA3z2s5898dURRxwBmKPa16985Ssn4uNaj/7nf/7nUmMv
Db773e+ujZZhvL2NnlghPTq5YKeNrv4PO0aGpljgcY97XMXWd7/73Tb6Tdip
0h/GXIhYRrrcvjYkvO+6/PLLh//7f/8vsuRtsOohF2Ys48iooRFJfvjDH9av
Iak8sgJ1EEvOchnSWWedlUYw+Qte8ILhZz/7Wf36mGOOGd7ylre8rbEQmeqR
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
wA9BzbPusQ7uCRM8Z+bjwAMPrPgSJmBbfbFOcINlWVeCD/eCvE4TX8vxLtfx
spLz0OaO1a81lrjlnqFNsaaQJuMFV+L7PCvxjo3hDc74W8llUHjuufALb8BY
tElk05exEVUzX7S3NlmyMt61Y7lrMmAAlXhlGjAmg1wId3FJMBVzjukNmD9q
oAbhfYC7uBEYIgN2QSiNTefkXhZ6hHgJmBO0YibmlQAYtOCjaPz/mgFH2QTT
BstW4kgLagDhf5IgmMPB/BvcJ6rH/fHVDBQXoxLNkJlzA8ZFzJhpFkjJ9/oT
MPrNNKK+ARdkXLcDHnXib09pE6kL2EVNlPC3lAJVg7IB3D2D9j1HCHvL5qAW
KkWks6yGuvMss4FbLAqDJDYbexMDaoT9hviiXmZrxqhXd6D0Ewwb6E2aMRGe
cyRc9GXRybPYOXoGxq2i2GYyDEcsGIbLLvbxngqMwPTyoq3PXK1zdpd3wu6m
c0qKy+tCdivC0rnRU3ri1BhZMSn2o2z9PP3pLyqUO7EA/vGZlTpnXOijPP7C
F55eBOnjJfY4d/bu+rlcSHZe4ckPFF7+VWDrY1LUMeBRCb+kYPnkopjPmVlt
8ekLfZQ2Dj/8nGq3L7roK6XdL33pWzWj+80ykB/0xvCINgZUzrxOEJjVDkNn
gftVhWFnljrxbOJ0VvnII88rCv9HBa4TTvjhhT6aQT7iCHMfvxgTAoeNgLy8
vQi5lEaRqdJBUVHFgcDyvCvWkQjIlhWruMTszDZX/ZKLcQqTeIxBZpxwJoOD
ruCl19xjnLjLxuU9z+Jq8a6LIc9ySCJe3PY1pfjCtRIwC0PcUA0ptUI1lOEs
4fbZb1WtoXvDYSepV6zFo2d3kYiwWulBNvwvcvC/JoFJgLGi96h96SuRhUiJ
Emirdaqws0FSYPpZkUdfW1NdvTEuT8lTcjI6ereoKtXgqGYql1qFewCiFS3j
PvyTGbaLUMsPoJv20IW/3oe0wiRtFNrPkjGGsCTQteW6ymT51RvcbaZEIc9M
GETP8/SoXprJIAHNiwAE1SgnwAgHCQbvGVT0P1UsFpWTYIuSGU6sa5B+F28z
Y4QnzMGhosFDwOtgjHeexkjm2EsIRqyMETdxItg23CM+j6nBnTzbcCFtjpC4
mnNgjBwRAtCSubV9eEq/CG683qeQ9cm7ZJb8LmbsuuNSiZSRS7erBKJsaDQS
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
QDSwRdbOIzU0eE5Cj+ftO7+xIVY1Bmo0OS3qgAhQFQIkLNzn3cCAHEm+Z7Np
XG7+ome0hfLGWt06a4s31deApVlaoJ2gt0Q9zW447TXMpjr/t9qulWeyzCjE
NTJQGFEZ+Tp5dbuKvSQhjAyD5eDbllcqjDPVxtipvpAdEDiXhGZXBFRzijID
z3ICtnDaUk0SLVclAR3zkHPH2gRO0SelFzhiFBMNYOpAMoammyuOUiQ2dUxz
FBiQ8j1jgOGzCS/HTLuyET/9ZDdGArGculBXC+l2ue+2DePW9R7ZAgbXJpvf
kLKfXEyX/gZG36332rmE05CTNoEW+jt2yvPTiqTfrq/kjM+UJwY9VZH69SLU
HD2Z5S/xqIGkjRzR0kqh1u/cC7b8zmb2MEH/nouanZ9pfDXYc8ogLgT5m6ZN
+il7zF0urJEsKfibpz2tlkolaiqTasRFxWTlxBGini05Wb8Bw3rRXFva0Jrb
OFUiduW7HVpX1AVVRWX50V0R0p2aoqXUGWHGtmjJHK7O10ga14Ug6BlC8BGK
eCdd6dFU6Ei29PnPN39yVnn12zMrNL5xuo/ZWJH5Va86rVYleVNdJjKWfYgo
j6ukZrdp7WBhtLJKJfdoIvqR9cpapEhIeITbE4SGbcfBDVM2t/FDO3ZzeeKf
UeaHybPP+pfS7sZRsie9tk1fXWRiNtGKfG4qnDSAJkblb5Xvd2hNICqUQ6uf
xz72WcOeex457LbbiXWj0jvO8FEA3HXXo4dHPvLkYb/9Tp4dWT+Xh0c84uTi
Z5xUEdRw938a7Dnsh+Ys49i7DZ2SbvOuU12YPmdbJH77bnCtWF39Ofjgfxi2
bDmt/FxS1xReeIaP0ubDH37RsM8+F/opkPl0ls9FxSU/pWDkl4Hsjq07VkjW
RSaxSH6frsWO/IYYZPjMUST0Co5GaIok/Eh5AA+4VGcOdrzydO0Np2LQki/e
S9nqHHZDqrLAJBajHU6DptEdRtNmAZo+2aE+RpA1nQ1P3MoVZ9xUtTKK3W/W
YRhmpjoMx9CT6sdG3Ettuh+1zEWHzcxHrXzP91CLz8pwluoqqJvXbigAuoX4
BuMez1IL4MKs5rlJ3oGpiIVuwt1SbJ6bY3jbaixztIjLsGBURFmkJA6fLjnk
CFf+ni9hXe2UywPbOtZ99rlg2H//Bf66Q/21uTJQ8p1ZUaxbGIhX6P7K1Guc
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
ZYzQG3bjb2RLtH4RWna2GQvzz1BTzYlqoWaMhdjWL3OVFkUpCwweWQk4W5/0
pS3voPNWV75jG2Vqx/fe86y5xfdaYu0T9oltJiLsrmKblNEkorNfAKYNHUha
8G2ronxKc6WjhY95fq+KliKe+/MxU1Pc/dQPyOpfW1WoIhz3uR8fk0Nt4mgl
NJMtmLgcXZBnrMKMJbmtUwLE/4C1d+/eKuLTDs7DgUw1dKNPfuzzn//82od3
UoCADiWKk/6AVWpuVMzqszFf4Ba7oT2BBrSHzownlnVDdkPQ19VxQT66NXZw
cQ/9GV92XdL3xpEi4yQIlZOMklthbXYEF3SRK+i8vqpL9YEhHtN/XFBBkFUX
1NgT3UQDcQPjgsI98QS2CBkRx4/H57yRHO5F2EkTRl3iIxe6NA4ETySR+PoD
b32R+MQfsaQ9NGEcxoNhkmIaXrKAGb2a0sRoEo0x6cA+z47pAeIWY0z4No64
vsa6OKZ/QqX3HPN2iVfAr+cczSBXzCd1vMBdu8bSTu9UuKVSXKG9rTL45Kdm
Cy4EQ2i25Q5+Ktpsh7v7Bj20gWeMMRt50K9t9XE5Rk/y4e0zJxXhkBkH//5m
u+ApMoOKS0CxVYY4ZpjqkiP65RVH9O1vv3eN+7Gzm+roBh2TV8XFiCNqWG0t
p3tHXAUe+yIqM505o0b8981tSoaMrJALdBEF8XCQL7Wl/Xg2QkmFzJYXAm9q
XumePb/3ZR/liz177i5eqcIV7y/+dPFHK5v+1yJuphpqtbHJG569s6ElniXy
8sOzfNaz3lAcydsnz/IrzbNsXmVxfd9dpLrPjfk557x7fuWVdcv+UuO3NRju
zzX8yhrX8PzmGl5yyYPzq6++vbT7j0vtvq7+OrHyJz7Ch3gs+wwBjixFFwCZ
FTHjoH/pWPZAtiLjXTIY8H2f5D6QWP7ffw7As4d8YFdffdumwU6Zw0/qBq9G
DYyCoAQIFQqCUKMkxoBmKuBgeELSAH3nGf4sRZLkhpiNMb9fDf4QRrxRxVU7
cdbFEfGK24kqRinRNcbTsUlCp0lZi02jws0Euxux+2VGs33uvT740U6Zgx5T
JR7Nh1NZUKwxQwXIhOkzVJKCleL7ZBakLWgbgsx9Nj3ksCqK8XwYRloogZnC
hKA2iUGUkGwC5ADVQzbEBIjsSPEcIt4ETSROATUMN2Ds/2YOHBZKOKn2yojK
lmOMRKnAMjCnKDwaxVyUGgMbjVIAwJvj4micUjcDlEDCUUyUWTHQDsuIj6zI
zgF8JiTnCqw4eFSHrNc5lEyttA2bK4HLuxb6on6c3ZTGJZcw/Ka6lGPvdf2o
GPFiUBQTUiTdcQVMBgZkQRE6047y7dVO8jghXEAcKiPgzzuPgP/AJODrx9lN
yp9zzt3ziy56U81M/10F/39VY4tSl/9VgelXZ5+ehvTLTQYDc/yI5NcqKJpi
wDsqLTFdeIjE4pQVvGiC0uqyLjjjjHfWj2f5KN+eeeY7qYGqCr6zKYTzzvvd
ooFuKpR4f8bx821SSIeCXBQ4fUIdWxgAx/ob6JLFDuETJr7PVseccs5+c3/n
VPT4N1OFPkC6+sk7xtHS4Wy0VHuDaprOStSP3T6e2jSSDSrnnnvPuokl0fQi
A8oTquFAqzO8dWbQeMJz+IIEYMTS8Pk+SbHRigEnKaUJjYYt55N40j6kjvEq
3H9AcfVTjZUQN2Laz5ym+o/uPXFpTkRotkIg3jjcHK0s3I1zQvd0lpUGehBn
+juV18GEuDVXBNAWKnvS7pY/+AAy4iFMbFpSpTt2VoGWiRkQ9VQmMPV1RJUg
nJBxXilkV9d+itArIoWKpj0owRxRRXteGdO6mK6pEpXtSO9Wp/UtlWbQiI51
ZhpsDsZR8OV3Skkn3zR8xdHO0cBUp6LdSQQyHK6SO4eWoc2BCVMKjsQ5R4ve
9b3Jrtmx/9DwlWy1xdspUCq+zuwbKgGRYhRKTpmDOiKihCgUgzNgy/nZTQFD
WcDwDp2PySgsqoDlyJPEXCadA+buJaVwlsyiENdmin0IdLhIo7azJ9ejwmL6
1+rLRdsWp59A5LBy+EzV9A2t1YTt5fX8n+S+KR/iwqccJXxo+gRuPw2zszaf
ZZJDnVVSpi/Exo46K9BkqLTylP0gl6lEAX9d54FfWKOAH9sUMOFsd+zevffP
rqmf04m2s8++uwiO+1YHBGUGtSiMPR1wY2WxCMp3SZyLCpa3cG52jqZDZb88
P/XUN9dDZb9TPx7jozT8jGe8af793/9b8wsvvLHQ3e3XqGBdGi5/lmHfXGz/
T2d4cb4iIvNDEe3de0eZ0X2l/Ysv/nj9eIyPanzcW9Tx7xWJ8dHZC2tBEXK+
75Wd/enU+OvahJLMebEZ6vheuC0X/mVlElbjd0na7HKfvQeB2iTAfF/k8/71
zGM6wdxfCMbuqY9PRtMZywPVmEMvltUyUF5aW3zshx2yEMheT9Zwpp1ns7OE
4MO/zL9s+Sma/3AM9LHVGbChLtkBUBDBQoiAHKZNgiRQMxAeH+imICd3MyU1
cCZV4Ld25N49PCMV3ErVw2xwS5E6I0JsqSBI7AmspDaxe95hl/AxE6Fgu9Mh
bWPcFkcaD4MkSm1WogClpWalUCV4gbN72DHZVwh4hEPjEcqeI+hzCl+4M6uH
KHyxArG1ET+hFwqMn5PgHUM1y0OwD17J1M2GQRWECfXkt2fBknCkXpghdDCq
SdmLNTWGHvqA6bmskmTnVg4P5YwKQwsqkDAlkZNM3ErPJ2mCd7BBylcaIKkJ
fe7ta+fhQxjwURWXqUSRLB2xFF08q+LYR4sANoKXBj3px9drkccMWkSY87bb
/mTNACZdmNiRC+qG3c80ZwsmTKps2yIn+aEojac9TWWyGwsV3HVeIZ87Sxc/
9VMKYtRdO7MvT4NLUI1dDFV+JoXxbgpjoS8eO+iLiy76uDpks/Pmz3nOx8q9
Zz/74/MrrrilJnJv7f5mmxWZQF8sFm92VRrHkcnBZNbuLWr27aiOVVIRII/F
d/vitJcMvvw119y2bjA6ZB8JZaSIPTZPqVYCiexPMtw4US607h5jCePddddd
h2dAuL5AoQ8It5L9mCQxnMTAVgeEqcg00mDhAh/ygB5eBSHLmCBM/qWc/rA2
mjSZrFi+hkF1r2Z71Qa8UILggArygMM5vloL2mNcmzue5fKgCAIo5U5pIHDg
dZByqXjPa4k325c5D3k8J3R8hY1RKGKgG3Cl7xAP/cD4TyYW8CCJjZOzQO+0
OsdbxdkJfXsJQCSmAYc5TJeth8lVwWAgewyOWElaKFfb1LzVQU0LMyk4qQNs
h81sKEwGB9K35QTtZ5QmEXvnioh9yRApK/ZvfXapw+lAEHIRQPDTykQc1eQJ
1ZPzriZ9880394jUeln6kipLN+ZPf/qb5j/4g79WhOd7ijvx0z9NkF5//Xuq
IJ3PvzZ7YFmQIruFIP25AqMVQfrSJkgvvvhPajFHgvSE+jkJ0quuekc1wx9Y
np/BJ5Af0uva42H91CAlQ4IgAowbOZowNemBUMbsH+uR/LMNycUdKjC/bfOY
TqgkjozHfBI5cQDgZClpQTwxnZA9WyC1tiLO2AsoWC7OLQ+KTExIJINK8m8i
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
1ex/+f8ACr2U2A==\
\>"],ExpressionUUID->"ea54ec7f-2100-4975-9f0a-5460aacb9043"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\"\<gdp per capita\>\"", ",", " ", "\"\<land use per purpose\>\"", ",", 
   " ", "\"\<average of country features weighted by city population\>\""}], 
  "}"}]], "Code",
 CellChangeTimes->{{3.771760826418881*^9, 3.7717608351115*^9}, {
  3.77176110080478*^9, 
  3.771761253223016*^9}},ExpressionUUID->"ca9491bf-f8ca-4dd5-92c8-\
05599b18a6f4"],

Cell["Lets compare the land (per purpose) between differen cities", "Text",
 CellChangeTimes->{{3.7716230389171543`*^9, 3.7716230649283113`*^9}, {
  3.771761062410927*^9, 
  3.77176107079777*^9}},ExpressionUUID->"13ca92df-031f-49fc-8d35-\
f0d7e45c8ee7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"recognizedLandUsages", " ", "=", " ", 
   RowBox[{"Keys", "[", "constantColorsPerPurpose", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExtractLandUsages", "[", "city_", "]"}], " ", ":=", " ", 
    RowBox[{"Values", "[", 
     RowBox[{"Lookup", "[", 
      RowBox[{
       RowBox[{"ImportAllFeatures", "[", "city", "]"}], ",", " ", 
       "recognizedLandUsages"}], "]"}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"BarChart", "[", 
  RowBox[{",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Keys", "[", "statsAreaShareByPurpose", "]"}]}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.7716230389171543`*^9, 3.771623065802146*^9}, {
  3.771756378168908*^9, 
  3.77175648119732*^9}},ExpressionUUID->"daeaff8c-13a2-42a2-89c0-\
cc2fb636c1af"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{1613, 832},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
WindowStatusArea->"",
TaggingRules->{"Salvaged" -> True},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 252, 4, 98, "Title",ExpressionUUID->"112c77e2-f45b-4372-906b-a938d28da3f8"],
Cell[CellGroupData[{
Cell[857, 30, 247, 4, 67, "Section",ExpressionUUID->"627737e6-2c67-4101-ba9d-4750ebb8b851"],
Cell[CellGroupData[{
Cell[1129, 38, 165, 3, 54, "Subsection",ExpressionUUID->"15f0bbef-4baf-4ee2-8702-3e0092151fcb"],
Cell[1297, 43, 10864, 272, 718, "Code",ExpressionUUID->"701bc516-4588-4409-bd02-62356ee10634"]
}, Closed]],
Cell[CellGroupData[{
Cell[12198, 320, 167, 3, 38, "Subsection",ExpressionUUID->"c7b8b850-ca31-4d36-a026-92bed76431d7"],
Cell[12368, 325, 4833, 112, 376, "Code",ExpressionUUID->"acdb5163-89af-4011-8610-a985ea22ddfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17238, 442, 157, 3, 54, "Subsection",ExpressionUUID->"04bf9ceb-4ddc-4f18-bf62-54860b3d9d2c"],
Cell[17398, 447, 3541, 77, 186, "Code",ExpressionUUID->"ec5fa737-edff-4f2b-bcf0-57aa61e8bf78"],
Cell[20942, 526, 1903, 49, 186, "Code",ExpressionUUID->"8ed5ec78-3fa7-463b-9bd2-d653f70c8152"],
Cell[22848, 577, 2702, 55, 129, "Code",ExpressionUUID->"b882ea8e-5682-47cf-9153-83ba69c772e2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[25599, 638, 149, 3, 53, "Section",ExpressionUUID->"d8077b51-ac8e-499c-b436-ba87d82ec370"],
Cell[CellGroupData[{
Cell[25773, 645, 168, 3, 54, "Subsection",ExpressionUUID->"a55aa6bd-a1ff-45cc-93a5-6c84f35a1916"],
Cell[25944, 650, 1167, 22, 59, "Text",ExpressionUUID->"c6307c66-135d-4af1-918e-b52e229fb589"],
Cell[27114, 674, 997, 27, 91, "Code",ExpressionUUID->"91c326ad-7848-4177-8dde-105a8fe12ef2"],
Cell[CellGroupData[{
Cell[28136, 705, 1336, 31, 129, "Code",ExpressionUUID->"f85d5967-a3e9-4f75-9fa2-3afed676efbd"],
Cell[29475, 738, 258, 5, 25, "Echo",ExpressionUUID->"a869612b-b2ee-4d84-a562-85335ec05c20"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29782, 749, 165, 3, 54, "Subsection",ExpressionUUID->"465b1624-08c6-46b8-b895-8279679931f7"],
Cell[29950, 754, 915, 15, 58, "Text",ExpressionUUID->"d7112578-2f96-4683-9976-1d246abd738b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30902, 774, 154, 3, 54, "Subsection",ExpressionUUID->"2f76336c-90c6-4404-a8ed-05b071d75f82"],
Cell[CellGroupData[{
Cell[31081, 781, 252, 4, 32, "Item",ExpressionUUID->"05baef06-c3cb-424a-930f-8b34b30e728b"],
Cell[31336, 787, 234, 4, 32, "Item",ExpressionUUID->"2df93a5f-22de-4df8-88b6-7127f99ce05c"],
Cell[31573, 793, 235, 4, 32, "Item",ExpressionUUID->"c1dad0e7-c15d-4951-9b0c-17aadf81c5db"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31869, 804, 209, 4, 67, "Section",ExpressionUUID->"63985375-fa23-4d09-a7dc-b6747739c560"],
Cell[CellGroupData[{
Cell[32103, 812, 131, 3, 54, "Subsection",ExpressionUUID->"fa1920ae-8e54-45ec-83bd-bd9f5d5988ff"],
Cell[32237, 817, 1895, 39, 91, "Code",ExpressionUUID->"4c25a172-1f5e-4ece-a2a0-a28dcc91de33"]
}, Closed]],
Cell[CellGroupData[{
Cell[34169, 861, 175, 3, 38, "Subsection",ExpressionUUID->"ee1bdf2d-8e5c-4019-8ee5-eb9655578edf"],
Cell[34347, 866, 5819, 133, 395, "Code",ExpressionUUID->"28b7f604-9d20-43ee-9c76-9f66715d0077"]
}, Closed]],
Cell[CellGroupData[{
Cell[40203, 1004, 183, 3, 38, "Subsection",ExpressionUUID->"9f81765d-48a1-412b-8f34-7c63eeb70cd0"],
Cell[40389, 1009, 4116, 90, 395, "Code",ExpressionUUID->"2be1d42f-5581-456f-be78-898b6ec8f702"]
}, Closed]],
Cell[CellGroupData[{
Cell[44542, 1104, 166, 3, 38, "Subsection",ExpressionUUID->"1b2b8bb4-d2fd-410a-8140-48381fbfbec1"],
Cell[44711, 1109, 1394, 36, 110, "Code",ExpressionUUID->"da03acf0-69af-4588-bcd3-0685c4ed768e"],
Cell[46108, 1147, 15401, 320, 1155, "Code",ExpressionUUID->"ce916f56-0286-4291-9303-f08a2c807b22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61546, 1472, 197, 3, 54, "Subsection",ExpressionUUID->"fcac805f-54fc-4ed9-8bb5-df26b8e9ddb1"],
Cell[61746, 1477, 8272, 161, 471, "Code",ExpressionUUID->"035f3fac-5785-4fb6-8252-b10aea312ea8"]
}, Closed]],
Cell[CellGroupData[{
Cell[70055, 1643, 185, 3, 38, "Subsection",ExpressionUUID->"3b7d840d-c9fe-49f1-92fe-dd9a50ebd8f8"],
Cell[70243, 1648, 2777, 63, 167, "Code",ExpressionUUID->"b390a3c8-0279-4919-a9b9-ecf0cf3957f6"],
Cell[73023, 1713, 1337, 28, 110, "Code",ExpressionUUID->"c766c488-b0f2-40dd-b6b0-55ce54d425cf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74409, 1747, 231, 4, 67, "Section",ExpressionUUID->"1720891f-8e04-46f0-8ae9-4c3257b2a22a"],
Cell[CellGroupData[{
Cell[74665, 1755, 217, 4, 54, "Subsection",ExpressionUUID->"cd86ce5d-5f3d-4938-a2ae-9d0f8a94ab58"],
Cell[74885, 1761, 6094, 125, 395, "Code",ExpressionUUID->"20961709-7c7a-45d4-a981-9ac2574c6877"]
}, Closed]],
Cell[CellGroupData[{
Cell[81016, 1891, 168, 3, 38, "Subsection",ExpressionUUID->"7fff9ec0-f5cd-48b7-95b6-dc9d704181e7"],
Cell[81187, 1896, 263, 6, 35, "Text",ExpressionUUID->"13349771-2cbd-4640-86e0-2a496adaad4a"],
Cell[81453, 1904, 2524, 45, 91, "Code",ExpressionUUID->"1ba0fedf-ebcf-47e3-8705-8f2f4c11ea50"],
Cell[CellGroupData[{
Cell[84002, 1953, 2597, 46, 91, "Code",ExpressionUUID->"dd94b0a0-2b74-462f-8d54-573d698ec4b3"],
Cell[86602, 2001, 65584, 1257, 796, "Output",ExpressionUUID->"1f38b91a-5cbd-4de6-a6ec-a57cdf902ebe"]
}, Open  ]],
Cell[152201, 3261, 510, 9, 35, "Text",ExpressionUUID->"04da58f6-384a-4c46-83b1-c68f03702b2d"],
Cell[CellGroupData[{
Cell[152736, 3274, 395, 6, 32, "Item",ExpressionUUID->"8273b782-8152-4c65-a372-a95a327c12f8"],
Cell[153134, 3282, 576, 10, 32, "Item",ExpressionUUID->"dab0a11f-845b-437d-9006-e945f823bb62"],
Cell[153713, 3294, 521, 10, 32, "Item",ExpressionUUID->"10c3ba9a-1b25-44ac-b004-784dd96367f6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154295, 3311, 216, 4, 67, "Section",ExpressionUUID->"d1be2ff7-0399-4fec-9761-8befa64c33fd"],
Cell[154514, 3317, 592, 10, 58, "Text",ExpressionUUID->"003a472c-506c-4673-a1ee-f1143a51dc45"],
Cell[CellGroupData[{
Cell[155131, 3331, 421, 6, 32, "Item",ExpressionUUID->"01cd0af1-a154-43b1-ae7a-c758c5a411fe"],
Cell[155555, 3339, 452, 8, 32, "Item",ExpressionUUID->"9a30ddc5-bc72-49bd-8331-58cabe10a247"],
Cell[156010, 3349, 482, 7, 32, "Item",ExpressionUUID->"630be8a5-1594-44a6-b0c5-f1a37f294478"],
Cell[156495, 3358, 441, 6, 32, "Item",ExpressionUUID->"66448db9-7426-4871-8df9-fd48f15ac320"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156973, 3369, 362, 6, 54, "Subsection",ExpressionUUID->"1e314e11-051b-4643-8db0-01d456f6b7b3"],
Cell[157338, 3377, 8259, 166, 490, "Code",ExpressionUUID->"d54f38e5-c079-43b6-a6e9-599471a76047"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165634, 3548, 168, 3, 54, "Subsection",ExpressionUUID->"39f53ecd-769c-48bb-b96c-c03fe6430a5e"],
Cell[165805, 3553, 2791, 66, 90, "Code",ExpressionUUID->"b7ccaacb-4cae-4131-83bc-5988196d0d69"],
Cell[168599, 3621, 872, 20, 91, "Code",ExpressionUUID->"bb173c12-eb58-4893-8cd5-1c15ce24398b"],
Cell[169474, 3643, 1963, 49, 110, "Code",ExpressionUUID->"e777ef22-5b22-4321-919b-5b5a555a01a8"],
Cell[CellGroupData[{
Cell[171462, 3696, 747, 16, 52, "Code",ExpressionUUID->"f41349f5-ce2c-42a4-936d-e2e8197ee805"],
Cell[172212, 3714, 300215, 5994, 517, "Output",ExpressionUUID->"98f805b1-67c5-4bb7-aeb6-4b29d88710e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472464, 9713, 739, 15, 52, "Code",ExpressionUUID->"a1ee4fab-ca0a-476a-939e-0d3ea134d579"],
Cell[473206, 9730, 170193, 2802, 380, 55496, 922, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"1818de11-b2ee-46d6-8f2a-0845f19dbc13"]
}, Open  ]],
Cell[643414, 12535, 1588, 35, 129, "Code",ExpressionUUID->"781b6f9a-1a76-4110-bb44-e1b121164761"],
Cell[CellGroupData[{
Cell[645027, 12574, 393, 7, 52, "Code",ExpressionUUID->"96017ae7-f811-4369-84f3-ccf0a0254f5b"],
Cell[645423, 12583, 63038, 1553, 192, "Output",ExpressionUUID->"419c4db3-9630-485b-9d51-e62d74b36b65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[708498, 14141, 739, 15, 52, "Code",ExpressionUUID->"836daa6d-8de7-45ed-9d10-01d7dbdf13ab"],
Cell[709240, 14158, 277951, 6359, 219, "Output",ExpressionUUID->"e207a8fb-0631-4ee7-a5ef-8d2291c07043"]
}, Open  ]],
Cell[CellGroupData[{
Cell[987228, 20522, 472, 12, 52, "Code",ExpressionUUID->"d1896f4b-d0b8-4a6f-9935-9e74f8ba475e"],
Cell[987703, 20536, 207, 3, 34, "Output",ExpressionUUID->"6650b35b-e979-42e1-9de6-f5ce912e26df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[987959, 20545, 161, 3, 54, "Subsection",ExpressionUUID->"161c4b84-42ee-4e02-ba4d-49076cf421f9"],
Cell[CellGroupData[{
Cell[988145, 20552, 239, 6, 32, "Item",ExpressionUUID->"b1fb0052-c812-4c32-9314-613d76f209ae"],
Cell[988387, 20560, 290, 6, 32, "Item",ExpressionUUID->"0c7f419c-d673-4c0f-9768-cab683c6749d"],
Cell[988680, 20568, 216, 5, 32, "Item",ExpressionUUID->"6af5b0fc-e0ad-428a-bf06-19c09147d278"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[988957, 20580, 216, 4, 67, "Section",ExpressionUUID->"50d2f7c6-3d90-4674-8c7d-134ca91d9f53"],
Cell[989176, 20586, 409, 8, 58, "Text",ExpressionUUID->"48da48be-3356-45b9-96b0-65578a69064f"],
Cell[CellGroupData[{
Cell[989610, 20598, 153, 3, 54, "Subsection",ExpressionUUID->"c3071551-c538-4e23-a9ff-aeaae2cb1355"],
Cell[989766, 20603, 1122, 26, 110, "Code",ExpressionUUID->"b3ef612e-213d-4424-ab69-0f6a32ff097c"],
Cell[990891, 20631, 1436, 34, 72, "Code",ExpressionUUID->"3dc86f4f-ab41-4a3b-a7fc-d050a07843dd"],
Cell[992330, 20667, 1276, 27, 91, "Code",ExpressionUUID->"c345457d-adc3-4886-82ee-570b19476758"],
Cell[993609, 20696, 1360, 29, 91, "Code",ExpressionUUID->"dca30a8c-da2c-4c72-a317-5b189a17c869"]
}, Open  ]],
Cell[CellGroupData[{
Cell[995006, 20730, 215, 4, 54, "Subsection",ExpressionUUID->"d0f91c15-f044-48eb-9e34-777ac2da01e6"],
Cell[995224, 20736, 928, 14, 81, "Text",ExpressionUUID->"a4f6ead6-2c1e-48b4-be6a-e97c3e48071d"],
Cell[CellGroupData[{
Cell[996177, 20754, 1966, 49, 129, "Code",ExpressionUUID->"8eb4279a-1f74-4ac8-9b4d-7a561e752984"],
Cell[998146, 20805, 584256, 10711, 75, "Output",ExpressionUUID->"852a8ecc-2c1b-4f07-b637-9308c09b0413"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1582463, 31523, 171, 3, 67, "Section",ExpressionUUID->"af2e4d91-ccd2-4f87-bc80-5035ab5bf083"],
Cell[1582637, 31528, 411, 8, 35, "Text",ExpressionUUID->"0d903749-6bc3-432d-9248-120708078057"],
Cell[1583051, 31538, 521, 11, 52, "Code",ExpressionUUID->"01e18503-62cd-49aa-8cb9-9ff0949c465a"],
Cell[1583575, 31551, 980, 21, 72, "Code",ExpressionUUID->"582b48cd-780f-429f-bd04-3042d9bbe6c7"],
Cell[1584558, 31574, 608, 15, 72, "Code",ExpressionUUID->"b0946a50-e66a-4b86-b6fc-0b47fafe6dbd"],
Cell[1585169, 31591, 1574, 40, 72, "Code",ExpressionUUID->"f6c95bf9-aecc-4d5a-ac44-c8478261efb9"],
Cell[CellGroupData[{
Cell[1586768, 31635, 931, 21, 110, "Code",ExpressionUUID->"2a8c6f62-3e57-409b-8b8e-0916524b756d"],
Cell[1587702, 31658, 128030, 3019, 481, "Output",ExpressionUUID->"c18a7b5c-6841-4bb4-9fcf-1f10377d34db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1715769, 34682, 482, 10, 52, "Code",ExpressionUUID->"eee9f708-8858-4445-a590-eb39462adcc6"],
Cell[1716254, 34694, 144300, 2875, 569, 62069, 1526, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"ea54ec7f-2100-4975-9f0a-5460aacb9043"]
}, Open  ]],
Cell[1860569, 37572, 383, 9, 52, "Code",ExpressionUUID->"ca9491bf-f8ca-4dd5-92c8-05599b18a6f4"],
Cell[1860955, 37583, 253, 4, 35, "Text",ExpressionUUID->"13ca92df-031f-49fc-8d35-f0d7e45c8ee7"],
Cell[1861211, 37589, 851, 21, 110, "Code",ExpressionUUID->"daeaff8c-13a2-42a2-89c0-cc2fb636c1af"]
}, Open  ]]
}, Open  ]]
}
]
*)

