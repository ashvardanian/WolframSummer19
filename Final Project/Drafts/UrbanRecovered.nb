(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1375675,      25757]
NotebookOptionsPosition[   1367613,      25632]
NotebookOutlinePosition[   1367988,      25648]
CellTagsIndexPosition[   1367945,      25645]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Impact of Urban Design on Quality of Life", "Title",
 CellChangeTimes->{{3.771101273954318*^9, 
  3.771101323714347*^9}},ExpressionUUID->"112c77e2-f45b-4372-906b-\
a938d28da3f8"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Intro", "Subtitle"]], "Section",
 CellChangeTimes->{{3.771101273954318*^9, 
  3.771101340757436*^9}},ExpressionUUID->"2f1f3b8e-3200-48b9-b773-\
a77a1c396b17"],

Cell[TextData[StyleBox["Most of the population around the globe is now \
concentrated in cities. There are around 2 dozens urban areas with \
populations exceeding 10 million people, but we still fail to quantify the \
influence of various aspects of urban design on the quality of life.\nThis \
work is a stepping stone in that direction.", "Text"]], "Text",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 
  3.7711015405664473`*^9}},ExpressionUUID->"c6307c66-135d-4af1-918e-\
b52e229fb589"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["What is quality of life?", "Subtitle"]], "Chapter",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 
  3.7711017087241497`*^9}},ExpressionUUID->"ac13fabb-576a-4a4b-8847-\
2bb61f653aef"],

Cell["\<\
This is a very non-trivial question and we are not going to answer it in this \
work. Instead we will define a very simple approximation of quality of life \
as average sentiment across Tweets related to that specific city.\
\>", "Text",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 3.771101723293976*^9}, {3.7711024759486427`*^9, 
  3.771102550634573*^9}},ExpressionUUID->"d7112578-2f96-4683-9976-\
1d246abd738b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"EstimateSentimentWL", "[", "sentence_String", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "probs", ",", " ", "pPos", ",", " ", "pNeu", ",", " ", "pNeg", ",", " ",
        "resultPositivness", ",", " ", "resultCertainity"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"probs", " ", "=", " ", 
       RowBox[{"Classify", "[", 
        RowBox[{
        "\"\<Sentiment\>\"", ",", " ", "sentence", ",", " ", 
         "\"\<Probabilities\>\""}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"pPos", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"probs", ",", " ", "\"\<Positive\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"pNeu", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"probs", ",", " ", "\"\<Neutral\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"pNeg", " ", "=", " ", 
       RowBox[{"Lookup", "[", 
        RowBox[{"probs", ",", " ", "\"\<Negative\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"resultPositivness", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"pPos", " ", "+", " ", 
         RowBox[{"pNeu", " ", "*", " ", "0.5"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"resultCertainity", " ", "=", " ", 
       RowBox[{"Max", "[", "probs", "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"{", 
       RowBox[{"resultPositivness", ",", "resultCertainity"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EstimateSentiments", "[", 
    RowBox[{"sentences_", ",", " ", "func_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"#", ",", " ", 
         RowBox[{"func", "[", "#", "]"}]}], "}"}], ")"}], " ", "&"}], ",", 
     " ", "sentences"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EstimateSentiments", "[", "sentences_", "]"}], " ", ":=", " ", 
   RowBox[{"EstimateSentiments", "[", 
    RowBox[{"sentences", ",", " ", "EstimateSentimentWL"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EstimateQualityOfLifeWSentiment", "[", "data_", "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "sentences", ",", " ", "tweetsWSentiments", ",", " ", 
        "sentimentsWCertainity", ",", " ", "meanPositivness", ",", " ", 
        "meanCertainty"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"sentences", " ", "=", " ", 
        RowBox[{"data", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "\"\<Text\>\""}], 
         "\[RightDoubleBracket]"}]}], ";", "\n", "\t", 
       RowBox[{"tweetsWSentiments", " ", "=", " ", 
        RowBox[{"EstimateSentiments", "[", "sentences", "]"}]}], ";", "\n", 
       "\t", 
       RowBox[{"sentimentsWCertainity", " ", "=", " ", 
        RowBox[{"tweetsWSentiments", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], ";", 
       "\n", "\t", 
       RowBox[{"meanPositivness", " ", "=", " ", 
        RowBox[{"MeanAround", "[", 
         RowBox[{"sentimentsWCertainity", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"meanCertainty", " ", "=", " ", 
        RowBox[{"MeanAround", "[", 
         RowBox[{"sentimentsWCertainity", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
       ";", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"meanPositivness", ",", " ", "meanCertainty"}], "}"}]}]}], 
     "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AssociationKeyRename", "[", 
     RowBox[{"a_", ",", " ", 
      RowBox[{"old_", " ", "->", " ", "new_"}]}], "]"}], " ", "/;", " ", 
    RowBox[{"KeyExistsQ", "[", 
     RowBox[{"a", ",", " ", "old"}], "]"}]}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"KeyDrop", "[", "old", "]"}], " ", "@", " ", 
    RowBox[{"Append", "[", 
     RowBox[{"a", ",", " ", 
      RowBox[{"new", " ", "->", " ", 
       RowBox[{"a", "[", "old", "]"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AssociationFromPair", "[", "strAndNum_List", "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{
    "strAndNum", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
    "\[Rule]", " ", 
    RowBox[{
    "strAndNum", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"AssociationsFromPair", "[", 
    RowBox[{"keys_List", ",", " ", "vals_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#1", " ", "\[Rule]", " ", "#2"}], ")"}], " ", "&"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"keys", ",", " ", "vals"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RangeMakeAround", "[", 
    RowBox[{"num_Integer", ",", " ", "delta_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"num", " ", "-", " ", "delta"}], ",", " ", 
     RowBox[{"num", " ", "+", " ", "delta"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_Integer", "]"}], " ", ":=", " ", 
   "number"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_Real", "]"}], " ", ":=", " ", 
   "number"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_List", "]"}], " ", ":=", " ", 
   RowBox[{"number", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_Quantity", "]"}], " ", ":=", " ", 
   RowBox[{"QuantityMagnitude", "[", "number", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"NomalizeNumber", "[", "number_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RescaleIntoInterval", "[", 
    RowBox[{
    "numbers_List", ",", " ", "numberNewSmallest_", ",", " ", 
     "numberNewLargest_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#", " ", "*", " ", 
         RowBox[{"(", 
          RowBox[{"numberNewLargest", " ", "-", " ", "numberNewSmallest"}], 
          ")"}]}], " ", "+", " ", "numberNewSmallest"}], ")"}], " ", "&"}], 
     ",", " ", 
     RowBox[{"Rescale", "[", "numbers", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RescaleIntoInterval", "[", "numbers_List", "]"}], " ", ":=", " ", 
    RowBox[{"RescaleIntoInterval", "[", 
     RowBox[{"numbers", ",", " ", "0.5", ",", " ", "0.95"}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorsFindInImage", "[", 
    RowBox[{"imgPixels_List", ",", " ", "colors_List"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Position", "[", 
          RowBox[{"imgPixels", ",", " ", "#"}], "]"}], ")"}], " ", "&"}], ",",
        " ", "colors"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{
    "redVals_List", ",", " ", "greenVals_List", ",", " ", "blueVals_List"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Tuples", "[", 
    RowBox[{"{", 
     RowBox[{"redVals", ",", " ", "greenVals", ",", " ", "blueVals", ",", " ", 
      RowBox[{"{", " ", "255", " ", "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{
    "red_Integer", ",", " ", "green_Integer", ",", " ", "blue_Integer", ",", 
     " ", "delta_Integer"}], "]"}], " ", ":=", " ", 
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{
     RowBox[{"RangeMakeAround", "[", 
      RowBox[{"red", ",", " ", "delta"}], "]"}], ",", 
     RowBox[{"RangeMakeAround", "[", 
      RowBox[{"green", ",", " ", "delta"}], "]"}], ",", 
     RowBox[{"RangeMakeAround", "[", 
      RowBox[{"blue", ",", " ", "delta"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{"grey_Integer", ",", " ", "delta_Integer"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"ColorsMakeShade", "[", 
    RowBox[{"grey", ",", " ", "grey", ",", " ", "grey", ",", " ", "delta"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ColorMake", "[", 
    RowBox[{"r_", ",", "g_", ",", "b_"}], "]"}], " ", ":=", " ", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"r", "/", "255"}], ",", " ", 
     RowBox[{"g", "/", "255"}], ",", " ", 
     RowBox[{"b", "/", "255"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ColorMake", "[", "parts_List", "]"}], " ", ":=", " ", 
    RowBox[{"ColorMake", "[", 
     RowBox[{
      RowBox[{"parts", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
       ",", " ", 
      RowBox[{"parts", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
       ",", " ", 
      RowBox[{
      "parts", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"EqualizeImages", "[", "imgs_List", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"smallestW", ",", " ", "smallestH", ",", " ", "sizes"}], "}"}], 
     ",", "\n", "\t", 
     RowBox[{
      RowBox[{"sizes", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"ImageDimensions", ",", " ", "imgs"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"smallestW", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"sizes", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"smallestH", " ", "=", " ", 
       RowBox[{"Min", "[", 
        RowBox[{"sizes", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageCrop", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"{", 
            RowBox[{"smallestW", ",", " ", "smallestH"}], "}"}]}], "]"}], " ",
          "&"}], ",", " ", "imgs"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MapReconstructFromImages", "[", "imgs_List", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cntSide", ",", " ", "imgsTable"}], "}"}], ",", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"cntSide", " ", "=", " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Length", "[", "imgs", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"imgsTable", " ", "=", " ", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{"imgs", ",", " ", 
         RowBox[{"{", 
          RowBox[{"cntSide", ",", "cntSide"}], "}"}]}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"ImageAssemble", "[", "imgsTable", "]"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101723293976*^9}, {3.7711024759486427`*^9, 
   3.771102595812048*^9}, 3.771102630105879*^9, {3.771102663030601*^9, 
   3.771102675942957*^9}, {3.771102819347427*^9, 3.771102841217803*^9}, {
   3.7711492274460793`*^9, 3.771149259526984*^9}, {3.7711494968232927`*^9, 
   3.771149500439412*^9}, 3.7711495391273327`*^9, {3.77125210524156*^9, 
   3.7712521814760447`*^9}, {3.771252249246994*^9, 3.771252279427402*^9}, {
   3.7712523472315397`*^9, 3.771252349510272*^9}, {3.7713308537177467`*^9, 
   3.771330854042081*^9}, {3.771351310412696*^9, 3.771351311048148*^9}, {
   3.771352532684317*^9, 3.771352549949391*^9}, {3.771356337886156*^9, 
   3.771356338115733*^9}, {3.7714467936655684`*^9, 3.7714468327252817`*^9}, {
   3.7714477080950613`*^9, 3.771447709078145*^9}, {3.771447785236917*^9, 
   3.771447786651771*^9}, {3.771447949999405*^9, 3.7714479501103563`*^9}, {
   3.771453850679749*^9, 3.771453858089093*^9}, {3.7714943916639833`*^9, 
   3.771494395261273*^9}, {3.771603230447397*^9, 3.771603276204214*^9}, {
   3.77162270325916*^9, 3.771622703769059*^9}, {3.7716720354592876`*^9, 
   3.7716720953478203`*^9}, {3.771672415887467*^9, 3.771672441238475*^9}, {
   3.771672951222991*^9, 3.771672957381604*^9}, {3.7716730265330887`*^9, 
   3.771673027357678*^9}, {3.771673226849732*^9, 3.771673231141677*^9}, {
   3.771673519358794*^9, 3.7716736310995073`*^9}, {3.771691685199237*^9, 
   3.771691693779365*^9}, {3.771691831795059*^9, 3.771691867469315*^9}, {
   3.771691971381495*^9, 3.77169197881502*^9}, {3.771692016649796*^9, 
   3.771692046537582*^9}, {3.771692397520424*^9, 3.7716923999690723`*^9}, {
   3.771692660468504*^9, 3.771692762738967*^9}, {3.7716928504906797`*^9, 
   3.7716928766927843`*^9}, {3.771693062356737*^9, 3.771693078588234*^9}, {
   3.771693618478825*^9, 3.771693675965167*^9}, {3.771693772415101*^9, 
   3.771693808300001*^9}, {3.7716938646087313`*^9, 3.7716938728069553`*^9}, {
   3.7716939585609303`*^9, 3.771693982168026*^9}, {3.771695280962672*^9, 
   3.771695307549501*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"20961709-7c7a-45d4-a981-9ac2574c6877"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Which regions are we going to analyze?", \
"Subtitle"]], "Chapter",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 
  3.7711017068335447`*^9}},ExpressionUUID->"684ffadd-38af-4be8-83bf-\
99937c2f50b6"],

Cell["rer", "Text",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 3.771101735714161*^9}, {3.771101948449766*^9, 
  3.771101949271914*^9}, {3.7711027061183147`*^9, 3.771102706518423*^9}, {
  3.7712515519242563`*^9, 
  3.7712515525752573`*^9}},ExpressionUUID->"2c0225ee-0b7c-4924-8b64-\
a72ab5040bfe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "constantDirectory", " ", "=", " ", 
   "\"\</Users/ashvardanian/CodeMine/WolframSummer19\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantPathTweets", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{"constantDirectory", ",", " ", "\"\</Data/Tweets\>\""}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantPathFeatures", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{"constantDirectory", ",", " ", "\"\</Data/Features\>\""}], "}"}],
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantPathMaps", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{"constantDirectory", ",", " ", "\"\</Data/Maps\>\""}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantPathSatellites", " ", "=", " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{"constantDirectory", ",", " ", "\"\</Data/Satellites\>\""}], 
     "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantCityDiameterKM", " ", "=", " ", "10"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantCityGridSize", " ", "=", " ", "5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"constantShareTraining", " ", "=", " ", "0.9"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"constantColorsPerPurpose", " ", "=", " ", 
    RowBox[{"Association", "[", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{"\"\<Street\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"254", ",", "254", ",", "254"}], "}"}], "}"}]}], ",", " ", 
       "\n", "\t", 
       RowBox[{"\"\<Highway\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"232", ",", "208", ",", "174"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"227", ",", "160", ",", "54"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"242", ",", "196", ",", "99"}], "}"}]}], "}"}]}], ",", 
       "\n", "\t", 
       RowBox[{"\"\<Water\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"158", ",", "197", ",", "226"}], "}"}], "}"}]}], ",", "\n", 
       "\t", 
       RowBox[{"\"\<Park\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"201", ",", "224", ",", "185"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"196", ",", "211", ",", "192"}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{"walking", " ", "trails"}], "*)"}], "}"}]}], ",", "\n", 
       "\t", 
       RowBox[{"\"\<Train\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"148", ",", "148", ",", "148"}], "}"}], "}"}]}], ",", "\n", 
       "\t", 
       RowBox[{"\"\<Interesting\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"251", ",", "248", ",", "228"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"240", ",", "236", ",", "228"}], "}"}]}], 
         RowBox[{"(*", "sports", "*)"}], "}"}]}], ",", "\n", "\t", 
       RowBox[{"\"\<Building\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"232", ",", "226", ",", "212"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"235", ",", "233", ",", "231"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"192", ",", "186", ",", "175"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"207", ",", "200", ",", "188"}], "}"}]}], "}"}]}], ",", 
       "\n", "\t", 
       RowBox[{"\"\<Annotations\>\"", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"69", ",", "69", ",", "69"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"117", ",", "117", ",", "117"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"63", ",", "63", ",", "63"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"88", ",", "88", ",", "88"}], "}"}]}], "}"}]}]}], "\n", 
      "}"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", "\n", 
   RowBox[{
    RowBox[{"Ordered", " ", "list", " ", "of", " ", 
     RowBox[{"cities", ":", " ", "https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "timeout", ".", "com"}], "/", "things"}], "-", "to",
      "-", 
     RowBox[{"do", "/", "best"}], "-", "cities", "-", "in", "-", "the", "-", 
     RowBox[{
     "world", " ", "\n", "Other", " ", "lists", " ", "can", " ", "be", " ", 
      "found", " ", "in", " ", 
      RowBox[{"\"\<CitiesLists.nb\>\"", "."}]}]}]}], "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityRowParse", "[", "cityRow_List", "]"}], " ", ":=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}], "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{
        "cityRow", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", " ", "\"\<, \>\"", ",", " ", 
        RowBox[{
        "cityRow", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
       "]"}], "]"}], ",", " ", 
     RowBox[{
     "cityRow", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], " ",
     "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesWRanks", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"CityRowParse", ",", " ", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{
       "Import", "[", 
        "\"\</Users/ashvardanian/CodeMine/WolframSummer19/Data/Inputs/\
CitiesMercer2019.csv\>\"", "]"}], ",", " ", "1"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"citiesPopular", " ", "=", " ", 
    RowBox[{"citiesWRanks", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityName", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"EntityValue", "[", 
    RowBox[{"city", ",", " ", "\"\<Name\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityBoundsAround", "[", "cityCenter_", "]"}], " ", ":=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"GeoBoundingBox", "[", 
     RowBox[{"cityCenter", ",", " ", 
      RowBox[{"Quantity", "[", 
       RowBox[{"constantCityDiameterKM", ",", " ", "\"\<Kilometers\>\""}], 
       "]"}]}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityBounds", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"CityBoundsAround", "[", 
    RowBox[{"GeoCenter", "[", "city", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityDataPath", "[", 
    RowBox[{"directory_String", ",", " ", "city_String"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "directory", ",", " ", "\"\</\>\"", ",", " ", "city", ",", " ", 
      "\"\<.mx\>\""}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CityDataPath", "[", 
    RowBox[{"directory_String", ",", " ", "city_"}], "]"}], " ", ":=", " ", 
   RowBox[{"CityDataPath", "[", 
    RowBox[{"directory", ",", " ", 
     RowBox[{"CityName", "[", "city", "]"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101735714161*^9}, {3.771101948449766*^9, 
   3.771101949271914*^9}, {3.7711027061183147`*^9, 3.771102789628256*^9}, {
   3.7711028769656677`*^9, 3.77110295393472*^9}, {3.771165070091775*^9, 
   3.7711650854638367`*^9}, 3.771165246245709*^9, {3.771198271950489*^9, 
   3.771198276482582*^9}, {3.771254152194386*^9, 3.771254159439356*^9}, {
   3.771255141608494*^9, 3.771255185697196*^9}, {3.7712555473089733`*^9, 
   3.771255547533888*^9}, {3.771255652408498*^9, 3.771255664396275*^9}, {
   3.771255707871517*^9, 3.7712557437705793`*^9}, {3.7713263576960297`*^9, 
   3.771326502260768*^9}, {3.771620294508806*^9, 3.7716203042475853`*^9}, {
   3.771622750063384*^9, 3.771622769400876*^9}, {3.7716233651292887`*^9, 
   3.7716234318215*^9}, {3.771670567290987*^9, 3.7716705676824827`*^9}, {
   3.771670646327095*^9, 3.77167064676192*^9}, {3.7716952524589643`*^9, 
   3.7716952557287903`*^9}, {3.771695648533807*^9, 3.7716956553990297`*^9}, {
   3.771696254457182*^9, 3.771696265487063*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"acdb5163-89af-4011-8610-a985ea22ddfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Collecting data!", "Subtitle"]], "Chapter",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 3.7711017068335447`*^9}, {3.771670664729755*^9, 
  3.7716706691030207`*^9}},ExpressionUUID->"f13af7f9-8d60-4430-b05b-\
364fe3261edc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractTweets", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"tw", "[", 
     RowBox[{"\"\<TweetSearch\>\"", ",", " ", 
      RowBox[{"\"\<Query\>\"", "\[Rule]", 
       RowBox[{"CityName", "[", "city", "]"}]}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportTweets", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"CityDataPath", "[", 
      RowBox[{"constantPathTweets", ",", " ", "city"}], "]"}], ",", 
     RowBox[{"ExtractTweets", "[", "city", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportTweets", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"CityDataPath", "[", 
     RowBox[{"constantPathTweets", ",", " ", "city"}], "]"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{
  3.771103114668171*^9, {3.771103336765457*^9, 3.771103338095792*^9}, {
   3.771103900064671*^9, 3.771103953970173*^9}, {3.771104192105047*^9, 
   3.771104206425777*^9}, {3.771104623555089*^9, 3.771104634861293*^9}, {
   3.771104668974058*^9, 3.771104690035036*^9}, {3.7711047224932117`*^9, 
   3.771104799500358*^9}, {3.771104931900667*^9, 3.771104987366683*^9}, {
   3.771105022012245*^9, 3.771105218274828*^9}, 3.771105264350816*^9, {
   3.771150962719131*^9, 3.771150964531691*^9}, {3.771151012996887*^9, 
   3.7711510150931873`*^9}, {3.7711511401199427`*^9, 3.771151202612028*^9}, 
   3.771162598734274*^9, 3.77119823213085*^9, {3.7711984660326853`*^9, 
   3.771198471548006*^9}, {3.771255195206545*^9, 3.771255221452676*^9}, {
   3.77133068176521*^9, 3.771330710916729*^9}, {3.771330744590096*^9, 
   3.771330840917815*^9}, {3.771364487765592*^9, 3.771364489560156*^9}, {
   3.771448657237996*^9, 3.771448658832782*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"4c25a172-1f5e-4ece-a2a0-a28dcc91de33"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractMapsGrid", "[", 
    RowBox[{"city_", ",", " ", "cityCenter_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cityBounds", ",", " ", "gridLats", ",", " ", "gridLons", ",", " ", 
       "cityParts", ",", " ", "MakeCell"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"cityBounds", " ", "=", " ", 
       RowBox[{"CityBoundsAround", "[", "cityCenter", "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"gridLats", " ", "=", " ", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         RowBox[{"Latitude", "[", 
          RowBox[{
          "cityBounds", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"Latitude", "[", 
          RowBox[{
          "cityBounds", "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}], "]"}], ",", " ", 
         RowBox[{"constantCityGridSize", "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"gridLons", " ", "=", " ", 
       RowBox[{"Subdivide", "[", 
        RowBox[{
         RowBox[{"Longitude", "[", 
          RowBox[{
          "cityBounds", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], "]"}], ",", 
         RowBox[{"Longitude", "[", 
          RowBox[{
          "cityBounds", "\[LeftDoubleBracket]", "2", 
           "\[RightDoubleBracket]"}], "]"}], ",", " ", 
         RowBox[{"constantCityGridSize", "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"MakeCell", "[", 
        RowBox[{"i_Integer", ",", " ", "j_Integer"}], "]"}], " ", ":=", " ", 
       RowBox[{"GeoRange", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "gridLats", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            ",", " ", 
           RowBox[{"gridLats", "\[LeftDoubleBracket]", 
            RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "gridLons", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}],
            ",", " ", 
           RowBox[{"gridLons", "\[LeftDoubleBracket]", 
            RowBox[{"j", "+", "1"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"cityParts", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"MakeCell", "[", 
           RowBox[{"i", ",", " ", "j"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "constantCityGridSize"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"j", ",", " ", "constantCityGridSize"}], "}"}]}], "]"}], 
        "]"}]}], ";", "\n", "\t", "cityParts"}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractMaps", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cityParts", ",", " ", "cityCenter", ",", " ", "ImageForCell"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"cityCenter", " ", "=", " ", 
       RowBox[{"GeoPosition", "[", "city", "]"}]}], ";", "\n", "\t", 
      RowBox[{"cityParts", " ", "=", " ", 
       RowBox[{"ExtractMapsGrid", "[", 
        RowBox[{"city", ",", " ", "cityCenter"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"ImageForCell", "[", "coords_", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "coordsAsList", "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"coordsAsList", " ", "=", " ", 
           RowBox[{"List", " ", "@@", " ", "coords"}]}], ";", "\n", "\t\t", 
          RowBox[{"Image", "[", 
           RowBox[{"GeoGraphics", "[", 
            RowBox[{"GeoRange", "\[Rule]", "coordsAsList"}], "]"}], "]"}]}]}],
         "\n", "\t", "]"}]}], ";", "\n", "\t", 
      RowBox[{"EqualizeImages", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"ImageForCell", ",", " ", "cityParts"}], "]"}], "]"}]}]}], 
    "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportMaps", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"CityDataPath", "[", 
      RowBox[{"constantPathMaps", ",", " ", "city"}], "]"}], ",", 
     RowBox[{"ExtractMaps", "[", "city", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportMaps", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"CityDataPath", "[", 
     RowBox[{"constantPathMaps", ",", " ", "city"}], "]"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771255003628858*^9, 3.771255019385186*^9}, {
   3.771255054782916*^9, 3.7712550927175417`*^9}, {3.771255236405387*^9, 
   3.771255264912755*^9}, 3.771255515444641*^9, 3.771255703381096*^9, {
   3.771255752389967*^9, 3.771255777900586*^9}, {3.771255850554541*^9, 
   3.771255853952383*^9}, {3.771329317484642*^9, 3.771329333383959*^9}, {
   3.771329577085322*^9, 3.771329588111939*^9}, 3.7713311687251*^9, {
   3.771585825750794*^9, 3.771585835461856*^9}, {3.7715858909152803`*^9, 
   3.771585900586632*^9}, 3.771585932346272*^9, {3.7715860171344767`*^9, 
   3.7715860713139353`*^9}, {3.771586365243346*^9, 3.771586405924994*^9}, {
   3.771603548460307*^9, 3.771603652291589*^9}, {3.771603725684588*^9, 
   3.771603728770176*^9}, {3.771604534741798*^9, 3.7716046078725767`*^9}, {
   3.771605072996415*^9, 3.771605073369802*^9}, {3.7716051056407633`*^9, 
   3.771605106401538*^9}, {3.771623340038671*^9, 3.7716233434193363`*^9}, {
   3.771623510161605*^9, 3.771623529899592*^9}, {3.771673674224918*^9, 
   3.7716736753418007`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"28b7f604-9d20-43ee-9c76-9f66715d0077"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractSatellites", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cityCenter", ",", " ", "cityParts", ",", " ", "ImageForCell"}],
       "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"cityCenter", " ", "=", " ", 
       RowBox[{"GeoPosition", "[", "city", "]"}]}], ";", "\n", "\t", 
      RowBox[{"cityParts", " ", "=", " ", 
       RowBox[{"ExtractMapsGrid", "[", 
        RowBox[{"city", ",", " ", "cityCenter"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{
       RowBox[{"ImageForCell", "[", 
        RowBox[{"coords_", ",", " ", "rotation_Real"}], "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "coordsAsList", "}"}], ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"coordsAsList", " ", "=", " ", 
           RowBox[{"List", " ", "@@", " ", "coords"}]}], ";", "\n", "\t\t", 
          RowBox[{"Image", "[", 
           RowBox[{"GeoGraphics", "[", "\n", "                ", 
            RowBox[{
             RowBox[{"GeoRange", " ", "\[Rule]", " ", "coordsAsList"}], ",", 
             " ", "\n", "                ", 
             RowBox[{"GeoProjection", " ", "\[Rule]", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<ObliqueMercator\>\"", ",", " ", 
                RowBox[{"\"\<Centering\>\"", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"cityCenter", ",", " ", "rotation"}], "}"}]}]}], 
               "}"}]}], ",", "\n", "                ", 
             RowBox[{"GeoBackground", " ", "\[Rule]", " ", 
              RowBox[{"GeoStyling", "[", "\"\<StreetMap\>\"", "]"}]}], ",", 
             " ", "\n", "                ", 
             RowBox[{
             "GeoServer", " ", "\[Rule]", " ", 
              "\"\<http://mt0.google.com/vt/lyrs=s,h&x=`2`&y=`3`&z=`1`\>\""}]}\
], "]"}], "]"}]}]}], "\n", "\t", "]"}]}], ";", "\n", "\t", 
      RowBox[{"EqualizeImages", "[", 
       RowBox[{"Join", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ImageForCell", "[", 
             RowBox[{"#", ",", " ", "30.0"}], "]"}], " ", "&"}], ",", " ", 
           "cityParts"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ImageForCell", "[", 
             RowBox[{"#", ",", " ", "45.0"}], "]"}], " ", "&"}], ",", " ", 
           "cityParts"}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ImageForCell", "[", 
             RowBox[{"#", ",", " ", "90.0"}], "]"}], " ", "&"}], ",", " ", 
           "cityParts"}], "]"}]}], "\n", "\t", "]"}], "]"}]}]}], "\n", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportSatellites", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"CityDataPath", "[", 
      RowBox[{"constantPathSatellites", ",", " ", "city"}], "]"}], ",", 
     RowBox[{"ExtractSatellites", "[", "city", "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportSatellites", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"CityDataPath", "[", 
     RowBox[{"constantPathSatellites", ",", " ", "city"}], "]"}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.7716037334248238`*^9, 3.771603763020352*^9}, {
   3.771603881125678*^9, 3.771603882562314*^9}, {3.771604351561441*^9, 
   3.771604362272173*^9}, {3.771604462858472*^9, 3.771604465769896*^9}, {
   3.771605111366535*^9, 3.7716051235802097`*^9}, {3.771618696238031*^9, 
   3.771618737002274*^9}, {3.7716190984180727`*^9, 3.771619167787113*^9}, {
   3.771619230094412*^9, 3.7716193140816317`*^9}, {3.7716194420009613`*^9, 
   3.7716194491737347`*^9}, 3.771619497044444*^9, {3.771619699793701*^9, 
   3.771619711850318*^9}, {3.7716203262336597`*^9, 3.771620356834854*^9}, {
   3.771673684187669*^9, 3.771673685879765*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"2be1d42f-5581-456f-be78-898b6ec8f702"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ExtractListFeatures", "[", 
    RowBox[{"object_", ",", " ", "props_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Normal", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"{", 
         RowBox[{"#", ",", " ", 
          RowBox[{"Normal", "[", 
           RowBox[{"object", "[", "#", "]"}], "]"}]}], "}"}], ")"}], " ", 
       "&"}], ",", " ", "props"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractCityStatsFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "props", "}"}], ",", " ", "\n", "\t", 
     RowBox[{
      RowBox[{"props", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
        "\"\<Population\>\"", ",", "\"\<Latitude\>\"", ",", 
         "\"\<Longitude\>\"", ",", "\"\<Elevation\>\"", ",", 
         "\"\<MagneticFieldStrength\>\""}], "\n", "\t", "}"}]}], ";", "\n", 
      "\t", 
      RowBox[{"Association", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"AssociationFromPair", ",", " ", 
         RowBox[{"ExtractListFeatures", "[", 
          RowBox[{"city", ",", " ", "props"}], "]"}]}], "]"}], "]"}]}]}], 
    "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractCountryStatsFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
      "props", ",", " ", "country", ",", " ", "\n", "\t\t", 
       "countryPopulation", ",", " ", "countryArea", ",", " ", "\n", "\t\t", 
       "propsToNormalizeWPopulation", ",", " ", "propsToNormalizeWArea", ",", 
       "\n", "\t\t", "pairsList"}], "\n", "\t", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"country", " ", "=", " ", 
       RowBox[{"city", "[", "\"\<Country\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"countryArea", " ", "=", " ", 
       RowBox[{"country", "[", "\"\<Area\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"countryPopulation", " ", "=", " ", 
       RowBox[{"country", "[", "\"\<Population\>\"", "]"}]}], ";", "\n", "\t", 
      RowBox[{"props", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
        "\"\<Population\>\"", ",", "\"\<Latitude\>\"", ",", 
         "\"\<Longitude\>\"", ",", "\n", "\t\t", "\"\<Area\>\"", ",", 
         "\"\<WaterArea\>\"", ",", "\"\<BoundaryLength\>\"", ",", 
         "\"\<CoastlineLength\>\"", ",", "\"\<WaterwayLength\>\"", ",", "\n", 
         "\t\t", "\"\<ContributingFamilyWorkers\>\"", ",", "\n", "\t\t", 
         "\"\<GDPPerPersonEmployed\>\"", ",", "\"\<GiniIndex\>\"", ",", 
         "\"\<InterestRateSpread\>\"", ",", "\"\<PovertyHeadcount\>\"", ",", 
         "\"\<UnemploymentRate\>\"", ",", "\n", "\t\t", "\"\<BookTitles\>\"", 
         ",", "\"\<IlliteracyFraction\>\"", ",", "\n", "\t\t", "\n", "\t\t", 
         "\"\<MaleLifeExpectancy\>\"", ",", "\"\<MaleMedianAge\>\"", ",", 
         "\"\<FemaleLifeExpectancy\>\"", ",", "\"\<FemaleMedianAge\>\"", ",", 
         "\n", "\t\t", "\"\<HospitalBedsPer10000Population\>\""}], "\n", "\t",
         "}"}]}], ";", "\n", "\t", 
      RowBox[{"propsToNormalizeWArea", " ", "=", " ", 
       RowBox[{"{", " ", "}"}]}], ";", "\n", "\t", 
      RowBox[{"propsToNormalizeWPopulation", " ", "=", " ", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
        "\"\<Army\>\"", ",", "\"\<HIVAIDSPopulation\>\"", ",", 
         "\"\<ElectricityTotal\>\"", ",", "\n", "\t\t", 
         "\"\<ChildPopulation\>\"", ",", "\"\<ElderlyPopulation\>\"", ",", 
         "\"\<AnnualMarriages\>\"", ",", "\"\<AnnualDivorces\>\"", ",", "\n", 
         "\t\t", "\"\<NetIncomeFromAbroad\>\"", ",", "\"\<GovernmentDebt\>\"",
          ",", "\"\<GovernmentSurplus\>\"", ",", "\"\<ImportsValue\>\"", ",", 
         "\"\<ExportsValue\>\"", ",", "\n", "\t\t", "\"\<LeisureArrivals\>\"",
          ",", "\"\<NewspaperTitles\>\""}], "\n", "\t", "}"}]}], ";", "\n", 
      "\t", 
      RowBox[{"pairsList", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"ExtractListFeatures", "[", 
          RowBox[{"country", ",", " ", "props"}], "]"}], ",", " ", "\n", 
         "\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                " ", "/", " ", "countryArea"}]}], "}"}], ")"}], " ", "&"}], 
           ",", " ", 
           RowBox[{"ExtractListFeatures", "[", 
            RowBox[{"country", ",", " ", "propsToNormalizeWArea"}], "]"}]}], 
          "]"}], ",", "\n", "\t\t", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                " ", "/", " ", "countryPopulation"}]}], "}"}], ")"}], " ", 
            "&"}], ",", " ", 
           RowBox[{"ExtractListFeatures", "[", 
            RowBox[{"country", ",", " ", "propsToNormalizeWPopulation"}], 
            "]"}]}], "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"pairsList", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"StringJoin", "[", 
              RowBox[{"{", 
               RowBox[{"\"\<Country\>\"", ",", " ", 
                RowBox[{
                "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                "}"}], "]"}], ",", " ", 
             RowBox[{
             "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "}"}], ")"}], " ", "&"}], ",", " ", "pairsList"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"Association", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"AssociationFromPair", ",", " ", "pairsList"}], "]"}], 
       "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractMapFeaturesFromPixels", "[", "city_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "imgQuantized", ",", " ", "pixelsList", ",", " ", "freqOfColors", ",", 
       " ", "imgMerged"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"imgMerged", " ", "=", " ", 
       RowBox[{"MapReconstructFromImages", "[", 
        RowBox[{"ImportMaps", "[", "city", "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"imgQuantized", " ", "=", " ", 
       RowBox[{"RemoveAlphaChannel", "[", 
        RowBox[{"ColorQuantize", "[", 
         RowBox[{"imgMerged", ",", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"ColorMake", ",", " ", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Values", "[", "constantColorsPerPurpose", "]"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}]}], "]"}]}], "]"}],
         "]"}]}], ";", "\n", "\t", 
      RowBox[{"pixelsList", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"imgQuantized", ",", " ", "\"\<Byte\>\""}], "]"}], ",", " ",
          "1"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"freqOfColors", " ", "=", " ", 
       RowBox[{"AssociationMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"ColorsFindInImage", "[", 
              RowBox[{"pixelsList", ",", " ", 
               RowBox[{"constantColorsPerPurpose", "[", "#", "]"}]}], "]"}], 
             "]"}], " ", "/", " ", 
            RowBox[{"Length", "[", "pixelsList", "]"}]}], ")"}], " ", "&"}], 
         ",", " ", 
         RowBox[{"Keys", "[", "constantColorsPerPurpose", "]"}]}], "]"}]}], 
      ";", "\n", "\t", "freqOfColors"}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractMapFeaturesFromOSM", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "cityBounds", ",", " ", "osmData", ",", " ", "osmNodes", ",", " ", 
       "osmWays", ",", " ", "parsedWays", ",", " ", "graphWays"}], "}"}], ",",
      "\n", "\t", 
     RowBox[{
      RowBox[{"cityBounds", " ", "=", " ", 
       RowBox[{"GeoBoundingBox", "[", 
        RowBox[{
         RowBox[{"GeoPosition", "[", "city", "]"}], ",", 
         RowBox[{"Quantity", "[", 
          RowBox[{"0.5", ",", " ", "\"\<Kilometers\>\""}], "]"}]}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"osmData", " ", "=", " ", 
       RowBox[{
        RowBox[{"ResourceFunction", "[", "\"\<OSMImport\>\"", "]"}], "[", 
        "cityBounds", "]"}]}], ";", "\n", "\t", 
      RowBox[{"osmNodes", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"#", ",", " ", "\"\<Position\>\""}], "]"}], " ", "&"}], 
         ",", " ", 
         RowBox[{"osmData", "[", "\"\<Nodes\>\"", "]"}]}], "]"}]}], ";", "\n",
       "\t", 
      RowBox[{"osmWays", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{"osmNodes", ",", " ", 
            RowBox[{"Lookup", "[", 
             RowBox[{"#", ",", " ", "\"\<Nodes\>\""}], "]"}]}], "]"}], " ", 
          "&"}], ",", " ", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"osmData", "[", "\"\<Ways\>\"", "]"}], ",", " ", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Keys", "[", "#Tags", "]"}], ",", "\"\<highway\>\""}], 
             "]"}], " ", "&"}]}], "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"parsedWays", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"UndirectedEdge", "@@@", 
            RowBox[{"Partition", "[", 
             RowBox[{"#", ",", "2", ",", "1"}], "]"}]}], " ", "&"}], ",", " ", 
          RowBox[{"Values", "[", "osmWays", "]"}]}], "]"}], "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"graphWays", " ", "=", " ", 
       RowBox[{"Graph", "[", "parsedWays", "]"}]}], ";", "\n", "\t", 
      RowBox[{"Association", "[", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"\"\<MeanNeighborDegree\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"MeanNeighborDegree", "[", "graphWays", "]"}], "]"}]}], 
         ",", "\n", "\t\t", 
         RowBox[{"\"\<DegreeCentrality\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"DegreeCentrality", "[", "graphWays", "]"}], "]"}]}], ",", 
         "\n", "\t\t", 
         RowBox[{"\"\<ClosenessCentrality\>\"", " ", "\[Rule]", " ", 
          RowBox[{"Mean", "[", 
           RowBox[{"ClosenessCentrality", "[", "graphWays", "]"}], "]"}]}]}], 
        "\n", "\t", "}"}], "]"}]}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExtractAllFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Merge", "[", 
    RowBox[{
     RowBox[{"{", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"ExtractCityStatsFeatures", "[", "city", "]"}], ",", " ", 
       RowBox[{"ExtractCountryStatsFeatures", "[", "city", "]"}], ",", " ", 
       "\n", "\t", 
       RowBox[{"ExtractMapFeaturesFromPixels", "[", "city", "]"}], ",", " ", 
       RowBox[{"ExtractMapFeaturesFromOSM", "[", "city", "]"}]}], "\n", "\t", 
      "}"}], ",", " ", "Total"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ExportAllFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{"CityDataPath", "[", 
      RowBox[{"constantPathFeatures", ",", " ", "city"}], "]"}], ",", " ", 
     RowBox[{"ExtractAllFeatures", "[", "city", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportAllFeatures", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"CityDataPath", "[", 
     RowBox[{"constantPathFeatures", ",", " ", "city"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImportAllFeaturesClean", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"raw", ",", " ", "keys", ",", " ", "vals"}], "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"raw", " ", "=", " ", 
       RowBox[{"ImportAllFeatures", "[", "city", "]"}]}], ";", "\n", "\t", 
      RowBox[{"keys", " ", "=", " ", 
       RowBox[{"Keys", "[", "raw", "]"}]}], ";", "\n", "\t", 
      RowBox[{"vals", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{"NomalizeNumber", "[", "#", "]"}], "]"}], " ", "&"}], ",", 
         " ", 
         RowBox[{"Values", "[", "raw", "]"}]}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"AssociationsFromPair", "[", 
       RowBox[{"keys", ",", " ", "vals"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.7711017038951178`*^9}, {3.771101737640126*^9, 
   3.771101738955223*^9}, {3.771102348054689*^9, 3.771102377179801*^9}, {
   3.771151297276696*^9, 3.7711513406172113`*^9}, {3.771165996818695*^9, 
   3.771166090601877*^9}, {3.771166173108506*^9, 3.771166257114065*^9}, {
   3.7711663793332567`*^9, 3.7711664011443663`*^9}, {3.771166487336176*^9, 
   3.771166493613332*^9}, {3.771166547031842*^9, 3.771166548165827*^9}, {
   3.771166600953315*^9, 3.771166683297266*^9}, {3.7711667286702223`*^9, 
   3.771166759409555*^9}, {3.771166813508647*^9, 3.77116686156734*^9}, {
   3.771166913675415*^9, 3.771166915031599*^9}, {3.771167002660701*^9, 
   3.7711670324128647`*^9}, {3.771167084473464*^9, 3.771167085469692*^9}, {
   3.771167137989037*^9, 3.77116714854849*^9}, {3.7711966071075907`*^9, 
   3.771196664810173*^9}, {3.771196768138517*^9, 3.771196768956388*^9}, {
   3.7711972557665977`*^9, 3.771197296014269*^9}, {3.771197339836514*^9, 
   3.7711973411966457`*^9}, {3.771197432374444*^9, 3.771197524940136*^9}, {
   3.7711976763793087`*^9, 3.771197702854021*^9}, {3.771197803674632*^9, 
   3.7711979369634132`*^9}, {3.771197967398962*^9, 3.7711980033990593`*^9}, {
   3.7712540825875387`*^9, 3.7712541780295067`*^9}, {3.771254335770904*^9, 
   3.771254359501605*^9}, 3.771254530905891*^9, {3.771254785393812*^9, 
   3.771254808272388*^9}, {3.771255275230245*^9, 3.7712553239167128`*^9}, 
   3.771255878153738*^9, {3.771329391567483*^9, 3.771329411248989*^9}, {
   3.771329565046358*^9, 3.771329572203886*^9}, {3.771496168448968*^9, 
   3.7714962036277237`*^9}, {3.7714962447300997`*^9, 3.771496245963435*^9}, {
   3.771496311404038*^9, 3.771496321537601*^9}, {3.771496373822885*^9, 
   3.7714965489266853`*^9}, {3.771496600537525*^9, 3.771496657002174*^9}, {
   3.771496740056799*^9, 3.7714967412281446`*^9}, {3.7714967773729877`*^9, 
   3.771496816005433*^9}, {3.7714968682908154`*^9, 3.7714968697917128`*^9}, {
   3.771496918369812*^9, 3.7714969345000267`*^9}, {3.77149704823771*^9, 
   3.771497049699279*^9}, {3.771531573462158*^9, 3.7715316783804092`*^9}, {
   3.7715317921088057`*^9, 3.7715319320398483`*^9}, {3.771532053822135*^9, 
   3.771532068932446*^9}, {3.77160369579909*^9, 3.771603699299447*^9}, {
   3.771622717254788*^9, 3.771622744597303*^9}, {3.771622792645124*^9, 
   3.771622866807831*^9}, {3.771622943162854*^9, 3.771622977854175*^9}, {
   3.771623095313883*^9, 3.7716231559729*^9}, 3.771626854648131*^9, {
   3.7716699227396383`*^9, 3.771670136223054*^9}, {3.771670237325835*^9, 
   3.7716702494329853`*^9}, 3.771671175991432*^9, {3.771672127947584*^9, 
   3.771672150478457*^9}, {3.771672230501935*^9, 3.771672268757731*^9}, {
   3.771672315778051*^9, 3.771672366662242*^9}, {3.771672450181912*^9, 
   3.771672518746067*^9}, {3.7716728138915873`*^9, 3.7716728561259413`*^9}, {
   3.771673120085889*^9, 3.7716731965682497`*^9}, 3.771673311335342*^9, {
   3.7716733760174026`*^9, 3.7716734371914263`*^9}, 3.7716736642268753`*^9, {
   3.771673816967555*^9, 3.7716738200197077`*^9}, 3.7716738956763563`*^9, {
   3.771692271635406*^9, 3.771692289122738*^9}, {3.771692328660396*^9, 
   3.771692350779047*^9}, {3.771692435092806*^9, 3.771692466505422*^9}, {
   3.771692537906076*^9, 3.771692624393091*^9}, {3.771692775661364*^9, 
   3.771692789217929*^9}, {3.771692830199643*^9, 3.771692844244501*^9}, {
   3.7716929864537773`*^9, 3.771692987704947*^9}, {3.771693176982716*^9, 
   3.771693223617131*^9}, 3.771693304109569*^9, {3.771693405997867*^9, 
   3.771693411843594*^9}, {3.7716934485301933`*^9, 3.771693487163294*^9}, {
   3.771693563974257*^9, 3.771693605802772*^9}, {3.771693686709693*^9, 
   3.7716936883943577`*^9}, {3.771693815631466*^9, 3.771693817772654*^9}, {
   3.7716940022647877`*^9, 3.771694008168648*^9}, {3.771695318872908*^9, 
   3.7716953200695953`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"ce916f56-0286-4291-9303-f08a2c807b22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Data persistence", "Subtitle"]], "Chapter",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101697078874*^9}, 3.771101745126054*^9, {
   3.7716033918812017`*^9, 3.7716034128995743`*^9}, {3.7716707627012653`*^9, 
   3.77167077713202*^9}},ExpressionUUID->"31ec80d6-775d-4599-a9dc-\
de5307132f4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DownloadDataNeeded", "[", "city_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Echo", "[", 
       RowBox[{"StringJoin", "[", 
        RowBox[{"\"\<Processing city \>\"", ",", " ", 
         RowBox[{"CityName", "[", "city", "]"}]}], "]"}], "]"}], ";", "\n", 
      "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", 
          RowBox[{"CityDataPath", "[", 
           RowBox[{"constantPathTweets", ",", " ", "city"}], "]"}], "]"}]}], 
        ",", " ", 
        RowBox[{"ExportTweets", "[", "city", "]"}], ",", " ", "Nothing"}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", 
          RowBox[{"CityDataPath", "[", 
           RowBox[{"constantPathMaps", ",", " ", "city"}], "]"}], "]"}]}], 
        ",", " ", 
        RowBox[{"ExportMaps", "[", "city", "]"}], ",", " ", "Nothing"}], 
       "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", 
          RowBox[{"CityDataPath", "[", 
           RowBox[{"constantPathSatellites", ",", " ", "city"}], "]"}], 
          "]"}]}], ",", " ", 
        RowBox[{"ExportSatellites", "[", "city", "]"}], ",", " ", "Nothing"}],
        "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", 
          RowBox[{"CityDataPath", "[", 
           RowBox[{"constantPathFeatures", ",", " ", "city"}], "]"}], "]"}]}],
         ",", " ", 
        RowBox[{"ExportAllFeatures", "[", "city", "]"}], ",", " ", 
        "Nothing"}], "]"}], ";"}]}], "\n", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.7714486731894703`*^9, 3.771448746390979*^9}, {
   3.771454070202355*^9, 3.7714541042189007`*^9}, {3.771454145635871*^9, 
   3.7714541708185663`*^9}, {3.771531491849868*^9, 3.771531493954137*^9}, {
   3.771620391630314*^9, 3.771620417772552*^9}, {3.771620757115899*^9, 
   3.771620807232101*^9}, 3.771673776030848*^9, {3.771674120726346*^9, 
   3.771674129414414*^9}, {3.771683495381939*^9, 3.771683495665181*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"b390a3c8-0279-4919-a9b9-ecf0cf3957f6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   StyleBox[
    RowBox[{"tw", " ", "=", " ", 
     RowBox[{"ServiceConnect", "[", "\"\<Twitter\>\"", "]"}]}], "Code"], 
   StyleBox[";", "Code"], "\n", 
   RowBox[{"ClearSystemCache", "[", "]"}], ";", "\n", 
   RowBox[{"Map", "[", 
    RowBox[{"DownloadDataNeeded", ",", " ", 
     RowBox[{"Drop", "[", 
      RowBox[{"citiesPopular", ",", " ", "70"}], "]"}]}], "]"}], ";"}], 
  "*)"}]], "Code",
 CellChangeTimes->{{3.7714541818692417`*^9, 3.7714541855013533`*^9}, {
  3.771495717530364*^9, 3.7714957234432993`*^9}, {3.771585795840542*^9, 
  3.771585798253406*^9}, {3.7716709064736547`*^9, 3.771670909272904*^9}, {
  3.771674109863604*^9, 3.7716741413335667`*^9}, {3.771690331972289*^9, 
  3.771690337584732*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"c766c488-b0f2-40dd-b6b0-55ce54d425cf"],

Cell["\<\
Once we collect the data from Twitter, we want to see how the \
\>", "Text",
 CellChangeTimes->{{3.771250972015732*^9, 3.771250985754189*^9}, {
  3.771251369189413*^9, 
  3.7712513838841467`*^9}},ExpressionUUID->"13349771-2cbd-4640-86e0-\
2a496adaad4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tweetsPerCity", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"ImportTweets", ",", " ", "citiesPopular"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesEstimates", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"EstimateQualityOfLifeWSentiment", ",", " ", "tweetsPerCity"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesCertainties", " ", "=", " ", 
   RowBox[{"RescaleIntoInterval", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#", "[", "\"\<Value\>\"", "]"}], ")"}], " ", "&"}], ",", " ", 
      RowBox[{"citiesEstimates", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771105232661023*^9, 3.771105236965727*^9}, 
   3.771105343619289*^9, {3.7711053807205553`*^9, 3.771105391254448*^9}, {
   3.771148444770472*^9, 3.77114848020079*^9}, {3.77114867624708*^9, 
   3.7711487402579947`*^9}, {3.771148883971727*^9, 3.7711489144674997`*^9}, {
   3.771148997447256*^9, 3.7711492080155497`*^9}, {3.771149309499318*^9, 
   3.771149370219907*^9}, {3.771149482508939*^9, 3.771149521955628*^9}, {
   3.771150211561305*^9, 3.77115029995325*^9}, {3.7711505430475483`*^9, 
   3.771150609282713*^9}, {3.771150988266674*^9, 3.771150991458864*^9}, {
   3.771151028119976*^9, 3.771151057770471*^9}, {3.771163302479371*^9, 
   3.7711633359953957`*^9}, {3.7711635116575327`*^9, 
   3.7711635121821203`*^9}, {3.771163678045841*^9, 3.771163682514146*^9}, {
   3.771163773443185*^9, 3.771163774340561*^9}, 3.771198337174004*^9, {
   3.7711984782794237`*^9, 3.771198526204817*^9}, {3.771236837224044*^9, 
   3.771236854482362*^9}, {3.771236898953055*^9, 3.771236899145274*^9}, {
   3.7712369642273407`*^9, 3.771236972069683*^9}, {3.77123711843121*^9, 
   3.771237126588648*^9}, {3.7712372284663773`*^9, 3.7712372657079153`*^9}, {
   3.771237329811762*^9, 3.7712373529329977`*^9}, 3.771237395448209*^9, 
   3.7712509586175137`*^9, {3.771252292119206*^9, 3.7712522972388*^9}, {
   3.771352556865284*^9, 3.771352559235721*^9}, 3.771364499937711*^9, {
   3.771364603202607*^9, 3.7713646056179457`*^9}, {3.771453567368411*^9, 
   3.7714535761202927`*^9}, {3.771453655058641*^9, 3.771453658320343*^9}, {
   3.771453694224032*^9, 3.7714537221911077`*^9}, {3.771453768885117*^9, 
   3.771453825290695*^9}, {3.771494049186705*^9, 3.77149406487798*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"1ba0fedf-ebcf-47e3-8705-8f2f4c11ea50"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"citiesColors", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.2", ",", " ", "0.2", ",", " ", "0.8", ",", " ", "#"}], 
       "]"}], " ", "&"}], ",", " ", "citiesCertainties"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"citiesPositivnessFromTweets", " ", "=", " ", 
   RowBox[{"citiesEstimates", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", " ", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\n", 
 RowBox[{"BarChart", "[", 
  RowBox[{"citiesPositivnessFromTweets", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{"CityName", ",", " ", "citiesPopular"}], "]"}]}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "citiesColors"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.771105232661023*^9, 3.771105236965727*^9}, 
   3.771105343619289*^9, {3.7711053807205553`*^9, 3.771105391254448*^9}, {
   3.771148444770472*^9, 3.77114848020079*^9}, {3.77114867624708*^9, 
   3.7711487402579947`*^9}, {3.771148883971727*^9, 3.7711489144674997`*^9}, {
   3.771148997447256*^9, 3.7711492080155497`*^9}, {3.771149309499318*^9, 
   3.771149370219907*^9}, {3.771149482508939*^9, 3.771149521955628*^9}, {
   3.771150211561305*^9, 3.77115029995325*^9}, {3.7711505430475483`*^9, 
   3.771150609282713*^9}, {3.771150988266674*^9, 3.771150991458864*^9}, {
   3.771151028119976*^9, 3.771151057770471*^9}, {3.771163302479371*^9, 
   3.7711633359953957`*^9}, {3.7711635116575327`*^9, 
   3.7711635121821203`*^9}, {3.771163678045841*^9, 3.771163682514146*^9}, {
   3.771163773443185*^9, 3.771163774340561*^9}, 3.771198337174004*^9, {
   3.7711984782794237`*^9, 3.771198526204817*^9}, {3.771236837224044*^9, 
   3.771236854482362*^9}, {3.771236898953055*^9, 3.771236899145274*^9}, {
   3.7712369642273407`*^9, 3.771236972069683*^9}, {3.77123711843121*^9, 
   3.771237126588648*^9}, {3.7712372284663773`*^9, 3.7712372657079153`*^9}, {
   3.771237329811762*^9, 3.7712373529329977`*^9}, 3.771237395448209*^9, 
   3.7712509586175137`*^9, {3.771252292119206*^9, 3.7712522972388*^9}, {
   3.771352556865284*^9, 3.771352559235721*^9}, 3.771364499937711*^9, {
   3.771364603202607*^9, 3.7713646056179457`*^9}, {3.771453567368411*^9, 
   3.7714535761202927`*^9}, {3.771453655058641*^9, 3.771453658320343*^9}, {
   3.771453694224032*^9, 3.7714537221911077`*^9}, {3.771453768885117*^9, 
   3.771453825290695*^9}, {3.771494049186705*^9, 3.771494079411756*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"dd94b0a0-2b74-462f-8d54-573d698ec4b3"],

Cell[BoxData[
 GraphicsBox[{{
    {Opacity[0], PointBox[{{0., -1.5}, {0., 100.5}}]}, {{}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[Opacity[0.]], 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7176754314465787], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 0.5}, {0.7094780254912796, 1.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8279510201653612], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 1.5}, {0.6212207674326337, 2.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5858226737572596], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 2.5}, {0.6756641062959441, 3.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7814289899911246], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 3.5}, {0.6271725928863408, 4.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7481383163139589], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 4.5}, {0.6601309524686282, 5.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7692042146215119], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 5.5}, {0.6075730642972501, 6.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7327042772441816], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 6.5}, {0.596770622020753, 7.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8404387158825382], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 7.5}, {0.5771232505198457, 8.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8312557630917399], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 8.5}, {0.6228594834244057, 9.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6260961199901336], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 9.5}, {0.6152352433003037, 10.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5652934326911856], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 10.5}, {0.6421578707973884, 11.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7555854739895107], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 11.5}, {0.6081083005439462, 12.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.672642655021958], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 12.5}, {0.6119525994424226, 13.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6118940931807957], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 13.5}, {0.6258592853246716, 14.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6486521858581383], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 14.5}, {0.6144830048531488, 15.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7684505417702913], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 15.5}, {0.6556192762962432, 16.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8153390503569053], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 16.5}, {0.6560237091036722, 17.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7274560316754648], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 17.5}, {0.5904025661158773, 18.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7728082876660456], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 18.5}, {0.6179754290700187, 19.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6742572811121245], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 19.5}, {0.6187137861652968, 20.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5921630768565032], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 20.5}, {0.6692109538724832, 21.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7374151666926428], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 21.5}, {0.645390985328293, 22.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6195342056686642], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 22.5}, {0.5886012686753667, 23.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6725989818973247], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 23.5}, {0.5448160664477556, 24.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7913772216245962], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 24.5}, {0.6354121176869114, 25.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6401448961760818], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 25.5}, {0.6394968932809129, 26.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7184410608116257], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 26.5}, {0.579597980593741, 27.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7542241346663416], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 27.5}, {0.5989295024826079, 28.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7460133050581996], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 28.5}, {0.6619629406513258, 29.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7531623047682412], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 29.5}, {0.5827312202237238, 30.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6692408355294145], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 30.5}, {0.6118390321474525, 31.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.742632421619231], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 31.5}, {0.591228890984654, 32.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7929508183457274], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 32.5}, {0.6893609002730704, 33.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7949320958109738], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 33.5}, {0.6194426043074048, 34.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7469149591329476], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 34.5}, {0.6807395187456539, 35.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6836051160749707], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 35.5}, {0.6203486508741834, 36.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8477249347423831], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 36.5}, {0.6064128564217263, 37.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7407656316527769], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 37.5}, {0.6513873815366721, 38.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7352908639700706], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 38.5}, {0.6430268477412946, 39.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7063532001478714], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 39.5}, {0.5822887528259318, 40.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.740515442818265], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 40.5}, {0.7181963600080368, 41.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7004134452611186], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 41.5}, {0.5933273561474978, 42.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.742482340274929], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 42.5}, {0.6411733052568453, 43.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7477321635209921], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 43.5}, {0.6455747219833612, 44.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7364030307446516], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 44.5}, {0.6427329190005487, 45.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7711372358933629], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 45.5}, {0.7078756726789222, 46.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7767654036241787], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 46.5}, {0.6686434667623472, 47.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.64904303211438], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 47.5}, {0.6033673765841746, 48.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.700770727279793], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 48.5}, {0.6410998023559015, 49.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6190907426891815], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 49.5}, {0.6178391396997895, 50.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6943890910053617], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 50.5}, {0.6042482536796245, 51.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.740609838770277], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 51.5}, {0.6169263018799168, 52.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7581725625908038], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 52.5}, {0.6314432779959939, 53.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8469636685406186], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 53.5}, {0.7693070541839633, 54.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5], EdgeForm[Opacity[0.]], 
       RectangleBox[{0., 54.5}, {0.6494507487080535, 55.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6925963047038273], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 55.5}, {0.6915183102232182, 56.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7195621589716865], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 56.5}, {0.668408747790416, 57.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7617675690591228], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 57.5}, {0.6122542954549197, 58.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7876596909353499], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 58.5}, {0.7291236152289445, 59.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7049546378372464], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 59.5}, {0.6037592118143658, 60.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8008400976864876], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 60.5}, {0.665425377890306, 61.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5955252519404673], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 61.5}, {0.5918609488721753, 62.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.785407626612701], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 62.5}, {0.6590054983662713, 63.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7569534814195289], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 63.5}, {0.5732692378453028, 64.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7755731169205828], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 64.5}, {0.7226632958240885, 65.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7455556063723131], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 65.5}, {0.6442027645871149, 66.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6825007689146033], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 66.5}, {0.7552147912593619, 67.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7498187964692874], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 67.5}, {0.6731402126966803, 68.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7989882431141833], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 68.5}, {0.6688696022390684, 69.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7704104618124417], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 69.5}, {0.6099620245815766, 70.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7456155941250098], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 70.5}, {0.7208262198633335, 71.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6472504473406332], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 71.5}, {0.7308789359809917, 72.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6324738586128064], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 72.5}, {0.7473671856270511, 73.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7299857772669577], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 73.5}, {0.6341843233597266, 74.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6015452509722727], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 74.5}, {0.7126700149778475, 75.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6595532891969377], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 75.5}, {0.6672353553106399, 76.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6351817346421648], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 76.5}, {0.7139325409556403, 77.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7017515750446992], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 77.5}, {0.6299217123238716, 78.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7515518834107192], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 78.5}, {0.5876020259044288, 79.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7215243102595766], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 79.5}, {0.6122906910805411, 80.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.734098908056747], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 80.5}, {0.6190112425319902, 81.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.759992249665873], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 81.5}, {0.6606208248101461, 82.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8731319695294444], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 82.5}, {0.722870721151543, 83.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7625087537129647], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 83.5}, {0.6755916260057354, 84.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7206750226099803], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 84.5}, {0.6643699915041464, 85.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.95], EdgeForm[Opacity[0.]], 
       RectangleBox[{0., 85.5}, {0.5237996092979674, 86.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.8117160663836445], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 86.5}, {0.6221696104079373, 87.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7320533133145954], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 87.5}, {0.6200590250592407, 88.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.776464122562469], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 88.5}, {0.6357645924191135, 89.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6182973242042902], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 89.5}, {0.6143173468333734, 90.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7292569783728212], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 90.5}, {0.65166268538485, 91.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6713750940951166], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 91.5}, {0.6729218411962753, 92.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6349591384084473], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 92.5}, {0.616087851021887, 93.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.7289144007390973], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 93.5}, {0.6880512175065494, 94.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.5487575926839616], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 94.5}, {0.7254583695530306, 95.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6312680449376111], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 95.5}, {0.5697888833456759, 96.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.653432779770862], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 96.5}, {0.6158174798109485, 97.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6876826203094999], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 97.5}, {0.6150705800784589, 98.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.715921450091501], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 98.5}, {0.6161860342693534, 99.5},
        RoundingRadius->0]}, 
      {RGBColor[0.2, 0.2, 0.8], Opacity[0.6448723365833492], EdgeForm[Opacity[
       0.]], RectangleBox[{0., 99.5}, {0.6575215137668566, 100.5},
        RoundingRadius->0]}}, {}, {}}, {}, {}, {}, {}, 
    StyleBox[
     StyleBox[{
       {Thickness[Tiny], LineBox[{{0., -1.5}, {0., 102.54}}], 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, 
       StyleBox[{
         {Thickness[Tiny], LineBox[{{0., 0.5}, Offset[{-6., 0.}, {0., 0.5}]}],
           LineBox[{{0., 100.5}, 
            Offset[{-6., 0.}, {0., 
             100.5}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
            LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
            LineBox[{{0., 1.5}, Offset[{-4., 0.}, {0., 1.5}]}], 
            LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
            LineBox[{{0., 2.5}, Offset[{-4., 0.}, {0., 2.5}]}], 
            LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
            LineBox[{{0., 3.5}, Offset[{-4., 0.}, {0., 3.5}]}], 
            LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
            LineBox[{{0., 4.5}, Offset[{-4., 0.}, {0., 4.5}]}], 
            LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
            LineBox[{{0., 5.5}, Offset[{-4., 0.}, {0., 5.5}]}], 
            LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
            LineBox[{{0., 6.5}, Offset[{-4., 0.}, {0., 6.5}]}], 
            LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
            LineBox[{{0., 7.5}, Offset[{-4., 0.}, {0., 7.5}]}], 
            LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
            LineBox[{{0., 8.5}, Offset[{-4., 0.}, {0., 8.5}]}], 
            LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
            LineBox[{{0., 9.5}, Offset[{-4., 0.}, {0., 9.5}]}], 
            LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
            LineBox[{{0., 10.5}, Offset[{-4., 0.}, {0., 10.5}]}], 
            LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
            LineBox[{{0., 11.5}, Offset[{-4., 0.}, {0., 11.5}]}], 
            LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
            LineBox[{{0., 12.5}, Offset[{-4., 0.}, {0., 12.5}]}], 
            LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
            LineBox[{{0., 13.5}, Offset[{-4., 0.}, {0., 13.5}]}], 
            LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
            LineBox[{{0., 14.5}, Offset[{-4., 0.}, {0., 14.5}]}], 
            LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
            LineBox[{{0., 15.5}, Offset[{-4., 0.}, {0., 15.5}]}], 
            LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
            LineBox[{{0., 16.5}, Offset[{-4., 0.}, {0., 16.5}]}], 
            LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
            LineBox[{{0., 17.5}, Offset[{-4., 0.}, {0., 17.5}]}], 
            LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
            LineBox[{{0., 18.5}, Offset[{-4., 0.}, {0., 18.5}]}], 
            LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
            LineBox[{{0., 19.5}, Offset[{-4., 0.}, {0., 19.5}]}], 
            LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
            LineBox[{{0., 20.5}, Offset[{-4., 0.}, {0., 20.5}]}], 
            LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
            LineBox[{{0., 21.5}, Offset[{-4., 0.}, {0., 21.5}]}], 
            LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
            LineBox[{{0., 22.5}, Offset[{-4., 0.}, {0., 22.5}]}], 
            LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
            LineBox[{{0., 23.5}, Offset[{-4., 0.}, {0., 23.5}]}], 
            LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
            LineBox[{{0., 24.5}, Offset[{-4., 0.}, {0., 24.5}]}], 
            LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
            LineBox[{{0., 25.5}, Offset[{-4., 0.}, {0., 25.5}]}], 
            LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
            LineBox[{{0., 26.5}, Offset[{-4., 0.}, {0., 26.5}]}], 
            LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
            LineBox[{{0., 27.5}, Offset[{-4., 0.}, {0., 27.5}]}], 
            LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
            LineBox[{{0., 28.5}, Offset[{-4., 0.}, {0., 28.5}]}], 
            LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
            LineBox[{{0., 29.5}, Offset[{-4., 0.}, {0., 29.5}]}], 
            LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
            LineBox[{{0., 30.5}, Offset[{-4., 0.}, {0., 30.5}]}], 
            LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
            LineBox[{{0., 31.5}, Offset[{-4., 0.}, {0., 31.5}]}], 
            LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
            LineBox[{{0., 32.5}, Offset[{-4., 0.}, {0., 32.5}]}], 
            LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
            LineBox[{{0., 33.5}, Offset[{-4., 0.}, {0., 33.5}]}], 
            LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
            LineBox[{{0., 34.5}, Offset[{-4., 0.}, {0., 34.5}]}], 
            LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
            LineBox[{{0., 35.5}, Offset[{-4., 0.}, {0., 35.5}]}], 
            LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
            LineBox[{{0., 36.5}, Offset[{-4., 0.}, {0., 36.5}]}], 
            LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
            LineBox[{{0., 37.5}, Offset[{-4., 0.}, {0., 37.5}]}], 
            LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
            LineBox[{{0., 38.5}, Offset[{-4., 0.}, {0., 38.5}]}], 
            LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
            LineBox[{{0., 39.5}, Offset[{-4., 0.}, {0., 39.5}]}], 
            LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
            LineBox[{{0., 40.5}, Offset[{-4., 0.}, {0., 40.5}]}], 
            LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
            LineBox[{{0., 41.5}, Offset[{-4., 0.}, {0., 41.5}]}], 
            LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
            LineBox[{{0., 42.5}, Offset[{-4., 0.}, {0., 42.5}]}], 
            LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
            LineBox[{{0., 43.5}, Offset[{-4., 0.}, {0., 43.5}]}], 
            LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
            LineBox[{{0., 44.5}, Offset[{-4., 0.}, {0., 44.5}]}], 
            LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
            LineBox[{{0., 45.5}, Offset[{-4., 0.}, {0., 45.5}]}], 
            LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
            LineBox[{{0., 46.5}, Offset[{-4., 0.}, {0., 46.5}]}], 
            LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
            LineBox[{{0., 47.5}, Offset[{-4., 0.}, {0., 47.5}]}], 
            LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
            LineBox[{{0., 48.5}, Offset[{-4., 0.}, {0., 48.5}]}], 
            LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
            LineBox[{{0., 49.5}, Offset[{-4., 0.}, {0., 49.5}]}], 
            LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
            LineBox[{{0., 50.5}, Offset[{-4., 0.}, {0., 50.5}]}], 
            LineBox[{{0., 51.5}, Offset[{-4., 0.}, {0., 51.5}]}], 
            LineBox[{{0., 51.5}, Offset[{-4., 0.}, {0., 51.5}]}], 
            LineBox[{{0., 52.5}, Offset[{-4., 0.}, {0., 52.5}]}], 
            LineBox[{{0., 52.5}, Offset[{-4., 0.}, {0., 52.5}]}], 
            LineBox[{{0., 53.5}, Offset[{-4., 0.}, {0., 53.5}]}], 
            LineBox[{{0., 53.5}, Offset[{-4., 0.}, {0., 53.5}]}], 
            LineBox[{{0., 54.5}, Offset[{-4., 0.}, {0., 54.5}]}], 
            LineBox[{{0., 54.5}, Offset[{-4., 0.}, {0., 54.5}]}], 
            LineBox[{{0., 55.5}, Offset[{-4., 0.}, {0., 55.5}]}], 
            LineBox[{{0., 55.5}, Offset[{-4., 0.}, {0., 55.5}]}], 
            LineBox[{{0., 56.5}, Offset[{-4., 0.}, {0., 56.5}]}], 
            LineBox[{{0., 56.5}, Offset[{-4., 0.}, {0., 56.5}]}], 
            LineBox[{{0., 57.5}, Offset[{-4., 0.}, {0., 57.5}]}], 
            LineBox[{{0., 57.5}, Offset[{-4., 0.}, {0., 57.5}]}], 
            LineBox[{{0., 58.5}, Offset[{-4., 0.}, {0., 58.5}]}], 
            LineBox[{{0., 58.5}, Offset[{-4., 0.}, {0., 58.5}]}], 
            LineBox[{{0., 59.5}, Offset[{-4., 0.}, {0., 59.5}]}], 
            LineBox[{{0., 59.5}, Offset[{-4., 0.}, {0., 59.5}]}], 
            LineBox[{{0., 60.5}, Offset[{-4., 0.}, {0., 60.5}]}], 
            LineBox[{{0., 60.5}, Offset[{-4., 0.}, {0., 60.5}]}], 
            LineBox[{{0., 61.5}, Offset[{-4., 0.}, {0., 61.5}]}], 
            LineBox[{{0., 61.5}, Offset[{-4., 0.}, {0., 61.5}]}], 
            LineBox[{{0., 62.5}, Offset[{-4., 0.}, {0., 62.5}]}], 
            LineBox[{{0., 62.5}, Offset[{-4., 0.}, {0., 62.5}]}], 
            LineBox[{{0., 63.5}, Offset[{-4., 0.}, {0., 63.5}]}], 
            LineBox[{{0., 63.5}, Offset[{-4., 0.}, {0., 63.5}]}], 
            LineBox[{{0., 64.5}, Offset[{-4., 0.}, {0., 64.5}]}], 
            LineBox[{{0., 64.5}, Offset[{-4., 0.}, {0., 64.5}]}], 
            LineBox[{{0., 65.5}, Offset[{-4., 0.}, {0., 65.5}]}], 
            LineBox[{{0., 65.5}, Offset[{-4., 0.}, {0., 65.5}]}], 
            LineBox[{{0., 66.5}, Offset[{-4., 0.}, {0., 66.5}]}], 
            LineBox[{{0., 66.5}, Offset[{-4., 0.}, {0., 66.5}]}], 
            LineBox[{{0., 67.5}, Offset[{-4., 0.}, {0., 67.5}]}], 
            LineBox[{{0., 67.5}, Offset[{-4., 0.}, {0., 67.5}]}], 
            LineBox[{{0., 68.5}, Offset[{-4., 0.}, {0., 68.5}]}], 
            LineBox[{{0., 68.5}, Offset[{-4., 0.}, {0., 68.5}]}], 
            LineBox[{{0., 69.5}, Offset[{-4., 0.}, {0., 69.5}]}], 
            LineBox[{{0., 69.5}, Offset[{-4., 0.}, {0., 69.5}]}], 
            LineBox[{{0., 70.5}, Offset[{-4., 0.}, {0., 70.5}]}], 
            LineBox[{{0., 70.5}, Offset[{-4., 0.}, {0., 70.5}]}], 
            LineBox[{{0., 71.5}, Offset[{-4., 0.}, {0., 71.5}]}], 
            LineBox[{{0., 71.5}, Offset[{-4., 0.}, {0., 71.5}]}], 
            LineBox[{{0., 72.5}, Offset[{-4., 0.}, {0., 72.5}]}], 
            LineBox[{{0., 72.5}, Offset[{-4., 0.}, {0., 72.5}]}], 
            LineBox[{{0., 73.5}, Offset[{-4., 0.}, {0., 73.5}]}], 
            LineBox[{{0., 73.5}, Offset[{-4., 0.}, {0., 73.5}]}], 
            LineBox[{{0., 74.5}, Offset[{-4., 0.}, {0., 74.5}]}], 
            LineBox[{{0., 74.5}, Offset[{-4., 0.}, {0., 74.5}]}], 
            LineBox[{{0., 75.5}, Offset[{-4., 0.}, {0., 75.5}]}], 
            LineBox[{{0., 75.5}, Offset[{-4., 0.}, {0., 75.5}]}], 
            LineBox[{{0., 76.5}, Offset[{-4., 0.}, {0., 76.5}]}], 
            LineBox[{{0., 76.5}, Offset[{-4., 0.}, {0., 76.5}]}], 
            LineBox[{{0., 77.5}, Offset[{-4., 0.}, {0., 77.5}]}], 
            LineBox[{{0., 77.5}, Offset[{-4., 0.}, {0., 77.5}]}], 
            LineBox[{{0., 78.5}, Offset[{-4., 0.}, {0., 78.5}]}], 
            LineBox[{{0., 78.5}, Offset[{-4., 0.}, {0., 78.5}]}], 
            LineBox[{{0., 79.5}, Offset[{-4., 0.}, {0., 79.5}]}], 
            LineBox[{{0., 79.5}, Offset[{-4., 0.}, {0., 79.5}]}], 
            LineBox[{{0., 80.5}, Offset[{-4., 0.}, {0., 80.5}]}], 
            LineBox[{{0., 80.5}, Offset[{-4., 0.}, {0., 80.5}]}], 
            LineBox[{{0., 81.5}, Offset[{-4., 0.}, {0., 81.5}]}], 
            LineBox[{{0., 81.5}, Offset[{-4., 0.}, {0., 81.5}]}], 
            LineBox[{{0., 82.5}, Offset[{-4., 0.}, {0., 82.5}]}], 
            LineBox[{{0., 82.5}, Offset[{-4., 0.}, {0., 82.5}]}], 
            LineBox[{{0., 83.5}, Offset[{-4., 0.}, {0., 83.5}]}], 
            LineBox[{{0., 83.5}, Offset[{-4., 0.}, {0., 83.5}]}], 
            LineBox[{{0., 84.5}, Offset[{-4., 0.}, {0., 84.5}]}], 
            LineBox[{{0., 84.5}, Offset[{-4., 0.}, {0., 84.5}]}], 
            LineBox[{{0., 85.5}, Offset[{-4., 0.}, {0., 85.5}]}], 
            LineBox[{{0., 85.5}, Offset[{-4., 0.}, {0., 85.5}]}], 
            LineBox[{{0., 86.5}, Offset[{-4., 0.}, {0., 86.5}]}], 
            LineBox[{{0., 86.5}, Offset[{-4., 0.}, {0., 86.5}]}], 
            LineBox[{{0., 87.5}, Offset[{-4., 0.}, {0., 87.5}]}], 
            LineBox[{{0., 87.5}, Offset[{-4., 0.}, {0., 87.5}]}], 
            LineBox[{{0., 88.5}, Offset[{-4., 0.}, {0., 88.5}]}], 
            LineBox[{{0., 88.5}, Offset[{-4., 0.}, {0., 88.5}]}], 
            LineBox[{{0., 89.5}, Offset[{-4., 0.}, {0., 89.5}]}], 
            LineBox[{{0., 89.5}, Offset[{-4., 0.}, {0., 89.5}]}], 
            LineBox[{{0., 90.5}, Offset[{-4., 0.}, {0., 90.5}]}], 
            LineBox[{{0., 90.5}, Offset[{-4., 0.}, {0., 90.5}]}], 
            LineBox[{{0., 91.5}, Offset[{-4., 0.}, {0., 91.5}]}], 
            LineBox[{{0., 91.5}, Offset[{-4., 0.}, {0., 91.5}]}], 
            LineBox[{{0., 92.5}, Offset[{-4., 0.}, {0., 92.5}]}], 
            LineBox[{{0., 92.5}, Offset[{-4., 0.}, {0., 92.5}]}], 
            LineBox[{{0., 93.5}, Offset[{-4., 0.}, {0., 93.5}]}], 
            LineBox[{{0., 93.5}, Offset[{-4., 0.}, {0., 93.5}]}], 
            LineBox[{{0., 94.5}, Offset[{-4., 0.}, {0., 94.5}]}], 
            LineBox[{{0., 94.5}, Offset[{-4., 0.}, {0., 94.5}]}], 
            LineBox[{{0., 95.5}, Offset[{-4., 0.}, {0., 95.5}]}], 
            LineBox[{{0., 95.5}, Offset[{-4., 0.}, {0., 95.5}]}], 
            LineBox[{{0., 96.5}, Offset[{-4., 0.}, {0., 96.5}]}], 
            LineBox[{{0., 96.5}, Offset[{-4., 0.}, {0., 96.5}]}], 
            LineBox[{{0., 97.5}, Offset[{-4., 0.}, {0., 97.5}]}], 
            LineBox[{{0., 97.5}, Offset[{-4., 0.}, {0., 97.5}]}], 
            LineBox[{{0., 98.5}, Offset[{-4., 0.}, {0., 98.5}]}], 
            LineBox[{{0., 98.5}, Offset[{-4., 0.}, {0., 98.5}]}], 
            LineBox[{{0., 99.5}, Offset[{-4., 0.}, {0., 99.5}]}], 
            LineBox[{{0., 99.5}, Offset[{-4., 0.}, {0., 99.5}]}]}, {}}}, 
         StyleBox[
          {Thickness[Tiny], 
           InsetBox["\<\"Vienna\"\>", Offset[{-2, 0}, {0., 1.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Zurich\"\>", Offset[{-2, 0}, {0., 2.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Munich\"\>", Offset[{-2, 0}, {0., 3.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Auckland\"\>", Offset[{-2, 0}, {0., 4.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Vancouver\"\>", Offset[{-2, 0}, {0., 5.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"D\[UDoubleDot]sseldorf\"\>", 
            Offset[{-2, 0}, {0., 6.}], {1, 0}, Automatic, {1, 0}], 
           InsetBox["\<\"Frankfurt\"\>", Offset[{-2, 0}, {0., 7.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Geneva\"\>", Offset[{-2, 0}, {0., 8.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Copenhagen\"\>", Offset[{-2, 0}, {0., 9.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Basel\"\>", Offset[{-2, 0}, {0., 10.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Sydney\"\>", Offset[{-2, 0}, {0., 11.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Amsterdam\"\>", Offset[{-2, 0}, {0., 12.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Berlin\"\>", Offset[{-2, 0}, {0., 13.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Bern\"\>", Offset[{-2, 0}, {0., 14.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Wellington\"\>", Offset[{-2, 0}, {0., 15.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Toronto\"\>", Offset[{-2, 0}, {0., 16.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Melbourne\"\>", Offset[{-2, 0}, {0., 17.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Luxemburg\"\>", Offset[{-2, 0}, {0., 18.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Ottawa\"\>", Offset[{-2, 0}, {0., 19.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Hamburg\"\>", Offset[{-2, 0}, {0., 20.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Perth\"\>", Offset[{-2, 0}, {0., 21.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Montreal\"\>", Offset[{-2, 0}, {0., 22.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Stockholm\"\>", Offset[{-2, 0}, {0., 23.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Nuremberg\"\>", Offset[{-2, 0}, {0., 24.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Singapore\"\>", Offset[{-2, 0}, {0., 25.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Oslo\"\>", Offset[{-2, 0}, {0., 26.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Brussels\"\>", Offset[{-2, 0}, {0., 27.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Stuttgart\"\>", Offset[{-2, 0}, {0., 28.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Adelaide\"\>", Offset[{-2, 0}, {0., 29.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"San Francisco\"\>", Offset[{-2, 0}, {0., 30.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Canberra\"\>", Offset[{-2, 0}, {0., 31.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Helsinki\"\>", Offset[{-2, 0}, {0., 32.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Calgary\"\>", Offset[{-2, 0}, {0., 33.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Dublin\"\>", Offset[{-2, 0}, {0., 34.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Boston\"\>", Offset[{-2, 0}, {0., 35.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Honolulu\"\>", Offset[{-2, 0}, {0., 36.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Brisbane\"\>", Offset[{-2, 0}, {0., 37.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Lisbon\"\>", Offset[{-2, 0}, {0., 38.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Paris\"\>", Offset[{-2, 0}, {0., 39.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Lyon\"\>", Offset[{-2, 0}, {0., 40.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"London\"\>", Offset[{-2, 0}, {0., 41.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Milan\"\>", Offset[{-2, 0}, {0., 42.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Barcelona\"\>", Offset[{-2, 0}, {0., 43.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Seattle\"\>", Offset[{-2, 0}, {0., 44.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"New York City\"\>", Offset[{-2, 0}, {0., 45.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Edinburgh\"\>", Offset[{-2, 0}, {0., 46.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Chicago\"\>", Offset[{-2, 0}, {0., 47.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Washington\"\>", Offset[{-2, 0}, {0., 48.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Madrid\"\>", Offset[{-2, 0}, {0., 49.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Tokyo\"\>", Offset[{-2, 0}, {0., 50.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Kobe\"\>", Offset[{-2, 0}, {0., 51.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Birmingham\"\>", Offset[{-2, 0}, {0., 52.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Glasgow\"\>", Offset[{-2, 0}, {0., 53.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Philadelphia\"\>", Offset[{-2, 0}, {0., 54.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Yokohama\"\>", Offset[{-2, 0}, {0., 55.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Rome\"\>", Offset[{-2, 0}, {0., 56.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Aberdeen\"\>", Offset[{-2, 0}, {0., 57.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Osaka\"\>", Offset[{-2, 0}, {0., 58.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Pittsburgh\"\>", Offset[{-2, 0}, {0., 59.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Leipzig\"\>", Offset[{-2, 0}, {0., 60.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Minneapolis\"\>", Offset[{-2, 0}, {0., 61.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Nagoya\"\>", Offset[{-2, 0}, {0., 62.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Dallas\"\>", Offset[{-2, 0}, {0., 63.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Belfast\"\>", Offset[{-2, 0}, {0., 64.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Atlanta\"\>", Offset[{-2, 0}, {0., 65.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Houston\"\>", Offset[{-2, 0}, {0., 66.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Los Angeles\"\>", Offset[{-2, 0}, {0., 67.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Miami\"\>", Offset[{-2, 0}, {0., 68.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Prague\"\>", Offset[{-2, 0}, {0., 69.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Saint Louis\"\>", Offset[{-2, 0}, {0., 70.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Hong Kong\"\>", Offset[{-2, 0}, {0., 71.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Point\[Hyphen]a\[Hyphen]Pitre\"\>", 
            Offset[{-2, 0}, {0., 72.}], {1, 0}, Automatic, {1, 0}], 
           InsetBox["\<\"Detroit\"\>", Offset[{-2, 0}, {0., 73.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Ljubljana\"\>", Offset[{-2, 0}, {0., 74.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Dubai\"\>", Offset[{-2, 0}, {0., 75.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Budapest\"\>", Offset[{-2, 0}, {0., 76.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Seoul\"\>", Offset[{-2, 0}, {0., 77.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Abu Dhabi\"\>", Offset[{-2, 0}, {0., 78.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Montevideo\"\>", Offset[{-2, 0}, {0., 79.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Bratislava\"\>", Offset[{-2, 0}, {0., 80.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Vilnius\"\>", Offset[{-2, 0}, {0., 81.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Warsaw\"\>", Offset[{-2, 0}, {0., 82.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Port Louis\"\>", Offset[{-2, 0}, {0., 83.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Taipei City\"\>", Offset[{-2, 0}, {0., 84.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Kuala Lumpur\"\>", Offset[{-2, 0}, {0., 85.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Lemesos\"\>", Offset[{-2, 0}, {0., 86.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Tallinn\"\>", Offset[{-2, 0}, {0., 87.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Durban\"\>", Offset[{-2, 0}, {0., 88.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Athens\"\>", Offset[{-2, 0}, {0., 89.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Riga\"\>", Offset[{-2, 0}, {0., 90.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Buenos Aires\"\>", Offset[{-2, 0}, {0., 91.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"San Juan\"\>", Offset[{-2, 0}, {0., 92.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Santiago\"\>", Offset[{-2, 0}, {0., 93.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Busan\"\>", Offset[{-2, 0}, {0., 94.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Cape Town\"\>", Offset[{-2, 0}, {0., 95.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Johannesburg\"\>", Offset[{-2, 0}, {0., 96.}], {1, 0},
             Automatic, {1, 0}], 
           InsetBox["\<\"Panama\"\>", Offset[{-2, 0}, {0., 97.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Zagreb\"\>", Offset[{-2, 0}, {0., 98.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Victoria\"\>", Offset[{-2, 0}, {0., 99.}], {1, 0}, 
            Automatic, {1, 0}], 
           InsetBox["\<\"Wroc\[LSlash]aw\"\>", Offset[{-2, 0}, {0., 100.}], {1, 0},
             Automatic, {1, 0}]}, "GraphicsLabel",
          StripOnInput->False]}, "GraphicsTicks",
        StripOnInput->False]},
      Antialiasing->False], "GraphicsAxes",
     StripOnInput->False]}, {
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6931560262371375, 1.}, {0.7094780254912796, 1.}}], 
        LineBox[{{0.7094780254912796, 1.}, {0.7258000247454217, 1.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.607094289536996, 2.}, {0.6212207674326335, 2.}}], 
        LineBox[{{0.6212207674326335, 2.}, {0.6353472453282714, 2.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6626990001926303, 3.}, {0.6756641062959439, 3.}}], 
        LineBox[{{0.6756641062959439, 3.}, {0.6886292123992575, 3.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.611925978309487, 4.}, {0.6271725928863408, 4.}}], 
        LineBox[{{0.6271725928863408, 4.}, {0.6424192074631945, 4.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6460870639090937, 5.}, {0.6601309524686281, 5.}}], 
        LineBox[{{0.6601309524686281, 5.}, {0.6741748410281625, 5.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5962777591805315, 6.}, {0.6075730642972506, 6.}}], 
        LineBox[{{0.6075730642972506, 6.}, {0.6188683694139696, 6.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5823675022695207, 7.}, {0.5967706220207534, 7.}}], 
        LineBox[{{0.5967706220207534, 7.}, {0.611173741771986, 7.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5663558216809923, 8.}, {0.577123250519846, 8.}}], 
        LineBox[{{0.577123250519846, 8.}, {0.5878906793586998, 8.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.609306240623761, 9.}, {0.6228594834244063, 9.}}], 
        LineBox[{{0.6228594834244063, 9.}, {0.6364127262250516, 9.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.602589516913655, 10.}, {0.6152352433003045, 10.}}], 
        LineBox[{{0.6152352433003045, 10.}, {0.6278809696869541, 10.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6243519348133741, 11.}, {0.642157870797389, 11.}}], 
        LineBox[{{0.642157870797389, 11.}, {0.6599638067814038, 11.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5962786054454714, 12.}, {0.6081083005439467, 12.}}], 
        LineBox[{{0.6081083005439467, 12.}, {0.619937995642422, 12.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5973894087981311, 13.}, {0.6119525994424233, 13.}}], 
        LineBox[{{0.6119525994424233, 13.}, {0.6265157900867155, 13.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6107708292821119, 14.}, {0.6258592853246725, 14.}}], 
        LineBox[{{0.6258592853246725, 14.}, {0.6409477413672331, 14.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6003538775350705, 15.}, {0.6144830048531489, 15.}}], 
        LineBox[{{0.6144830048531489, 15.}, {0.6286121321712272, 15.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6383251182735634, 16.}, {0.6556192762962425, 16.}}], 
        LineBox[{{0.6556192762962425, 16.}, {0.6729134343189216, 16.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6402367918194223, 17.}, {0.6560237091036711, 17.}}], 
        LineBox[{{0.6560237091036711, 17.}, {0.67181062638792, 17.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5792577349766397, 18.}, {0.5904025661158769, 18.}}], 
        LineBox[{{0.5904025661158769, 18.}, {0.6015473972551142, 18.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6029986181541211, 19.}, {0.6179754290700181, 19.}}], 
        LineBox[{{0.6179754290700181, 19.}, {0.6329522399859151, 19.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.607561314375463, 20.}, {0.6187137861652978, 20.}}], 
        LineBox[{{0.6187137861652978, 20.}, {0.6298662579551326, 20.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6525039814250775, 21.}, {0.6692109538724829, 21.}}], 
        LineBox[{{0.6692109538724829, 21.}, {0.6859179263198882, 21.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6323408491114471, 22.}, {0.6453909853282944, 22.}}], 
        LineBox[{{0.6453909853282944, 22.}, {0.6584411215451418, 22.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5732056294699852, 23.}, {0.5886012686753652, 23.}}], 
        LineBox[{{0.5886012686753652, 23.}, {0.6039969078807452, 23.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5329560968633658, 24.}, {0.5448160664477548, 24.}}], 
        LineBox[{{0.5448160664477548, 24.}, {0.5566760360321439, 24.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6151323036093927, 25.}, {0.6354121176869114, 25.}}], 
        LineBox[{{0.6354121176869114, 25.}, {0.6556919317644301, 25.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6270185786480234, 26.}, {0.6394968932809135, 26.}}], 
        LineBox[{{0.6394968932809135, 26.}, {0.6519752079138037, 26.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5609547623451583, 27.}, {0.5795979805937392, 27.}}], 
        LineBox[{{0.5795979805937392, 27.}, {0.5982411988423202, 27.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5870883811481669, 28.}, {0.5989295024826085, 28.}}], 
        LineBox[{{0.5989295024826085, 28.}, {0.61077062381705, 28.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6438315328996005, 29.}, {0.6619629406513248, 29.}}], 
        LineBox[{{0.6619629406513248, 29.}, {0.680094348403049, 29.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.572425284795667, 30.}, {0.5827312202237245, 30.}}], 
        LineBox[{{0.5827312202237245, 30.}, {0.5930371556517819, 30.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5997928165660724, 31.}, {0.6118390321474507, 31.}}], 
        LineBox[{{0.6118390321474507, 31.}, {0.623885247728829, 31.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5791223061268234, 32.}, {0.5912288909846524, 32.}}], 
        LineBox[{{0.5912288909846524, 32.}, {0.6033354758424849, 32.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6732903202081246, 33.}, {0.6893609002730727, 33.}}], 
        LineBox[{{0.6893609002730727, 33.}, {0.7054314803380208, 33.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6043150315818124, 34.}, {0.6194426043074017, 34.}}], 
        LineBox[{{0.6194426043074017, 34.}, {0.634570177032991, 34.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6648449502564873, 35.}, {0.6807395187456535, 35.}}], 
        LineBox[{{0.6807395187456535, 35.}, {0.6966340872348198, 35.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6079208557048972, 36.}, {0.6203486508741847, 36.}}], 
        LineBox[{{0.6203486508741847, 36.}, {0.6327764460434722, 36.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5922896194692697, 37.}, {0.606412856421727, 37.}}], 
        LineBox[{{0.606412856421727, 37.}, {0.6205360933741844, 37.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6377319288732863, 38.}, {0.6513873815366722, 38.}}], 
        LineBox[{{0.6513873815366722, 38.}, {0.665042834200058, 38.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6293688606094037, 39.}, {0.6430268477412966, 39.}}], 
        LineBox[{{0.6430268477412966, 39.}, {0.6566848348731895, 39.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5714504588434224, 40.}, {0.5822887528259315, 40.}}], 
        LineBox[{{0.5822887528259315, 40.}, {0.5931270468084406, 40.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7010851947862093, 41.}, {0.7181963600080365, 41.}}], 
        LineBox[{{0.7181963600080365, 41.}, {0.7353075252298638, 41.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5815781739533534, 42.}, {0.5933273561474977, 42.}}], 
        LineBox[{{0.5933273561474977, 42.}, {0.6050765383416419, 42.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6271108959506861, 43.}, {0.6411733052568422, 43.}}], 
        LineBox[{{0.6411733052568422, 43.}, {0.6552357145629983, 43.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6299308561489241, 44.}, {0.6455747219833583, 44.}}], 
        LineBox[{{0.6455747219833583, 44.}, {0.6612185878177925, 44.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6292783323557103, 45.}, {0.6427329190005509, 45.}}], 
        LineBox[{{0.6427329190005509, 45.}, {0.6561875056453914, 45.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6927886940793755, 46.}, {0.7078756726789237, 46.}}], 
        LineBox[{{0.7078756726789237, 46.}, {0.7229626512784719, 46.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.651774791587421, 47.}, {0.6686434667623473, 47.}}], 
        LineBox[{{0.6686434667623473, 47.}, {0.6855121419372736, 47.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5933338838894073, 48.}, {0.603367376584174, 48.}}], 
        LineBox[{{0.603367376584174, 48.}, {0.6134008692789408, 48.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6284559513894123, 49.}, {0.6410998023559031, 49.}}], 
        LineBox[{{0.6410998023559031, 49.}, {0.6537436533223939, 49.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6048896989249286, 50.}, {0.6178391396997895, 50.}}], 
        LineBox[{{0.6178391396997895, 50.}, {0.6307885804746505, 50.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5896378073164854, 51.}, {0.6042482536796214, 51.}}], 
        LineBox[{{0.6042482536796214, 51.}, {0.6188587000427574, 51.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5997231691138012, 52.}, {0.6169263018799143, 52.}}], 
        LineBox[{{0.6169263018799143, 52.}, {0.6341294346460273, 52.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.617183207082185, 53.}, {0.6314432779959915, 53.}}], 
        LineBox[{{0.6314432779959915, 53.}, {0.6457033489097981, 53.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7522961627444431, 54.}, {0.7693070541839617, 54.}}], 
        LineBox[{{0.7693070541839617, 54.}, {0.7863179456234803, 54.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6394597468001137, 55.}, {0.6494507487080554, 55.}}], 
        LineBox[{{0.6494507487080554, 55.}, {0.6594417506159971, 55.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.673977709853304, 56.}, {0.6915183102232163, 56.}}], 
        LineBox[{{0.6915183102232163, 56.}, {0.7090589105931286, 56.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6531908043624526, 57.}, {0.6684087477904157, 57.}}], 
        LineBox[{{0.6684087477904157, 57.}, {0.6836266912183788, 57.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5997613166035691, 58.}, {0.6122542954549175, 58.}}], 
        LineBox[{{0.6122542954549175, 58.}, {0.6247472743062659, 58.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.714377631184874, 59.}, {0.7291236152289429, 59.}}], 
        LineBox[{{0.7291236152289429, 59.}, {0.7438695992730118, 59.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5925146944734934, 60.}, {0.6037592118143635, 60.}}], 
        LineBox[{{0.6037592118143635, 60.}, {0.6150037291552337, 60.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6497570523106688, 61.}, {0.6654253778903083, 61.}}], 
        LineBox[{{0.6654253778903083, 61.}, {0.6810937034699478, 61.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5816489707111003, 62.}, {0.5918609488721742, 62.}}], 
        LineBox[{{0.5918609488721742, 62.}, {0.6020729270332481, 62.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6422076264530645, 63.}, {0.6590054983662696, 63.}}], 
        LineBox[{{0.6590054983662696, 63.}, {0.6758033702794748, 63.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5560470449513986, 63.99999999999999}, {0.5732692378453024,
          63.99999999999999}}], 
        LineBox[{{0.5732692378453024, 63.99999999999999}, {0.5904914307391991,
          63.99999999999999}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7065082158336509, 65.}, {0.7226632958240913, 65.}}], 
        LineBox[{{0.7226632958240913, 65.}, {0.7388183758145317, 65.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6286383699081171, 66.}, {0.6442027645871207, 66.}}], 
        LineBox[{{0.6442027645871207, 66.}, {0.6597671592661243, 66.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7413000728510326, 67.}, {0.7552147912593625, 67.}}], 
        LineBox[{{0.7552147912593625, 67.}, {0.7691295096676924, 67.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6551862255091407, 68.}, {0.6731402126966799, 68.}}], 
        LineBox[{{0.6731402126966799, 68.}, {0.691094199884219, 68.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6463920133120951, 69.}, {0.6688696022390701, 69.}}], 
        LineBox[{{0.6688696022390701, 69.}, {0.6913471911660451, 69.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5968182929156427, 70.}, {0.6099620245815771, 70.}}], 
        LineBox[{{0.6099620245815771, 70.}, {0.6231057562475115, 70.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7046769634126235, 71.}, {0.7208262198633406, 71.}}], 
        LineBox[{{0.7208262198633406, 71.}, {0.7369754763140577, 71.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6977079224091227, 72.}, {0.7308789359809964, 72.}}], 
        LineBox[{{0.7308789359809964, 72.}, {0.7640499495528701, 72.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7333973890230396, 73.}, {0.7473671856270556, 73.}}], 
        LineBox[{{0.7473671856270556, 73.}, {0.7613369822310716, 73.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6218319786978981, 74.}, {0.6341843233597331, 74.}}], 
        LineBox[{{0.6341843233597331, 74.}, {0.6465366680215681, 74.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6985158103175308, 75.}, {0.7126700149778458, 75.}}], 
        LineBox[{{0.7126700149778458, 75.}, {0.7268242196381607, 75.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6526980686446393, 76.}, {0.6672353553106376, 76.}}], 
        LineBox[{{0.6672353553106376, 76.}, {0.6817726419766359, 76.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.697828385657786, 77.}, {0.7139325409556392, 77.}}], 
        LineBox[{{0.7139325409556392, 77.}, {0.7300366962534923, 77.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6161548514941018, 78.}, {0.6299217123238776, 78.}}], 
        LineBox[{{0.6299217123238776, 78.}, {0.6436885731536535, 78.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5769676913913457, 79.}, {0.587602025904431, 79.}}], 
        LineBox[{{0.587602025904431, 79.}, {0.5982363604175163, 79.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6000718332992534, 80.}, {0.6122906910805455, 80.}}], 
        LineBox[{{0.6122906910805455, 80.}, {0.6245095488618375, 80.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6072573886117851, 81.}, {0.6190112425319967, 81.}}], 
        LineBox[{{0.6190112425319967, 81.}, {0.6307650964522082, 81.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6417502598538931, 82.}, {0.6606208248101524, 82.}}], 
        LineBox[{{0.6606208248101524, 82.}, {0.6794913897664117, 82.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7063442694693549, 83.}, {0.722870721151537, 83.}}], 
        LineBox[{{0.722870721151537, 83.}, {0.7393971728337192, 83.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6588306323458539, 84.}, {0.6755916260057404, 84.}}], 
        LineBox[{{0.6755916260057404, 84.}, {0.6923526196656269, 84.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6500478008457975, 85.}, {0.6643699915041452, 85.}}], 
        LineBox[{{0.6643699915041452, 85.}, {0.6786921821624929, 85.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5202163656607297, 86.}, {0.5237996092979671, 86.}}], 
        LineBox[{{0.5237996092979671, 86.}, {0.5273828529352045, 86.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6067654704210526, 87.}, {0.6221696104079371, 87.}}], 
        LineBox[{{0.6221696104079371, 87.}, {0.6375737503948216, 87.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6011939060913676, 88.}, {0.6200590250592342, 88.}}], 
        LineBox[{{0.6200590250592342, 88.}, {0.6389241440271007, 88.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6204098559094007, 89.}, {0.6357645924191075, 89.}}], 
        LineBox[{{0.6357645924191075, 89.}, {0.6511193289288144, 89.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6015694747329121, 90.}, {0.6143173468333742, 90.}}], 
        LineBox[{{0.6143173468333742, 90.}, {0.6270652189338364, 90.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6387277043256177, 91.}, {0.6516626853848493, 91.}}], 
        LineBox[{{0.6516626853848493, 91.}, {0.6645976664440809, 91.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6604144565054071, 92.}, {0.6729218411962705, 92.}}], 
        LineBox[{{0.6729218411962705, 92.}, {0.685429225887134, 92.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6045387278791168, 93.}, {0.6160878510218879, 93.}}], 
        LineBox[{{0.6160878510218879, 93.}, {0.627636974164659, 93.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6684423853504313, 94.}, {0.6880512175065547, 94.}}], 
        LineBox[{{0.6880512175065547, 94.}, {0.7076600496626781, 94.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.7128052088890229, 95.}, {0.7254583695530243, 95.}}], 
        LineBox[{{0.7254583695530243, 95.}, {0.7381115302170258, 95.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.5590620488308247, 96.}, {0.5697888833456801, 96.}}], 
        LineBox[{{0.5697888833456801, 96.}, {0.5805157178605356, 96.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6051117211993216, 97.}, {0.6158174798109428, 97.}}], 
        LineBox[{{0.6158174798109428, 97.}, {0.6265232384225641, 97.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6024952581233975, 98.}, {0.6150705800784522, 98.}}], 
        LineBox[{{0.6150705800784522, 98.}, {0.6276459020335068, 98.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6004694940719304, 99.}, {0.6161860342693473, 99.}}], 
        LineBox[{{0.6161860342693473, 99.}, {0.6319025744667641, 99.}}]}},
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[{{}, {
        LineBox[{{0.6456382017611304, 100.}, {0.6575215137668522, 100.}}], 
        LineBox[{{0.6575215137668522, 100.}, {0.669404825772574, 100.}}]}},
      Antialiasing->False]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., -1.5},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{597.9642859438488, Automatic},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.05]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, None}]], "Output",
 CellChangeTimes->{
  3.7714538701095057`*^9, 3.771494004367584*^9, {3.7714940668059607`*^9, 
   3.7714940808827353`*^9}, 3.771494470980624*^9, 3.771670999214221*^9, 
   3.771690382504343*^9, 3.771703748413437*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"49fbb9e6-ced3-44ae-a53d-168fc530af80"]
}, Open  ]],

Cell["\<\
As we can see, there is not much variance between cities, in terms of Tweets \
sentiment.\[LineSeparator]Lets compile multiple rankings together, assuming \
that they have had a more complete model for estimating the quality of life \
and satisfaction.\
\>", "Text",
 CellChangeTimes->{{3.7711983003938007`*^9, 3.771198312367927*^9}, {
  3.771198345411821*^9, 3.771198357701936*^9}, {3.771251296055133*^9, 
  3.77125134665545*^9}},ExpressionUUID->"04da58f6-384a-4c46-83b1-\
c68f03702b2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"citiesPositivness", " ", "=", " ", 
   RowBox[{"RescaleIntoInterval", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"N", "[", 
         RowBox[{"1", "/", "#"}], "]"}], ")"}], " ", "&"}], ",", " ", 
      RowBox[{"citiesWRanks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", " ", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.771251573041683*^9, 3.7712516427852497`*^9}, {
   3.771251681036207*^9, 3.771251704933464*^9}, {3.771251831632875*^9, 
   3.77125183346624*^9}, {3.7712518687265863`*^9, 3.771251890924746*^9}, {
   3.7712520171157627`*^9, 3.7712520210598516`*^9}, {3.7712523024216223`*^9, 
   3.771252313036442*^9}, {3.771252358229828*^9, 3.771252384365079*^9}, 
   3.771254209551516*^9, {3.771326746956266*^9, 3.771326771914145*^9}, {
   3.771352572620476*^9, 3.7713525747253933`*^9}, {3.771356329990806*^9, 
   3.771356345784625*^9}, 3.7715403486804132`*^9, 3.7716033338055563`*^9, 
   3.771704761287937*^9},ExpressionUUID->"a58ae607-e3f4-479d-9dc6-\
6664faa1cf71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Are there any correlations at all?", "Subtitle"]], \
"Chapter",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 
  3.7711017049214983`*^9}},ExpressionUUID->"8a65fa07-75ab-4cd8-9e92-\
75fdfaaad169"],

Cell["wew", "Text",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 3.7711017038951178`*^9}, {3.771101737640126*^9, 
  3.771101738955223*^9}, {3.771102348054689*^9, 
  3.771102348771636*^9}},ExpressionUUID->"1e314e11-051b-4643-8db0-\
01d456f6b7b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NormalizeFeatures", "[", "rowsPerSample_List", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rowsPerFeature", ",", " ", "rowsPerFeatureNormalized"}], "}"}],
      ",", "\n", "\t", 
     RowBox[{
      RowBox[{"rowsPerFeature", " ", "=", " ", 
       RowBox[{"Transpose", "[", "rowsPerSample", "]"}]}], ";", "\n", "\t", 
      RowBox[{"rowsPerFeatureNormalized", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"RescaleIntoInterval", ",", " ", "rowsPerFeature"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"Transpose", "[", "rowsPerFeatureNormalized", "]"}]}]}], "\n", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FitRegressionRect", "[", 
    RowBox[{"rowsPerSample_", ",", " ", "predictionsVals_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "inputNormalized", ",", " ", "p", ",", " ", "pLinearLayer", ",", " ", 
       "pWeights"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"Predict", "[", 
        RowBox[{
         RowBox[{"rowsPerSample", "\[Rule]", "predictionsVals"}], ",", " ", 
         RowBox[{"Method", "\[Rule]", "\"\<LinearRegression\>\""}]}], "]"}]}],
       ";", "\n", "\t", 
      RowBox[{"pLinearLayer", " ", "=", " ", 
       RowBox[{"p", "\[LeftDoubleBracket]", 
        RowBox[{
        "1", ",", " ", "\"\<Model\>\"", ",", " ", "\"\<MeanFunction\>\""}], 
        "\[RightDoubleBracket]"}]}], ";", "\n", "\t", 
      RowBox[{"pWeights", " ", "=", " ", 
       RowBox[{"Normal", " ", "@", " ", 
        RowBox[{
         RowBox[{
         "pLinearLayer", "\[LeftDoubleBracket]", "\"\<Arrays\>\"", 
          "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
         "\"\<Weights\>\"", "\[RightDoubleBracket]"}]}]}], ";", "\n", "\t", 
      "pWeights"}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FitRegressionSquare", "[", 
    RowBox[{"rowsPerSample_List", ",", " ", "predictionsVals_List"}], "]"}], 
   " ", ":=", " ", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "rowsPerSample", "]"}], ".", 
      "rowsPerSample"}], "]"}], ".", 
    RowBox[{"Transpose", "[", "rowsPerSample", "]"}], ".", 
    "predictionsVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RunRegression", "[", 
    RowBox[{"weights_List", ",", " ", "rowOfSample_List"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Total", "[", 
    RowBox[{"Dot", "[", 
     RowBox[{"weights", ",", " ", "rowOfSample"}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FitRegression", "[", 
    RowBox[{
    "rowsPerSample_", ",", " ", "estimatesPerSample_", ",", " ", 
     "featuresNames_List"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
      "inputTrain", ",", " ", "inputValidate", ",", " ", "outputTrain", ",", 
       " ", "outputValidate", ",", " ", "outputEstimated", ",", " ", "\n", 
       "\t\t", "modelWights", ",", " ", "error", ",", " ", "chart", ",", " ", 
       "result", ",", " ", "trainingCount"}], "\n", "\t", "}"}], ",", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"trainingCount", " ", "=", " ", 
       RowBox[{"Length", "[", "featuresNames", "]"}]}], ";", "\n", "\t", 
      RowBox[{"inputTrain", " ", "=", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"rowsPerSample", ",", " ", "trainingCount"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"outputTrain", " ", "=", " ", 
       RowBox[{"Take", "[", 
        RowBox[{"estimatesPerSample", ",", " ", "trainingCount"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"inputValidate", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"rowsPerSample", ",", " ", "trainingCount"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"outputValidate", " ", "=", " ", 
       RowBox[{"Drop", "[", 
        RowBox[{"estimatesPerSample", ",", " ", "trainingCount"}], "]"}]}], 
      ";", "\n", "\t", 
      RowBox[{"modelWights", " ", "=", " ", 
       RowBox[{"FitRegressionSquare", "[", 
        RowBox[{"inputTrain", ",", " ", "outputTrain"}], "]"}]}], ";", "\n", 
      "\t", 
      RowBox[{"outputEstimated", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"RunRegression", "[", 
            RowBox[{"modelWights", ",", " ", "#"}], "]"}], ")"}], " ", "&"}], 
         ",", " ", "inputValidate"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"error", " ", "=", " ", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"outputValidate", "-", "outputEstimated"}], ",", " ", "1"}],
          "]"}], " ", "/", " ", 
        RowBox[{"Length", "[", "outputValidate", "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"chart", " ", "=", " ", 
       RowBox[{"BarChart", "[", 
        RowBox[{"modelWights", ",", " ", 
         RowBox[{"ChartLabels", "\[Rule]", "featuresNames"}], ",", " ", 
         RowBox[{"BarOrigin", "\[Rule]", "Left"}]}], "]"}]}], ";", "\n", "\n",
       "\t", 
      RowBox[{"{", 
       RowBox[{"error", ",", " ", "chart", ",", " ", "modelWights"}], 
       "}"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.7711662130281467`*^9, 3.771166215352922*^9}, {
   3.771197303426878*^9, 3.771197321169957*^9}, 3.7711979403664637`*^9, {
   3.7712530800287*^9, 3.771253141824217*^9}, {3.771254232616996*^9, 
   3.771254234573873*^9}, {3.771254814339655*^9, 3.771254823206771*^9}, 
   3.7712553544971323`*^9, {3.771328798359071*^9, 3.77132888435972*^9}, {
   3.7713291571827993`*^9, 3.771329174673594*^9}, 3.7713293391980677`*^9, 
   3.771331075460321*^9, {3.771331205881012*^9, 3.771331248469551*^9}, {
   3.771331393724903*^9, 3.771331454273843*^9}, {3.771331858875564*^9, 
   3.771331859310504*^9}, {3.771350065960774*^9, 3.771350191065762*^9}, {
   3.77135028904036*^9, 3.77135038946412*^9}, {3.771350481018968*^9, 
   3.7713505263093023`*^9}, {3.771350558816463*^9, 3.771350563948971*^9}, {
   3.7713506446320753`*^9, 3.7713507842900333`*^9}, {3.771350817906404*^9, 
   3.771350846145687*^9}, {3.771350876488069*^9, 3.7713508841268377`*^9}, {
   3.7713509316696663`*^9, 3.7713509342461567`*^9}, {3.771350984109829*^9, 
   3.771350998574337*^9}, {3.771351055424478*^9, 3.7713510624171057`*^9}, {
   3.771351101585807*^9, 3.7713511911911087`*^9}, {3.7713512369373617`*^9, 
   3.771351250335422*^9}, {3.7713513310208883`*^9, 3.77135133335221*^9}, {
   3.771351380363995*^9, 3.7713515293458843`*^9}, {3.771351774107162*^9, 
   3.7713517906407347`*^9}, {3.7713520499554853`*^9, 3.771352315025916*^9}, {
   3.771352349303665*^9, 3.7713523510083237`*^9}, {3.7713560430968847`*^9, 
   3.7713560435384607`*^9}, {3.771356193141917*^9, 3.771356209902203*^9}, {
   3.771356247076288*^9, 3.771356263584107*^9}, {3.7713563852974243`*^9, 
   3.7713564696868773`*^9}, {3.771356591772225*^9, 3.7713566103639402`*^9}, {
   3.7713566444034557`*^9, 3.771356701197536*^9}, {3.7713567502401333`*^9, 
   3.7713567575500526`*^9}, 3.771356823846187*^9, {3.771358873740418*^9, 
   3.7713588807112637`*^9}, {3.7713590285376263`*^9, 3.771359057644163*^9}, {
   3.771359109388794*^9, 3.771359112790992*^9}, {3.7713591431612787`*^9, 
   3.77135922756713*^9}, {3.7713592619363203`*^9, 3.771359292243853*^9}, {
   3.771359372067912*^9, 3.771359374741563*^9}, {3.771360895901122*^9, 
   3.771360899433941*^9}, {3.7713610810330563`*^9, 3.77136111925381*^9}, {
   3.77136401463911*^9, 3.7713640164404716`*^9}, {3.771446660355817*^9, 
   3.771446727670577*^9}, {3.771446873632465*^9, 3.7714469866514874`*^9}, {
   3.771447225288508*^9, 3.771447245418425*^9}, {3.771447572405847*^9, 
   3.7714476354199877`*^9}, {3.7714477162181168`*^9, 3.771447722343709*^9}, {
   3.771448126328205*^9, 3.771448131249926*^9}, {3.7714481648627768`*^9, 
   3.7714481686175623`*^9}, {3.771448253260311*^9, 3.7714482857993307`*^9}, {
   3.77144844007451*^9, 3.771448451243819*^9}, {3.771448558866544*^9, 
   3.771448563297144*^9}, {3.771448764648456*^9, 3.77144876860842*^9}, {
   3.771449067102228*^9, 3.771449080131538*^9}, {3.771494289253888*^9, 
   3.771494327853054*^9}, {3.771494615217038*^9, 3.7714947103326817`*^9}, {
   3.7714948502019863`*^9, 3.771494852978088*^9}, {3.77149494734484*^9, 
   3.7714949614652967`*^9}, {3.771495406943359*^9, 3.7714954693078527`*^9}, 
   3.771495540516691*^9, {3.771495803706192*^9, 3.7714958676028767`*^9}, {
   3.771691861212635*^9, 3.771691862651863*^9}, {3.771694375623562*^9, 
   3.771694390529674*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"d54f38e5-c079-43b6-a6e9-599471a76047"],

Cell[BoxData[
 RowBox[{
  RowBox[{"citiesFeatures", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ImportAllFeaturesClean", "[", "#", "]"}], " ", "&"}], ",", " ",
      "citiesPopular"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.771350791670023*^9, 3.771350804378113*^9}, {
   3.7713508524486303`*^9, 3.77135085577607*^9}, {3.771351033358552*^9, 
   3.771351048659725*^9}, {3.771351372288561*^9, 3.771351372558053*^9}, {
   3.771352353446257*^9, 3.771352432732538*^9}, {3.771355905146647*^9, 
   3.7713559939252043`*^9}, {3.771358910281856*^9, 3.771358911513682*^9}, {
   3.7714488592558928`*^9, 3.771448865106896*^9}, 3.771690417560025*^9, {
   3.7716917617024937`*^9, 3.771691765072441*^9}, {3.771691812559931*^9, 
   3.771691826176497*^9}, {3.771691943131898*^9, 3.771691964958601*^9}, {
   3.771692100326106*^9, 3.771692166683044*^9}, 3.771694060071576*^9, 
   3.771694175211544*^9, {3.771694365496614*^9, 3.771694371469736*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"7b906042-07a2-4091-9985-37c02a3bdd1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"citiesFeaturesValues", " ", "=", " ", 
    RowBox[{"NormalizeFeatures", "[", 
     RowBox[{"Values", "[", 
      RowBox[{
      "citiesFeatures", "\[LeftDoubleBracket]", "All", 
       "\[RightDoubleBracket]"}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Transform", " ", "units", " ", "into", " ", "raw", " ", 
    RowBox[{"numbers", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"citiesFeaturesNames", " ", "=", " ", 
   RowBox[{"First", "[", 
    RowBox[{"Keys", "[", 
     RowBox[{
     "citiesFeatures", "\[LeftDoubleBracket]", "All", 
      "\[RightDoubleBracket]"}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771350791670023*^9, 3.771350804378113*^9}, {
   3.7713508524486303`*^9, 3.77135085577607*^9}, {3.771351033358552*^9, 
   3.771351048659725*^9}, {3.771351372288561*^9, 3.771351372558053*^9}, {
   3.771352353446257*^9, 3.771352432732538*^9}, {3.771355905146647*^9, 
   3.7713559939252043`*^9}, {3.771358910281856*^9, 3.771358911513682*^9}, {
   3.7714488592558928`*^9, 3.771448865106896*^9}, 3.771690417560025*^9, {
   3.7716917617024937`*^9, 3.771691765072441*^9}, {3.771691812559931*^9, 
   3.771691826176497*^9}, {3.771691943131898*^9, 3.771691964958601*^9}, {
   3.771692100326106*^9, 3.771692166683044*^9}, 3.771694060071576*^9, 
   3.771694175211544*^9, {3.771694365496614*^9, 3.771694371469736*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"be32058e-de7f-49c4-9930-e83a1bd14d48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"citiesFeaturesValues", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"#", ",", " ", "40"}], "]"}], " ", "&"}], ",", " ", 
     "citiesFeaturesValues"}], "]"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"*", " ", "Some", " ", "features", " ", "were", " ", "not", " ", 
     RowBox[{"recognized", "."}]}], ")"}]}]}]], "Code",
 CellChangeTimes->{{3.771694585964344*^9, 3.7716946321829357`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[80]:=",ExpressionUUID->"796626e7-9229-4ab3-b59e-8111135ac5f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matCovs", " ", "=", " ", 
   RowBox[{"Covariance", "[", "citiesFeaturesValues", "]"}]}], ";"}]], "Code",\

 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQfaXg6wN3yTeODZI9j0C0XnTfCxA98eoPMO1Uqf0f
RFfIiDJ6AOkn1p2aIHrS7Ylgeq+73hIQ/aVAfB2IDt2okuAFpN1m22aD6O8s
J697A2nRgg9g2s0g43A5kN6YrXwERO96bbjtLZAOK14Ipu/YZF8A0SfseK+D
6AR9Z/53QPpZO6cAiM4SUREF0Xe4X4qBaAVTOTkQzXTUDUxHMcbrgugtRgr6
IHrZFl5LEC126qU1iO79d9sJRG8PlnYBmxtzcc57IH1sMec8EB12NHoliG56
fh5MzzlvcRhEO/IFgGkAWOiTCA==
  "],
 CellLabel->"In[80]:=",ExpressionUUID->"8be1f01a-8445-4672-9c86-0e6bc45bdd45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"Abs", "[", "matCovs", "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.771691374454886*^9, 3.771691375723896*^9}, {
  3.77169441948938*^9, 3.771694436092937*^9}, {3.771694877613312*^9, 
  3.771694879872117*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"a1ee4fab-ca0a-476a-939e-0d3ea134d579"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzsfXlUTe8fNRkiGTJkyKwMGSsi1FYRCoVKIRkqlUoRjSgpJVGhKJo002DI
VGjQPEjzPN353nNOFIkG7/m96/33/Pv1x8ta1qbFvefe8zz7s/fzGc6ik2cP
mI8aMWKE0v/7/b8/DzcUXin8TcK3RkmpaRmBlWP6MmK3cjGqQIetTZC4WRlx
cO43ER4+H3tGPZWDjsNntzp2kHAbOUfj+CcRLpyqfMBR4cDvSbSenzOFhJE3
jCeNoiDq9rRPnyLCB8WLKhvEKChIv9AnNAk0ubAdE725iImNN2vSJfHd6Ivx
z2gB9v3MCNMybsdlhR2yq4UklnFUFeYJRIi7qxjn+IADPqfk4usHJGaMzG2d
9laIsHX7HaOvdmGW3lz1qEMkkr22+Rh+FODTa83YqT3tOH//50b+GxJSyqpK
X9eIMGpKjo5iBgvv2m/tmaJMwVPPzKZdnERiwYxBQy8+tvMuCstOUIioH3Fb
NoXEuciDzzYpCFHu0N5dto3EldjARdJWAhxe9j3quEIbduxZqNdLkXBYFn1x
2YAIvUZh8ieKONjYXGQ5z5aC9fVbSZx6Ep2Pmhtto4QI71ukun6YhHbrhVWl
6wmUmztJ7DvGhcmu1wdOXqdQMiH/xIotFDZaRhCRMSIY6oR3X1Sg0DD4wPly
HwHNZ3odiw35eOdtKh/Mpq9PwriYqhZh7ZapHkdPcrDcvfpCoCGFvCTFVWlX
SViY3HcryhXA1lbR9PIfEmpGpknJKgSkth1s/W3NheDciRjOaAqZmcEJM/YR
2BOm+1Y6iovke+q3PoSSMFMO6Il8JsRMY8lStbNdKDHUlTOfQyFmjobYgUgC
8oFXa0+d5+F8/cEO03ISWisrr+10FyGy94v4scts1B/1JxbvpXDitrLEZFMS
rMINW+ZbCPB5yN1C6QgFx92meuvvkgi/Vf3m8FcBBrjzb8dPpvDhaxneXCRQ
7/H1U9F4Hsada7WI0aDQPWRUYbqRROl1hXWcYT5OihJiZ9Dr4VeVxKn0V0Kc
vhf5zdq9Cwmx80LuqFGosck/JbGcRN6k2/Vi9XykXrNs6gmnkH2jKa3Nl8LB
VXILs20I1D4eOpgaRmH2285T069RMOkZY6N9nICGuGTYlSESmpmZoQsVCXh5
5IccO8TFhrp5x8fJUGAZNX1+F02gx3OlQqILD0mnWzXEN1GoiBAO6kym77Oq
4bX4ED5mNfY8iqokkaOmvyXYV4RnrX1cwwg2ggaOut+vImHYS24SCxRhQnOg
UdozNqrdnwxVulFQtOFuP09/H5MTu13IdSKMNXOTzQ2hsPnzpxr1CxScrp84
l0XfzxH/99fX/28w5m6Kiv0aAk5kt076ezYWeg/cmHW88K9f1z/8h//wH/7D
f/gP/+E//If/8B/+w3/4D//hP/yH//Af/sN/+A//4T/8h//wH/7Df/gP/+E/
/If/8B/+w3/4D//hP/yH//Af/sN/+P8j4pGvo8RKCm/EMy02tRGIGbjq/0ea
jyHBqrzdK0kUdN97ajdZgAiv8p5pKS3o3Lh0+8qZJDRXJPPPvebD+lDNAvGD
zZj6eN7+b14U9tav3b18DYWXvHuJZR4i9DwNTT/hQ0LYqf1tlL0QcnHvukM+
deL7GCeDzUcIhI3PGHvbk4MjnTt/NpuVwypFSYulQSJrw3j1X/YCTJbTc7Q8
3Ib8HQFLvDoJuBbsmFNexsMOiR19C9/Uo6cj+1SbIgFJXsaSKV/YGK6MIK70
FyKiT3f5sU8Efu3K0zHey4PC0TtJ9bm1+DPyqnUNSPTtKBl3xlyAoMRJu3Xm
t8H6iRJ1wIDE8NuRkY9fCVBWs4D/5VM7DpmFu4e5E+jgOKZ4TeNi+Fkc+9LX
SmQumDTntx8F31eu0T+2U9C7f33W3CwRhlJ/P7O8TyJ9lW3L4pdCjGqaJVV4
oQufs/bHOLWRsD5ceqKN/ncfvj6IObaUg1WPKA/dcAq7mkzsLvhQEEpIhLpa
ELitQ3BXsEj4cHwdHlWIsGTDw+vX9TkYVzWre28AheZxe91991NQ3KD/qLJF
BKd1Ox673SHgqJqQGeTEhYaO8aYxrlVQ8ai+vv0bCXXpy9MFowicOddfvqyd
A5H1R42bgSTCBFdO2YUIIXJ9s9preRc8jU5l3UwnYSi2Mu7IZPo6pfhPJp5i
YehlYlx4FIXhqZ97XMIo6PfncP3DCGwwWTiCs4xE4LE1zqEjBPA2bFbIONeC
c4cjLTrHkbDY1xfW58xHWbxPjKZJEyIyWsRHDBCYmflqh+ZWPtg9fCdvu0bs
/hIh+CBDYdSE6GCbWPrz9xfvT/bg4fyt6/WC6yS6n1UVlV8Qol8hzyCuuhPl
7w1ku/eQaHmimtodIgD38+2TnAXtiHvlLXzQQyJHM1i6dxwB5yXSmzUJDuJs
R9xSrScxtc3W8na0CMLYnVcN29kQ/5h63cac/n4uds9w7RWAs+K8a4JHB5Jl
5uW1G1M4tS+cv+42iTSLoy56LAECLpmoJpkQiE84OFXpJgdJI0/8uf2mHCc+
1qpxnpHwDdlzwWG6CM6ysWU77VlI3ZXbVG9FIatpdq5vKb2u7z9M2uEhxK3f
m9RlTlC47yWt4p1MIv/gk0sW8kI46UZP3qdKQadvjd7WJSROPru3z6uED4mg
kdpjS0XgBm33+yrBQsP1XdlXxr386/zxXyNTf5b46E9y/ocpvCuMvv4miITn
0rnDbIEAB9IjIsYvotfVEp+kM28IZBas8kp5yUOEhf6A3ygK42skf/buIrBb
Tf3l+2Au7j1xTd5wkEKV0ENM7CKJyvTPvp+jBZhzLW3AxZrCnK3+FmQ5CZHu
G8UrPkIY60aNOzKC5kNV6frUg3x0Bg6UxpQ0Qrbu3nqPtRRkvs4umtpNwGJd
fkStBh8Gg7OdZnFJHN76M+pZowhzPdY+M3LgIHdqZGmEGH3dFb0bQkz4aJea
kBnyrRF9+7/2jrhL4vaZJ1aXHgtxEsueump3QXHbGePsBRQ48Ypnb78gcPik
3MrxiTxExpyd269Oof+W8oGW9fT7UBm2R/r5uKR7tmrrDBJGpGPsiDQ+du8a
m1ih0Az98ac2VKSRSH0/kO4vKUKYmJ3Y+yMs/LZzT8lUpCB2cmnIbnq/rtEJ
zAg7yYfVTN+3hucpSI5TMbPuJuHVZrI7rFWIIsliZ2oshQ/Ph/PyDQiMm7+z
d8ZLLtJ12gNf+FIwOnIoa8k2Cq86W6KC00Q4/kRl48FfJKjSsrNHFhMoUl7y
wHgNF2LzfHOubiIx3b/9qfpuAVbXqolfDWxFi83dA622FG7EWze9ayIxnuO/
uCxBiAPTtJ/toONORtGf3Eg6jq1ZEViywVWEu+VOw88CKTyM0UwyOkZBfq5x
jOywCL/nrjBRpvf1sfqq0vSbJPaGXnf/3CLAi/oD3aqnKdT90DrzModEJy/g
3EsLIcY6dJe/XUbhiYpb0LMvBI5pf9Cx7uPBSstN6/d0Cplu9ScabxDYJb3K
S1aNhydzd3+6aklB216y40oBzYvHU+RXnxdiy97oSavpv++Xfv572gkR7LcF
az7ayIblyL2vqi5ReJuy79K4mRS6OIM58dtFqGp+qL/GlIKdW3GI2mMSg13+
ES4zhTi8WCLX5yiFIY+sROUHJJwuHFY+OSTA0SjbApd7FMacYY2ysqegckHj
98LVBFKOzz5ZfJfClsVZLhX09/e9Y962I0sJDPn/cvYvIZHR3LcmxEGEa9Vq
gwEn2SifyZ0ZWkPims/+FP9QEYJWzx6rnc/GTNt0b68DFAb2ZjYeP0+vo7ov
If1h9P35fTVpvQn9fsSxssJw+uefKffJo4V4rHWj0jqKgLr8I2JROhd3hfVx
l4yqGfntb/PKf41M/ad/ni7P2+5E719Dfo/mMAmPZxJOm0eLUNLwRmVrAgmV
6CCFFYQQzelVGR7iLIxfxh/eQe+7VYTWkt0HCZz9XjQ2IoWLlBkFdtfMKESE
dGVZviYxqntLJaEjRPkmM6nkTRTy9xsrvJAicX743WvuQz4i5O5mP1Om97Nc
2zI9dQFM7VZ81XRoxRsFtWgb+v9bzuqtMVghgv4K4xOR8Szckc1hL+CTcJVS
sj7aKcJHsZNS2t4cHFeL2HBcjoRDYMLrOz/4WH81JvvkzhYUHP48PT6WRFX7
4PxTXUI0GQSGTae6sNjqWLvoJ4kkqa3BE+cReBq5+2nAQi4uWMTt/ipJ4avP
qwJnGwIjtCpYC7u5uO+68WWsIYn133p/R2YKUBKq9TGnrR1mypm94xtIPNnC
y78TK0KI+64ra3lsyMROd5el9SSvdpPucjsB5CK7f+XotMHqxTSfpzMo/PLi
dbsGEDinGO0+uJ2H5admlv2KpJB3dtRR6fsUyMCxMgZ3CfD6VCfkJ5J4pJ4e
8OObEPp/3BPvSbOwW358iok0hcsuXsazAgnoPM5JK9bhITW+ava4E/Tn0ti6
vLNLgKjIxfFuBh2Ynpw4Z4cDhdNLzsx8wCPRdvtO5vZiIZIGqt0DY0iMky2p
uNokRLxewZ/Qxi5UT7+eHi5FYe06F/a8ywSmvjm/Z+w8HsJHSw51faHv68+R
ZvoBIuzO0rB/ncyG15FF3wce0fHRLb7kNs1/3MN53TkeBOZbOS7Wo+NlZVHQ
+o4+Eo1zr3eMpD9Hct81h3UuFB7tiOryHkMhu112vsxMEd4ppxh/nE3BWCXt
avtDAs+UxDTG2vJAPfjdGLGVwv6wfNX4hbRezrFSKs7jg89RPH37LYmhidd7
TiuIIAo29XmUyYKKNO67HKegpsU3Xkx/f4Oj/G4ryArxoZLXkZxLwlFGe/jL
Qfp+8bKVF81g44lmwQtjWQoLc1Ybf6X1+41bFqtVa3moWjCX26BN6zetJoHk
bQGm54pbtfe14T0/IspZm95HXRO/DOqTiLzfLknoCGD4nBXZ+L+++JezzuTQ
92Hx8ek/F9kK8DTs+NCWfgKqU+NE8uv42LusaEGvWiOuH5Lo8/1BoLJ5zc+j
snxs67Y3857SyMhvTPrtb/PKf41M/fXUx+mnWFcoSFju21g3n4KbufboXiMR
tn+dv6ghmkRPhbF8Sb0QOgaifq+qLqy5diXJlP53Rj9N3hxOJSAh/JN0OYyH
aMOzs+Vo/az/uXo3p4jEr/dTMyxdhFC8diYmdQWFq9Pcp0k3EjgiqdQeO56P
zCPJ1hq0L5C1l/hz8q4AF72WiMVMbcdJbt4nRVqff/2hJfFZSgSpCefv2lqx
EKy8I2jlIIlPkaXpMnS8fLk99pyeNhezGjd4bNhJYuvOIxZ7PQWwa5ynczit
DdUKL5eY09dh3pb76KIVHcf7JzbZ7GXjV3+L6Ok0CtsES9+S3gTaFfjiRgo8
NLRtVnlG65IvE87fSe0gYKc0Ks1iHh+H1EpOeNqT0B5f/8V4nhCLi1TsgskO
lH/OP7+umMTm4rFdF21EtO/5tXqLARuhG2RGXFYn0SW2d8OLMwIkhrvu+qXW
Bu7BoK8f1tM68N2MaDatHztUwxefushH7YEFVuNp/pKN17gs7UpBboff3L1a
BOTzwhvFaB7ui+Dq/m4XovPjmC2VvC74UN/PPRpP76OFY1MEpgQaXg0vvljB
xYTB7UkrHejvTb1Go3WBEPLU62lzv3dAfERsWgb9+rF2Bq7R7vTnm9hzXLiH
QOp850t6EST2JPv5ny+hdaG0zLaqtC4E58991zWJQqnVpG015wmkOdT+1BTj
4XjWq8V5hSQmxvxxmHpaRMerhhvrd7JhG9Y0dZc/hU0m7EjWblpXzvaJp4pE
eNuxtlnnNoXQ72+NJ9M6blbq2VtmX0Uwvbsg5PENCsUnaqQu7qQg/est9ShX
hJyurT8Gp9Jx8PyNcn0vAhpbxl4Lkefh+rMj+y/rUwg/FcxtdiVRoP2mzDZV
AIHl/cgn70nciLYe/XWbCK+myUSNYrMge7pJc8VZ2nevTFkd3U5CtX/Dhxu0
vw/zXqJ1r45EyvSMa9MiRbhTccKzo4GN5GRHt1XrKNif8sx/9I1A/7RY7rnd
fPQqjJtSr0f//+iUBc/j6Dhbd+xKik07AsLjHO6do7Dk58VxgQSJkpSXt9fU
CWGnf69jKe3zPx5SstpiRyJgzYvKewEC5Chottj+JCC789mluFV8RE2TSJ+t
0MjIb0z6jcmf/m1e+a+RaX6IUu/0RD0VWjfPUElfPp3EmaoJM/c85sNkcN/U
G5607xth8+G1Ce3LlvtRw3c7cWL5kwUbaX/yJdJmTflTEZZ7uDfcGWRjXGTq
BPNQCocfnrVIovWdldbu+0MgEHBsGn+LJwWzm1OkiCX0OheTUlttIULWceeQ
fJoHYyx+yvMpLhJXkb2ndGvQut7/xocwOu66hPz8kSWESsZexcybXbj6vWjM
1WwSUkoh7EQdEWJqH+7i/WFhkczW3gfxJCa8VviTJxBi8hu/zB0jWWhf/dtc
+IPW330lu1xmEFDeVPGlTpKLuSqPqviaFCz1NbcrbKX5xum2j+0EAQovE31W
iykUsnfMiHxPoE9+acL6XB6mdR7piBARKHG1CBv5i4fSS2YKw+YNuHb8iJa9
Kol09WH+iaMCPAl7Pkq7uxVLFn31/UbrkFUPL83SoP1f6c556ut/ClFaab5l
LO2zhC9ixSZ8pv1UX8c+724eNrh4l/6keSDe5ES02x4K5/PtilM+i7D+2YI2
1WgKn1QUv7Y9pH1/1cZDBbTfOF/DPjqO9sWUt61iQzqB3G9fSvujePg095Oe
WzyB5p3X1yeUcPHSeWp2WXY1XGdXRjjQOqy6IKSzuE0E64U75R9c5uD53l/u
krRvzbxpaPaU9ivjijnnlieJsK0x8p6WDYlpitXrj02k/diPmJI/eR1I9Gj7
4bedAltfTj5YjUT7RNMDj6QEiFnxXn2TNX2/BOeNH4wRIlPMLqwkrQPcWdss
EzRJrFHknGo7T+/nm9/7nazaQLOQ4lyazzt77iRfGkHrJe3dgUvs+SgtFvvt
Y0dhQWkktaWVxMftvTG6qULMklyo8oP2BeNuBm9jU0I8NI8YEz6JhVcavqu7
6DgSG3HkovRZEXovDIyadJSND5LPM3MtSTyHEXfGCFqH3Zbaez66A5cjE6La
aZ43j/6wz3uxENfOlnWPHqD16otrgV75JEbci7x655gIlb27jWUU2HDpcZrZ
Tq/b0PDrL/SX0n6668YKBzpebZfx9e3JIDDpicXR3ZN4aBk3xvtzSQ3uqDcX
pUnQPKtXk9ziQfu9q+uT9N2bGPmNSb8x+VOm87e/zSv/NTLNR1oofWT8qEx6
PaguU2cri1CQ+QxdxSxcunBD+6EZgd6kldKhyRxcCbENikyogMG+VaOrmuh9
vW/pab80HrZ37lkuvqMeq0eeMl1wncSUUPeXlefo+J4su6e9tBP5s61WpNwm
YBuzdjNhwUX4Hb/VNzdV4fLMxOzyvQSqHwjlguZ24t5EDYWuACfsrE51HnAg
kFOqMEOKw0FD+6aUCpVKGPW1p72NIFD7Nqg8M5GLikL5mlNbquHHrnrqekME
Xf17L55+7UT2pgOyMpe9sS0UekUyBOYuyoyZY8PG/SC/x/ptn3Cc825+ohmJ
GJYc785XAW75qvyZ69KBA/z7ClQc7U+3qP3azKPjnKxCUMrvLuy5kLBWs0cE
9uXVDh5OnaBOec9Rr3XBBjJnXOtJAqFfR63ujeEgurOiw/tMBTx+Ov8ZOE5A
2mGbf2YYB8VBy1d3yVdAlRe9QHYpiX1ZDi5EPx/dEzzcb+q30D5iVe78WgJy
Flld4SG0P1xrVD/QVYcnLsWlkyoJLOe/d3X24GEKVaEs8K9DT2eA/60PBJb0
dhR2K/HwtdUnjn2sFmv5qyonPqT3WeetkCXlnfh9SKvv8W83yJy9aWJG+/9D
GgVPtU05UNu/yXbfoTKYD/xovedI+1c9Z73zXzloOzD8+q5FJYbzTo3LzqH9
dsvLHK46Dx7JLa5f7tVC2J22Sa2CQKHVkjpfZx4Wdqz3fG5TBwnX8BhJmpdN
Z7henezOQ1mNUm2gax1+RznoTCkg4N4wtzZPn4eXyV0NYh21kPiln3Rbi8TT
Q9pZTZcF6A2bvDMipg3f7qh++7CcxIpxF2/pjRaAf/RWhbFnC6SkVzzKeEWv
B29xlwgpWheGxwqF9TV49UJGKuo5CWKxu6US7UvfT9w83tGJhXHHA97mHyUw
52ztfD1fDt6uT74w9KAc7062Fq8eEOGQgeNWn1YWpu6Zo5bnno0TbsY7D9oS
eLL2msuLSg7uCTVKrKo/I/0zV+M7Hd8n2ETxg6VJHNY5vfhuEh91t199rlxD
4upL1ZwJqh3o1El+1N3rwMhvTPqNyZ8ynb8x5Rf+Nq/818g0/22gYsKCflDI
mf4idu9qErvjleRfsPlwCnsQtkaHwnvS/cLTQyTeL69M5h8QYFtT0Sl32p9s
DBX79luKQhreLLy6UQSbKQ6PVGh/WjG2N11/LoUZTr8O2x0QgVy29savIAoB
uw1M15yicCtulvgbCQKWRx/cd7MiYfdu4FylGO0/pxfsvpnYAX19x8xL+yiI
cof9VtN8s0upqdeOjud6JodmdTtQWKt400FGSML22zv/0s9CKEdZRpnk0bz8
MfXsBUMRniqYzx6WYSP1eWKt3QCJkAafawfkCTiF2NlIaXLB5xuxKk0pNFrL
N8XSvJWj8vXYa9ovxjS17R48T2HyyPejWr6RuP1pasgPlhANe1f6jPYiwa59
+GXvKSFM9s5M9XnciUrXhQ8oel0+VtajfHpFWNwqcfHGSw4Ez8RNUiJJLPH/
3vCAvj7ppfnbN77vgtKefag/SIG08L9n5kzCczs3fVSiAA3fYs9ETaCvJ68+
wus0AUF8zcstXVzcdT//toL2O96PSurFvtM+6+uFgBRdPi78STkZakFBMtVk
Kj6SuPl84ILucSGodq2VUWdICIuvmggkhLiauHzBw/cdMO8Z4Wv4iEJVUf+L
+bdoP60yMNbSlY5DBz5mVZ+hEOPxWCheTcLmqNTt/DtCROjVpUSKU3gY3nzy
lBHtK8cT6ax3XIyuvPE8wpHWbd67X6t/J3FkzOEOBaEQbm4SERtHU9D+2iR9
TYeOG9+GDS0fcKHicWf/7i0UxOM2pITLkHhtnab/9BUfSV92WT0JpvUJledR
YU4h98j8PTelCIzxbZKJuEkhPemU9Ff6/j9t3HBhSp0IXcvV1ztwSFQY3QpV
qaf9rEZ+BmHNwVS/+S8HZSkMubTsNiok0C08p32lmYeetuluEfT1ze6Mnnhn
CoENJ6sdZ43gYp2bxfPZihRK3j/34NB+7oXGqaiTR/koCe5c9432v58sH8t4
HKH1eHhm2Ps+EXZ+/dMWtoSE5HtN5VqSj7LEp/vI5S2M/Mak35j8KdP5G1N+
gSl/+rd55b9GpvmW5aM1TMYYkzj6zKU3/JMAo2d/1Pk4tgNpJ0WLtgcQWKfn
13niKBdFilaqMydXIS6uMob1hQBHzL3A1ZeH94qPd1s9qcNegy/vhbTfjI9b
IjifJkLDddedLqM4WJpdcOVpC4HK80rHY1/zEFzD2803q4fzq7LRu7YTiFQe
4m+Yx8G5H69aL+uWQN7nmW16EK27NB4HvD3LxfZNZ0rlj1TBmFM5RfUegXOL
Ni/BFS6Oxpaf3ni/CgPuzvfUdhJYMK1jw0p5DqjddqG2GSUgHpceW9VAYKVF
Xf+Pxzzs2pwQfmVmPQJulilrS/4v3yGxeYw1gaLZR+5m87mQ+mZjW7aTwoi5
kRYsen1dvaWyIkFBAI9c1c/sVbRuXDphVvcrNpZ2rlLsky9ErXq6k5eIxGq/
nmx5SoQHlfq6D+I5qDnfumPKERKVh8xZB8sEUPQc7Kia0wFd30GfWbspSC+Y
f6BEl8QP+za902oCzH6b/d3kDoWlOr6rHSwpBMftX3t6FgHhhgyHhr0kLh6a
suNEmAC19gcDPyu04+f2Mb7P6Xgzu7So8+dsAc74P7K8VtcCzWiHunian1Jj
d8X/luBiaVA8V1RRic+TJXvyT9F6bETnW5K+PuFBl4lVNyogWvftYvYxEu9m
9nzQbBJgWHnh2mnogP9gtJdeDQFCd+b3GXdoHTjL3nZhbR12+Z7cH6xE7x/O
pEWJSvT15B6IDNjSCsM1cRtt3Wg/e8Zg3bFJXMxZ0C+xraUSdy2lldxcSazz
nyUhqSlES4jQLVK3E6feJcXOCSWx95Nb4Po0Id5G2L/ttewCv93kxNlRJBbS
anbpCT5M3mmeDvvTiFvdXlefnCWRKGyKV5hD62TDr3pHOR0Yrl+yIn0XiSz2
dA22jwAg7Ftty9pQIZG1buZLAmVzraPkx/LQ4Sh1vz25Bnu8WRO95xNYLJSZ
Ms2ZDeksA6XLW/Ox4/BJz8FmEUZOfhw6z4AFy67mDS6hbxj5jUm/MflTpvM3
pvwCU/6UqT7kb/PKf41M83stxW8OvlpH4sK6dmLFMprHBCdTrSVacXbe6O9L
6gn4+t6JdYjk4ddGh4jMMfWwSlkgXPaQgFbdjF1XHtH+TmdgjuLkauQq6WWN
zqX379TANcf2i+DzhLUpexIbhRru0ZvH0vzWqapxzJaPFfstshPXNmGKe1sC
xROh3sZo+xE/FrKTp8QeLs9EQt/HZrl2AuOKIxdfzOXhpG/gnIu362EaIy79
8BgByKZLGQdykHDL7qtCYzkSm5duqB9DwPxF98GlkmwY5nQHXhflwNNLL6b1
FgGFD1mpx09x4fziSnqYfBUqrFRy702kcP+wg6TQjsDF6n4ttx9cGP1u5QTQ
6+ZL6qlyNpvE9xvm4ltzhYjO2KPt2ChCp09mq4Q2C5UfDrZoCl7j0ETp5fsp
Eg+j973O7ad159q7R5bl0tfF+9O4/TiJpqUqR/+0C5BsaXRncG8HWg2F+8e+
JxH1vvj4FTURJLfe7Uqm/Y1C/odtY1dQcOlTqXhQR6Cv7kHH6lF8jHcJZQvV
SByfuO9h/wkBsr8W5R2VbEOXnPnZCctItK8zF+8Y5KPpQs+kmWYtmKdrvdBS
m/az+9Uc/mzkwKJi7PcNi0thXer5eM5Z2oeeWVnl2sBBblfJ3L3jKvGlbonr
/jskPv/6YMCNEsIhbWXve80u5AYlxtZPINES5XJZ6M1H1stJ5zYENoFzLPDn
ylMk7DMlT/8UCnAjYIHfNesOuM7/cXwc7ae4UY9Nd0vwoBa8SnJ6Zg02l+Y5
d3jQOq87vU35iBAjf0f1ud3qxOBWrcFwNgFRALXfqIkH4bSMn+ZkPZ6Nn7Ex
rZvANFu/xYUSfKzaPnI6+0kD9g+pOWY9JOF6c6jU/ZMQwVO+TdCN6sJCg5S0
oQISZUYfDZabiTD19YGGSLAxMPrApLPvCUx92xswdi0PsnE/K+/o1OKgiqGX
TpYIgq05F3xKulC29NPV2dPSGfmNSb8x+VOm8zem/AJT/pSpPoSp/u1v88p/
jUzzyYMmKJTe9KD9S7vqUcNFFB6kHJR2NBVhTOhaUMoEHuqmBlZ3sWn/FrVw
y7UiLJ4Sc3TcKxJPC9eGTJMVQV5tY+q3+ywkao8it06iwF3x7d0JBwJiRSID
7gAXdjsCbnhXEzD9lH8w4jYPNSXEzkuFddC405fndJJ+v8HcZclpJFaVj+4p
3CjEvdk59P4l8OxE4eScMRyEJUWvHwgpRklHVTYrgPYzPSPIkzeFsCwevHty
UhfefJz8pmkKCRXHUP/acD52fW06Y81tQsOnxEUm70iYyvkdclgvguFCk/te
eSwU/rizlTpEwWjSZlbDdRKK0g+OK1cKMFBQxk5fQ0HqnMvpUQQB+z38wfbN
fNqf7fKzTCIxr8/I2PS7EFolQ/db5rJAZabuGXxKYCfCT83icfFcriwoeV0N
1vNTIuXbSYz+QGZd/ShCnKkKR3U1B/ZDMStqaT/s+i599n2RCEelvGbxIzkY
t6m05kc0rQ/P1EuHRNJxv2PYvS6Bfv/NVSpJbwhMjoozXDaHhzF+ijvcf9Wg
+7y4XsJBElzlE3kH02kd8sSme+BxOw7enK0uPEMgIfLsE98SDqIeuF7lxnxG
9YzVG+/uIyAzoKKvps1BiNY3/axnpbhtedPz+F0CdZq7wlzduFBzsv1k7lcF
1omXGte7RcjMubL9TjILczPYrJ/175Em+aKy6zIBq33U6CvzuLAciePZM79g
Y7mfWyghQr/G17jMRyzc1FxlTk58j8D+gqeTtxE4vv6YXY4EByX5ccIDH4rh
Ip0zq9CRxNDC1LTLq4WYdsXONHBmJ7pj5QJkfhHQ8TO6N6jEh/4se/P+vY34
fmb5itMPKFj94Mtsu0L7zms+H98dJHClOXKU6iEC3rIVyXPtORiqWukY0VyG
x7ly2axR9LrNfb8kYhQbESaj1lkn5jDyG5N+Y/KnTOdvTPkFpvwpU30IU/0b
U33v3+aV/xqZnr+wd9KNOXWnKPhTmsO1L0l4usUd3bJDiMCSmJVHphMYS3x7
HqXDxnHTnjmtbXkgHD0+1S2m9crc81FuQj6+TGfpZcu0YHP2fM1n3SSuWfhu
+TEkwpoth+SefuZgTsVUTzKUQKn3j7yR/lzIxy0JcS6oQlLzgp1P55DgaaxL
yC+gX+e9boHO7WZo/Joh/X02AcUJA6NlzNiQtZUKtor8BDfX9EkONL9E9Khk
3x/kQXXZ3v3zHBtARbyZtvM6gXLpFY8VNLgQXvN7IJ34BVL9yx3ag0gEeutI
2YcLsc30Xrfvhi463l9zJw0oKGnMMdxJ64VHVS8e+2QJ0HbrYOKRqRQW5UC7
14NAmFPhfHNZHgw/x3dcLCFgdG2zt5glD2f7nyx+ubIOWxTatpX20n7qp2PN
x7l8vN3RonCnpwHaTm9fv04mQW39Itj/S4jUlNMSmStYOJwtGdDznIDD46wO
+ZE8fNw7fY1yKK1b1plntNK+5XeEbevrEDo+lB9IYPcJ8D1zqXJbIIGti65j
sQ0XXf5SEyfsrYK4h67xkkICZx8VpFw05qGw0rj0Uk8tMhq6wlfR+q3n17U7
K0wFIBefUckeagU1KtTWZwWJwqfZ1BtxAcRUx//KvtWC6Z5p9x1PE1Aq8pk0
7jUH3JpPxpfGf0bPkdHTl9E6ee1ErUs93ixEpSxLeh2aCWUftxFNVgRCedtu
Xc3h4LGpapDwyGes3h+YMG0SgWPzwmvk17Gx3fj+8aaxechlqSye5ETry6fP
dLYNcLAgO+H95KBK/DKUGzOS9rP9ndcP2tfTn3O4y/Ptxg5IugS/tPch8DMj
b4WvGhcRhdLmaQ++QFJXMfLWKgqX9vHX9LIIdMywz+fK8dEt2n/XmEP7t8zp
e6ZcZoH9cot9ukwmI78x6Tcmf8p0/saUX2DKnzLVhzDVvzHV9zL1L/xtXvmv
ken5MrPf2Jbdu0xhikneE8FsOt6V/dgsu4fWrcrHkgftSMjuzP/xkI4HDxeU
l8W1daD+2L5XwlUkvFTWSN6SFkCd1+g5s7gFxelTX3hcpaAbv+b46+UUYqJx
N+6cCBtii2ce4hOwzSMXJAl5CD2X2ha0ugEfPk9IPmNIoGvo2DI/Gw60NCaW
un8sQ7Ji2XqJrSTEC860zDokwHC46qbS6lZIDK1PzCQJtLqv91QT40Oauh1/
8EYDPj1rv7e8RoQz+/4odimy8ObB4BSR+ytszdn8KnQegVR4Lh7jyEbbe5X7
D+bmI6PVLXWtL4GQZ48a5LW4qOUpWb1+/QU3zZvzBQ9onkz84Z5+hwvVB4vq
IvhV0LzsNMdhNwH5yfmrC5U40O5zPzh6ZCnO7nGm5EZQKPe8U71kK4E1MqJC
KwcuTk7LbPtAX39U9Rj/PGMBelZtjU/ubIX8htFRW81pX+/Zkr2Q1okFVq82
/DkgRHHSvXMxtiQ64yY985gqhHLxrc7DXzpgWMTLqXGj+XBAv1JulxDP2TZC
1tFOpC8v0J3lQmK6ubHYZ1UhOt5pGf9R78R8p5Y1c2g98NH6z9B92oc8WKwZ
/zusAyMW+rgqXyXx6We1iuZxIbLGLr38KLwTzU5ynss20z6oh2rq1xXAzm+f
7bvUVtT4NSkdmk7B0H3qKgf6exIq2jzv3MhD15EJRjNofv5QrWZE9Akx/M1j
1pUlLJjuHfnt7kV6/YjmBj0ZIKGfHW3sOiSEiXuG5o1bJDaPk1jUcEsIakus
QuH0LhDEDN5heQqX394aF91MINfAQkpjCh9Rhs6hD8pIPEgN2XbYRYS0XekL
ci6y8cvVUFlXg8DR8YMHQ6ZzYD1/j1PShBJGfmPSb0z+lOn8jSm/wJQ/ZaoP
Yap/Y6rvZepfYOrP+tu88l8j0/OzekxO1CU203FBfeRWjecinB/v8iKf9gEb
2Ss/yND6YdPorMtXhrhI0u10KvStgdmvG/PuXKPwpOlgqv86Ckt3rugVuy7C
yl3uf7qsScwqOuQ3f5wQFzOMS4xedWBa9pSFIjqeCd+dP9hxlAcJ2Yc/BH9q
cWKF9waJMAqerSM2J3pScBtMPzBkTEBTzWf9w0w6ns6Q+yG5jIcSmR/fN6yq
xf7koRverrQfHhxZeUuCwvPRN98p0b52wT3ZsVtWU8hKvxZ3mUvrKN6dXd6r
+DiU7pw+i45n3fHOY5uDad8gEfD55wE6nl5njz25kULGVaWHzZIkqu2aHfcF
8jHe9pVGghwFR63gwpZiAoGX+MkTunggTCorYkiaZ57Fc9b2ibBe6PLqQiYH
7nKstd30dVy+FsvlmBFYsmFXhm0zF69W9rZ5RdE687Ov9acqIVTdnkSdz+/C
q9B9O4Pp6+uvWCIg6Nc9l8U5Kze5AUt/+yzlO/0vD1VgnELz4gvD4yc8JEQo
SOtW3HOYgOogGX3pEgebKu1nt2wvx+P5i268Nyew/E/ASN80Dh7ZlX24VFEB
R+KFzDqa9/a8uhX3mtbTKTEjw4MMOzHgbffGt4zANJXBkMkOPPjwvC7u1a2D
QVD/lmADAicmy+6rsuTgrLHl6h0xZVBYWxSWSH9f7GelzX3nuegXzLWvP1OF
8TXsgZuWBG7w/qhU0Z/frjzslfzaz/R9mL988AkBu7Dbam/+l2ftGeQ4LqhB
qvrmsYcySJrfdrtcWCSCh8WHxMXBLASd8PU7+JmOUxHC8AQvEXIVMuYFBLFx
z+GM4++NNB+Ztjhb8tiYq1VydUdiESO/Mek3Jn/KdP7GlF9gyp8y1Ycw1b8x
1fcy9S8w9Wcx9Z/+bV75r5Hp+YC3Drul9r0gsWt5/GSNubR+vad+I/waC/26
d09to/epXZXOyf0nCZyT9op7XUP7tubx14YO0OuzZ4xcVYoAjlu/LegJaUdz
/6BRLX3/Xp15Kuvyjo5fBiY3lyzk4HqWwaEGEwoDjvf2KEaQeBg4VdNIgtYR
v9eXZuwgceDhRufHbvR6CI/2ZAW14Zmye8vAFgoriZZDavNJrNt7SvH6ez4u
J6lmyy8icSJ2U/NKFh8/uXWnh4ebkbT2odW1UgIBSlJbHtnwcMd5/LJK1Too
BAT27jUiYRDg38nNEeBbhPICqz/tSHkepz0qgMTtyo0fpvoJQYx9dvLTmC7k
Zi4YeTKchNiyiQmmH4UoLXJqHHmni9bzsfGh+0m8GBvU6pdI6/lhgYGTWzuu
avWHjKHj+55viWXFOUK8Evv6YveDLpg5dc7zEJC437T4+G2uCDdeC8UqgzlI
3VW7PMyXhLLvjAmWzkKc2cTXt27qRHHDkhHL79K6opwfb3OGQqHxnwkrFhKo
3CdQ7FalcMFYXvmRHB2v9yXMeVHJxwqi1u+nN4XR7yS8KjbQ++yG/qrnd0UY
27vZq06BpPljgd60VQJcmOgqlzWvFatFHwJnXSSh+qWU7aIohAWxcI+3bCfq
d7ePWKBLoels/9dbFiRMYhwmR7kIcHfjGbeYMRRSssZrtusR4J3K7jBM4CL/
lBfXABScJk5K4MuTqHGY+ta5jY/AYuWiEy0kDidkzhx6KULwdc6ldikO3vco
xK50o2CR9cJRbCIFxV7XXXflRdBf/jh/jCSBz6NuT1+7jI2meaE/1mbnMvIb
k35j8qdM529M+QWm/ClTfQhT/RtTfS9T/wJTfxZT/ylTf/3f5pX/Gpmef2pi
7J2YWkGi/bUweJOnCB/mat7c5M/GzakCb+U9BGK1TG9zwMH4L0EORsdLMUrM
8MN+If1zZdt8vV4etn4q3/1QtwHXdPi6DfsphJzWYDfa07r43cxS87v06796
9ta5kUTmXInXQ0kiTBFEnt/+g40PWTWzmodJTJg2O12djsOJLMkpr8y4UJ+z
WC/SmubNDeNsOj9x0P/txUy7i5+xLyR5t1ISgc2TLhTeqOPi3ZFVXre7q1H5
xKAxaQQdl8k9x67+YGG9687pZ1VyMGPPZo1DjbSuMLaSlEriYdSLU553V9bj
cAir/P5L2h89NE6Nny9CF8d2dO0NFlbftahWLSWhGGK1eJOjCC8NrYcsrNjQ
6s1ufPqdjuNHppiHLeTj6eQPrpkjG6FqZ9CZKUZgznNCI3CYhZvCF8qJHjk4
0X7eruM0hcGstPNzPpG4W3f7wTcbIQqXrZAtpnmjf/r6RikrEkbNm/Yv9xAg
LkvppPFS+ucn9Vou0brJfEe5ZRefh0NRBtsHeun78vK4rvwkApelpdRrfnFo
P9UQHnyZRO5AN+lJ+9K6Iak9dU6dEH9vNJCQTkDhYkmW3E8uDlcfWl5+tgYv
FUwksmeT6PHOupWVS++r/mhXmyvNeCtuVLEhmsRPA79is1oh7inWe+8q68Km
woT8vQsI6HrnVnu4seG6Kk148VA+av/cWbpPhYRenKFc5h4BKmzybVdFtCLg
JbVffQUBm13NwWMS2FhvcqipJKUAfxInqQ+liOA779i3Pn/6dX0jb767kMjI
b0z6jcmfMp2/MeUXmPKnTPUhTPVvTPW9TP0LTP1ZTP2nTP31TPND/jav/NfI
9HznpTrORjeOUTjKiqSqaD/0qfNR3WopIS5N8slsGab94uCqxmiShXFVMpHO
A9kwKyqzM31Mwt9EVBbYKsQHg9viNzq7MHD1kPSEJRSmrk4k/nwkYLgNe82K
eChbMX6PsjOBNwtdHXVHcFFySu3Tj9hK/EmyG3/lK4krRw6WD9M8tJr15Ulw
PQdc9uzlLeIEXk39KDYwnY14r6dPhtflYnlTYLbgEomRhHzrKD0hjsmqxRx2
6ERCvJ7X4yECZp9jVct38lFiOqacF94I89rYtXm0rzzazd9teo9AVZv9fS9j
Hi6K7s3oo+P+aIsVtRN9RNgmfJ9XEsrGWx/3AB1al1rPemuZOVuEuc9rb4y/
zAI56bi4ii4JK5/0+/ciBbhv7nera0879N6OqVXIJxB+oOhXnx4P+2efdZ3y
pRbzn2dXVHSSWJwnarlULIL7Pd6w0k4OWAmyWWr0Pqpy0sqoNhKiS/z0Ti3f
Ttj3zXkzdR4F4cY9j+xpnt6Y+XvTqwAeJGOCt2yPpvmc9HvT8IKLGheDbbNP
V8O2Zaz3hmkkIkaMebIono/YAwZRwknN6LzdO8byAoF584MPS3znIL2vyfqF
YyW8NsVGT1tJQK685PNgKhsdl5aNdiQK4Pdm9wZlWpcXH309NvAnBw8XKn8O
uFqJCz5C49LXIixJchPUv+pCxw0FCcG7FFjNu7s4Vp+Alep+qRwzDkYvbfbT
ulqG0991eT20DvvamrbfIrkLiToT9I4pPWXkNyb9xuRPmc7fmPILTPlTpvoQ
pvo3pvpepv4Fpv4spv5Tpv56pvkhTPOR/jav/NfI9Px6OUffno6zFC7O095+
qIv2W5mWC+9nCqHh8W2FaTmBRaLU428deUhfXc7NMKnDz3k/2pxOk6g/K5Go
NCDAr+c2uh/vdiC8SaVV6Q2JFQu70rRWiSArsyByRyoLTtRux0dvCWx7vOXE
wfk8ZEYuG8UZX4uWHZPepniTCBOvYB+xFUJi8Yqpqe87IdprVhBZTGB/e3Cj
gRkPp0/xj2ybV4epiWdHiNE+dP551vRBZwFqJ11SnnGtDZoy605s/0nCRTIi
8e4cAiuupFstmMNF9PcxNjW0ble3vH/tmziFsr6+Wot5Ivh0zerRotdHVszH
UUH7RBhl2FtxUZyN+VF+rQGP6OsXey1zt1AII/VWPePELozie9h8NyaxamWa
zpIiAcZ1Tv9FTO6A+fa2Hf50nB63/2nd3RI+pvl77d0Z0YysxTtYd8+RkByr
o6YoJ4R9rZvX75Gd0Ds6TaA7j0TKN5edelV8VB+7/yw9qxktyreWW34gYey/
2+GNpggW0i4vt4lYCD64aoq6OoHTnCSqfzIHlGrivqO8YkQNqwlC39H+qP1N
YthiHlzibbrezKlF64nAd6uDSHT1CH0r7wuREf5k06s1Xbjce2WEfQyBZ+Wb
43++4UL5U+geVbdqeJ08yX63lMDyH5VJv8PZ6FrRmUgaFmDopqPr4620nzz2
6lXxABs23N6Ee7uKUdIaMtpsPYFPL4+Pe1PPxpqAdWuaVxUx8huTfmPyp0zn
b0z5Bab8KVN9CFP9G1N9L1P/AlN/FlP/KVN/PdP8EKb5SEzz3/42r/zXWGKo
K2c+h0LMHA2xA5EE5AOv1p46z8MSrahTkQ8pHEr8mWBNx43pMou/m54nMP3E
92/8HyKEJq+541bAQvZtv5wxtz9i59q5yo82kJjDKqoI2SrAa/sDZ9KOtSJw
1DiF0wspBKibs8a8IpBcETTOIZWHJlHcqH5TAjsuaYdph3BQRehl9IhXwL93
W26hC4mG+Ee/zbcJoT3vQEnmrk5cNyhQ3zYoAnwNvZW7WJhk4DkYG52NLQX7
9hwZTcJhV/S0NeZ8OK+OU3Kc3IRN7Z6nlBMJjGF1ftlUxYWeyDwmqK0aQfYW
k66kkPjcPdTxZZQI10qeP5HYwcKf4sZqzVoSK9/Jms8KE+Gew4cyUSkb/rIB
P6Y/JbF0gUO4y7AQBUr3U5ZsZOH5/H0Sl7oIXK/s6pX6wsOqq5E7RUX1WDpq
TMGeONoPa2Ysdc/nIkzYIebytBo5Hf2TlW6TaD0q9csgSIjs0507NWS6UOg6
UK02ndZpcQs4Scn/689Z2/N+YTPm8VijC7gkdAozHNRbRHhnuMtHzJmD78oP
21Tp+/Cx0qI/WMjB0qNW35x0K+GfpDBTSUD72UXZSmcoHvzImHrjrQ0ofnPE
x8uCADldokrwnNY3Jf0XZgkq8OXTFms3XZqX1OPMFPZxMKHgWER5ZSkmq+VZ
J6kS8JlhvF5zBH1fjjsdLzpTjKK6SeOfRIoQdaxZxnBvF3adPaO0KC+Kkd+Y
9BuTP2U6f2PKLzDlT5nqQ5jq35jqe5n6F5j6s5j6T5n665nmhzDNR2Ka/8Y0
3/Jv88p/jcn31G99CCVhphzQE/lMiJnGkqVqZ7sQtMPG6WcAhZoT/XPG61OY
YTeSOMASYfKKM2alRQQmjG2bmnGcB9MGXZOBSXWY3ONQKkbrqDf2kiPqrIVY
n1wyYf7rThRq5cjuzaJ5ZmlnbN4WEX5xJL7cqmNh7ehW25e0Xr4+OGXDeTku
nibJ943b+AWeG90zBDSfILppo/9DEaSKLm3SrmLDqdM3/z7tS6syCsa4b+Lh
pEtVTqF9LUrdf0bfOEnCpKQ79x5fgOBqz4oDZh2g6sr6u6tpPTNtWH76PRE6
VSWt2z+wUeodvnpyK4nn12t1b9L7bGzo9/zrszgI67EYb0H76tNcF4sMOs69
mZsaaLejAyN+O8Ve0qH13nb+WbcgAZatfdvlPaodJ0e9qxmK+N/8n023xMqF
8JBTGXKh96vmumtPOCdIOMqSlku5Alg4G1kPmXRgbdkbTaOp9OunXZ55OIaP
bq2XYyeOaMa1t257msVpXpUys3B35GP3/dyLCTpNWLUpbsiEjrvbupbOi/ER
Qs2s5smZP51Ycyxi9u1FBDQMxG+ZeLOxq+PslAlx+Tgs8bJv9AMCLgXOHYW3
uQhOU9iHxirskU/LN1lIIvad5YUn7Xy8+umVu+lbM1IT7wbnpRH4UDCpQ62X
iywjN0/H4zUYWKSVnjqSgP8Z14k/f7Gw/tvzIbejOYz8xqTfmPwp0/kbU36B
KX/KVB/CVP/GVN/L1L/A1J/F1H/K1F/PND+EaT4S0/w3pvmWTPN7/zav/Nco
OHcihkP7/czM4IQZ+wjsCdN9Kx3FhbSrT406rW+fblax7r0hQtG+NPvrsWyY
TIo9Z3GTwJmtM2zvG3FxxnzzNsURVVi04/BCkxDaH62utrV8KoTzx9Dhpye6
cG7HUnuHuRTmmGaumpxAwHCtw2jv6zyYvS/KvvOIgPaDh2avHnORPu63XOyy
alw08uzWZBEY+LLmo1MNHV/zDmrvqqtH96+qvXI3CKzkDXlk7eNinY6W0ZnG
L1DbrCe/x47EcadGMbEZQpyXWCrWXt+B0DlVMvvo9xsZ9U5cvYILoUHc6b6K
arCv9VmYy5JQyuTxtL/xsdP6VpOvcgskx3z4k+ZFYjm2FdaaC1GSv3D63ORO
XJKpYr3wJ1G3PtVowTUhLMSnFrL6O/GdHzxJqo3AuO1VcZnvech7eHhOq3s9
VsSJ1sX0k+gXu+f5gdYdOw374gOWcaFZ8imzgNZ17+Y1Hps9UgS3aZLDfaos
eDmPr1hE74uyXZtuna4k0ZvzKP3rTZq3FCJ/sUZQWCX/qfebGoGu+tnpGc5c
mDYlfB7MJvDHY614kBoPHQs3J77wrcUZsdTTbwZpnrcKnlGsyYeSsS4lc7MR
zS8/p87xo3WF/Xa/NdpcGOVuPOdZSPuplY5War9E0Ao0Z0+uZUH62L4tipuz
GfmNSb8x+lOG8zem/AJT/pSpPoSp/o2pvpepf4GpP4up/5Spv55pfgjTfCSm
+W9M8y2Z5vcyzSf/27zyX6OtraLp5T8k1IxMk5JVCEhtO9j625oL+X1ygo07
KLj9OOm6RJ2EcvYvSZ1ZAux31Cc0KRGixxbvmBjHglnynvVTPd9jgG90Ko32
A0L714qOBzm4LbpJrv1disEXKvrv5lEQWyXZL3hC+4NDDdFyd3kIvfCqfmAy
idQN4p1j7/PxoOZct319E2yWyTjfbqBfP0QpcFxQJx47Z0yVdHHFn65h/c7R
BDaxt83oFWeDsGZZXyrJQeOS4mt3lxCY0Ryovf4WG2usUw4EC/Mhnj7Q/VuW
wO+BGy8O3mXjrlrxz8w5BahPyWh3u0Yg5GJj368NXNy4GTdlvPMX5BlHDTcO
0uuh+FBF6loCJeJyrWL7udjphvkZPhSePvXvCttEYWGbvfevcBF6zg1r9QeK
oNMeO2vyxC7omYT+2fk2CIMGQ3zXrwRSvy0QqU/iQ2+bf+ydtw3YYHLUZPks
Et4hV97nZ/LBepNhN86sGXUrt3M1z5PY2KkdVLhMCN+YgqfPx3Viycvx77fS
8T7dfBLbLpj2Q+4zcodes7HqyvbTc2bTcXn420b7MAKCu0FjnlnwICcTvrij
hwCnixOVOYuPouX9coVdDVi8SVZZUo6EbLZ28UetDriodh9aq3iOkd+Y9BuT
P2U6f2PKLzDlT5nqQ5jq35jqe5n6F5j6s5j6T5n665nmhzDNR2Ka/8Y035Jp
fi/TfHKm5y/8bV75r3G5e/WFQEMKeUmKq9Lo+GZhct+tKFcAP95qnZ2a/+u7
rGZVqJBoXjW7S2WMAPLFuo+7KwnYxOS8173Gw0XVNs/R4XUo6rFsJc3pOFWt
duUD7SN5wUY7yo2FkM6cM2nYhsSSc9GXp00R4vXPubMmlHYg+P2ByxlVBF5r
zr865SYPwUF/Gq6+rcOzF/asC3NJTNZ1rA+p4MOijHwhkdqMrd518q+bCYQ9
N7h6/gUPqcpng2z06+G/LmOrgx6FFPtFEgH0+tLWnOz50EeAS2l76rQP0PEs
IadvzRMBZjxsea3i1w4px+GrI++ROLmB7NSi49nkkeVG+vpduBau/7KL5u0A
s0mtiZp0vHP4nd04X4C3m7JLs3dT0PJfJK9Fv55Wh65S63YBBo68+VgwkkTn
6yArjjEfOTbj3kxlNaIzPoXteYXEOsucBRKGQnj12Kwd69mJR9Z593bHkdi8
OP5HGVuIm5vTEo5874L6z+nqZmNIaEofzXtpxUdMjelF9UVNyIPH3MTNFKwX
DHltpvXLnu9vGt3Sab4/OOO6iT+B2IREjpQ+F3Mixz40p76A6Gl6PEOewFZz
02nxyWxwK83TDpQUMPIbk35j8qdM529M+QWm/ClTfQhT/RtTfS9T/wJTfxZT
/ylTfz3T/BCm+UhM89+Y5lsyze9lmk/O9PwFpufL/G1e+a/xnbepfDCbxDkJ
42KqWoS1W6Z6HD3JgWnuLGvPPbTuXRqZ9fQove7mfioU0vGtXNpP5YgzCen0
yCujtwjhF76vIWtzJ9xkRIcz5tO+7NKw7ZkG2i8s+D/lnWlUT23UxiWKTEUZ
y5REhlRSSJepaJCSSJMUPYUyFJEQocxjpWgiSZSKlEKZkkiTNKC5f//hnEOi
op685/3wvt/2Vz48n85aLWupc+5733vfe1/Xz+D5/fcf4XCpeGT9WRY/BxRG
tFwUY7yyz4evExowNy+oX8ctBg5RJ982VAnQu63K9kF3GYYu8xhezq+PqDTv
zWNMJFD8cSp4yc9G+KjVq/nsYpH70yBi4CwxJgWLl+iOrcem6P1jRvD79J/f
hofNlYT4VnRgl1F5JeLG3i5Vd+UQb+votSSNRffsSy4nDMX491GNlAe/T45Z
2Rn9w8ePG30i7on9hRjxpChWby2HAB392slHWby7bRGq81oEF8OiaY8mcIiO
eOMwOJuvuyeb+QZnt6CvqZNiZSMLj0OXIjVLJJj+q3W/nn0z2mV1H090Y3FO
xfmKRrsIRXvjN8QH1UFuuvZV+6UsNBVurg7aLcLrPmFrLXxrUNnw8+eDZgbq
++TrZtS2YGBMladHr0qsrcy4MceUhXbr4Xc3T4ng9nE54yGugXGV8bN7rRIE
xp1uUbzfiOIhqaOCPJ+Q8Y3K36j6lLp/o/oLVP+Umg+h5t+o+V5Kv0Dpsyj9
KaWvp/xDKH8kyv+N8rek/Hspf3KKv0DxZSh+1t+OK3/6ucbsypfdWhwqu8P3
HGhnsCTVsm7iGiHsIl+uLH7BIn1L9RTOXgLR6DUBczWasEyh9aXVIg6fFkle
/qPNYsYLx6OdrULoj00TKfLxJ/hehoGRsQQRw1WSG1oboVv/PGvtcQ57EzYo
nFvMIXXTbo26dAm2d/Q3vO7L4seBx8Yr9MW4oDQi8I5OPTIkXiaOR/g40nI7
dKO7GAL7FrPnKfVYuMPe02EKny89Ew8b+Z7PC5jJKQndLVg2KluQxudXJ1fq
aDXfEmOjokW9qn0D9tarbB05nYXSmGNb24eKMMj6xeH2rE84Kp2RWu3KQlb5
dfxJVgTO0Uswd0cdltt1FZsdZ2FnX+Mgu0+MJx9L9hvU8/Vdasi2a/4sHkwf
0FfTjP95bcGB1xvrESRa3JymygGbHGX9njFYHuxxq/xdCwzvljzx62HgOyTZ
z89MCKcjoUWOiVXoGNg/dLMOh4zzc47W/Msg/rmo2orPvyYppQfmPmBRYvDY
+81kCeSQe1c6phFNY9J/FP0rQW+ZzD1yokY8uWRWZFeRS8Y3Kn+j6lPq/o3q
L1D9U2o+hJp/o+Z7Kf0Cpc+i9KeUvp7yD6H8kSj/N8rfkvLvpfzJKf4CxZeh
+FkUH/Bvx5U//XRcnrHKJYhDwYCXG6bO56DnHsVEX5PA09u5kX3D583GJZ4l
uyVotfH1m7q9CfciGa/dLQwyl3QmlApaEPBA+8HesZXosjy65QcfB9JUHRYG
7+fzrsmHD+a01OOmxsPvFsksZBx3+zXKSHB1+HQlmRWN6DY1PG+8n6+/2jrm
XVkhRqLTrozhW/jzdINzeg+fN5xwazu75bIAVgsHqc3rKkVB8PAhoi4GzgoH
bAwXCtEkP/n8jANViNQe9NXCkcW3OAW3ovcieLlraDTOqsP41tXRiQf5+OI9
uFA4XoCtKb8VZqiVQKts6InJ8/l9rvP73CNrPg4Uh5WsfPYZulZj8yp6c8jp
nntuFb+ebp74NF5wUoDKoCsHjhrz61jfS0remIWXb0TBKDURlAMvVuyI489V
z9BHT54KECcROD+PLEOhQaNy3Bl+vW4o3R/C1+sTH8eUt4kkGGD65f7O5fz7
XWWatZY/5+MmLT/QX1+EGJP24cOW8PvpUzrDjWjGd7fed7rUCsj4RuVvVH1K
3b9R/QWqf0rNh1Dzb9R8L6VfoPRZlP6U0tdT/iGUPxLl/0b5W1L+vZQ/OcVf
oPgyFD+L4gNS/NO/HVf+9PNK+4QFs3tYmH7eNf3NbAaFm3zlLJwE8JCy8tiz
lYPMrj0zdpezUGsYojIygq/neqlKvezP70Ol7NYqvh5bmlXpeWZrNdzkw36F
8PWnfn2sv2KpCBlPlAxeT61D2tWinyqhfF1W+Nq/fCeH7KkT6710GMjc2aDb
ayKLq51LbUoEQlSkrW60GfQJ+w9na4wJY9C9a+oXjyABivsNzFuTWYqzb9p6
3g7i99cvQaffGSGmNB573JRaDb8kaS5+NouqyLOvN/BxQak9yEHV4jNkbZcn
pQcyCPJaNzdMWwDtmVXymZtLkHHEOGPlcBYP56e/TrsnxFvZikrjpR8hPeSE
qrU8h2dzF7gs3cvA60YfWQ/5FizZe8bpKp/HOy/0NMvS5N/TY+NgKYkQegtk
x3fuYaA7hRkeLS3AC7eWqK7UYoxwclB+Xcki/McHZbebElx84ex4jGsCe0j+
+6xQBo/CN6Z4BPL1jnmoSURCKRnfqPyNqk+p+zeqv0D1T6n5EGr+jZrvpfQL
lD6L0p9S+nrKP4TyR6L83yh/S8q/l/Inp/gLFF+G4mdRfECKf0rxnf92XPnT
T72P+e4qnnw9EnTmVnMFn6dHfqzyjBHD4bxhlRKfZ7srKu54H9GCc4pK70La
PmDG7yZ5aX79DVhfHiqwlSBK3HeG7cQm2MpIuVp7MYj+GeY7rLwZX9Ntv5T9
KML6nFOJX1tZjI2xOO4tw2Cqy9m0583NaBOUVy09yiFm3Hzzafx+Pf9BvqH8
tARvqwu2DjnJ769VGnWph8QYmGu17OI3vq7UEKCIX4e99o8s+fqUPzdfffh5
VqcZdz65zb+ny2DoBYuOHZ+bsHmOa4hgXT68TMdcnXOdwcaYVE2HRwJcY/wd
Q4LL0Kvye2CQBp+Pxc3VVRkowozBFY0yMZ9gGqgs1FjGYeFz7cGHlrMYtuBK
uPc0ET6by3Az9nMIln5VEq7IwUgvUdWaP7dHhxoZnLZg4anS6TUwUgQn6xcH
U1GLx613M97ESGDeYXl66aoGfDX17jFziiXjG5W/UfUpdf9G9Reo/ik5H0LM
v1HzvZR+gdJnUfpTSl9P+YdQ/kiU/xvlb0n591L+5BR/geLLUPwsig9I8U8p
vjPFr//bceVPP43Mx1u28d9xh3rsbvUuCdpsIzQ25DfjYNlrf98GFhO0shZ3
vZEgMV6OSVrRDG7fJGezVgZWNuvPlSgIIel3cXHIq0rMD/kqFZnKf9cTXeOK
rzRglr1RxSb3RByy3bxnOn8uX9a86TXylQSx/cvdOxc2o/qkalEZvx/NzYLS
X3WKMOLN6LydZ+pwvzh/Q6kah6Yt8pZ2Z2tQ97RqUfyVf5A++kNubz4fs9g+
+4TMSSEGmpeqW8RVw9X5t6cG//8a3BiUr5FZj7WjCmNG+ezD+uAvsTv5c9P2
d/sPq4hauGa4KlqZe2GewwivL8ESzFxbbMiI6uHc1+KM9fTD8F979NFEfp0c
dujzRFpOgvfP115Xt2mEzcFp3wxtOOwYLPXmHl8HuxyAclm6CElX7x5PDOCg
9TxgZk31Z7w9LXYqUHIl4xuVv1H1KXX/RvUXqP4pNR9Czb9R872UfoHSZ1H6
U0pfT/mHUP5IlP8b5W9J+fdS/uQUf4Hiy1D8LIoPSPFPKb4zxa9fu/GKf4Q/
g7pmn6TAYQL0pN5o2v+1+K/HlT/9LNxR++XtQhYH485NGO4hgp369xhnrRq4
MLsexkZxfN3grt37IofDFpZG44IY9L788MuNbD6e6CUXmc2V4HKCl6NqcSOS
n7zQfMkxmJ1anfZKRoiyIrk8jauVWD1rTkgnX69tT6o9nb6PQU6HxeTnw1sw
tDu2v984fp2v+XXy1UchFhnYPZDUf0TW0YwPHiP5PC08Raacry+lvV9dFq1v
QdgKSaGPHgujo9GTbiwVISd7a6XTgc/orkxTCs9gMN5eb/4hpRZknbngqdPy
HmXXB6ffz5fgQYZ/1ttejdhTLDPrp/s9GJZHn5QulGC/1reL14fx69ba5p7D
+fsoXMw93lwsweLPnOfRify/z3TQO7gvHSbzz7+f9E6CMukFCZdGNqLX0Vvn
x9TeJ+Mblb9R9Sl1/0b1F6j+KTUfQs2/UfO9lH6B0mdR+lNKX0/5h1D+SJT/
G+VvSfn3Uv7kFH+B4stQ/CyKD0jxTym+M8Wvj762TblzEYfOM3NWfZrNwo5L
97TvFGLzbR1ulQ2LnodS0dcfiPD2/ThhyYv/nh/s0pbd4rcbOERV9Do7KYnF
zmjrVH0tMdLDB6rbnOcQtulfrafO/HuNrzV178PAPgML1t9msWyE5peCLjHO
+c8MmTqrERmrnv2KecTweZSR/aFpLcgvtzXNXlCOKfqaNh39+PfvptCxy5HB
z/ip7kr5AiQb+kwWzWSxt/XjIuNxIuhaThrqKvmE1bmhcoX2LJYoj9JWKRLh
cPazhUMn1kG3Lu3ObX7/F1SXfrk8UYSIDzkCn85PuFfex+XtIQabrJr85vO1
54XTe2ZWmpTgmODUQfUUPs7uzs/0CmlA/sHG19eib2HX1iVyY3Ik8A58Ilfy
gf95gM3Eve9TcPuXDbT4/Gb8luIjIrVG6B9Ysr0yJZ2Mb1T+RtWn1P0b1V+g
+qfUfAg1/0bN91L6BUqfRelPKX095R9C+SNR/m+UvyXl30v5k1P8BYovQ/Gz
KD4gxT+l+M4Uv36ih1OtpIPFLQWDC4NUGNyJNrlzerwA2gu3rMsdx6E5Xnvb
2XsM7FzUpvVPaMFvqcOb34NFu1FBvy2bRDifMNjEbGzNX48rf/qZVXvGXH4O
h0OWG7fWyrJIyFPqXhMoxCbv/qcW/+Dzgdvb+/weymDQBav+m2QEGPt65xJm
JAvVLBWvsTlCZI/p36K14yNWRAX5HWmQ4ILQYG3Sjkb4HxhnW2KbhXW61cFy
/DlYL30x74yIwWaFjhr/2UJorppgZ/abQfj8QU/kVgphteXExw2ZVXhseKjh
wEUJTPfcLRg9sgEB102+u2y/hB9KJ1v6PefXU8+070eWteBx0bYR4tvleGKX
8Ux4R4JjQqvCBUENSMm5JVauv4kqQfjGJ1osBlm/UVWdV4evXt3pxvU7cGRX
6sXLBgxePCyeeGtGPdTnCqxPdvmS8Y3K36j6lLp/o/oLVP+Umg+h5t+o+V5K
v0Dpsyj9KaWvp/xDKH8kyv+N8rek/Hspf3KKv0DxZSh+FsUHpPinFN+Z4teX
ad1X3ZT/v/X7s8jdHhJs7xxUvXVFE/LsihTj41iU1naPdW0Qo9rmXIQi14B2
q69tvS7xcX7LbY/918VwgfodP9MGRLWvnOL0gs8Plj83W7eiBVoOF29VPCv/
63HlTz+9L3foCTNZKMxZoPN1Jn+eyj81005vxBY1p3UXbTl4XFd+t/wECyf7
sAWnP4gQe3j6+xXt/Hdfd7zpoTpfDx6fFpSjUoUU2cXlV19IEL9nsaGAf++r
9TNm269Mw+HBnVuqzDj8Sj72RcuORcuG8Cu+6/j8HA671dcxGGvptmv/nmas
ZXXYoyqFMHGfZ9LixO/P1y8qjQfVIfrQzqZ9T7fDSUF6+NELLIJbV/XUR4pR
WiDs2zy/Act2nI90OymB7QXmePLneqzebGjxYqP///999X6Kycvq/89Xrlcv
Kr5R+RtVn1L3b1R/geqfUvMh1PwbNd9L6RcofRalP6X09ZR/COWPRPm/Uf6W
lH8v5U9O8RcovgzFz6L4gBT/lOI7U/z6CWMM2sLjWQzI0Pr9XMSfL5nHs42k
GjGySjdAdxkLg2X2bisOieBVpWJmd7cGzoZRus5qfH167mbGxR9CzD58Lddl
2Sc8Gxr9Jqo3i0Pv2nRDHYWoVRiQHdpahW91ua412gwGtqSrypc0oac4ijnY
+eqvx5U//RxpqbwoZi2LxMCFx9bkiPAiY0nc0G+1yLxsvblkMAvr2XdL2AtC
zDmi3On6vBrObavja6cxqPBz6703rQnbA34urZF9hYY7Jk8ViySI/F2q7R1R
j6F2z1p90v0wUNdi9Cchiy++jVdUmyTgdnxpDTzVjILHp6pOmvB1gvR494kn
RIiMa91u/rkGHd+HnMqKleBu9Icu2zUNcK46Peh2TSySH5b4/FLn66IUuynb
Y/nvNW3B/ZpDeZg8oW1g024GK+TzTuS21cG8yC9kQPBuMr5R+RtVn1L3b1R/
geqfUvMh1PwbNd9L6RcofRalP6X09ZR/COWPRPm/Uf6WlH8v5U9O8RcovgzF
z6L4gBT/lOI7U/x62/bauw+jGJQ/PF+YnSDAu1ca713nl+Hw9/y+h3P5PEEn
tCnBTIJr5VeXt/xuxIU5Ruen8fX+i+g3KWNmMLi/NG6npakAFyc9bRrH7xc/
BZ3NDvUS5PR2UTA92gyb7lG+IwUs7Aw6YlKrJFAO0Ey13dGMl0anVQPrGfjl
GY0ufNsCIzmj9vGZFX89rvzpp7C5YHdGOH/uSz37POyhGBGzrHxiDzfg9T2N
HLPV/Lksozj2aZoIyxOLra+m1MIz6+O2mPX8uTj6W+onuXpYqlw2XaHsi8dJ
9msdVzD4dkHvA7e0GVZlN/Xbg97g5bb3d5R+8fW7TDLmqTFo2W0nLObrm0lN
dbnsfn4dtq6yWTlKgI7N4eYmsiVoTxoToP6LweC2+/bn9IVQaYye+HN9FfbZ
ilTd5jGodgyrrNCsx6nrCyNO9t9Dxjcqf6PqU+r+jeovUP1Taj6Emn+j5nsp
/QKlz6L0p5S+nvIPofyRKP83yt+S8u+l/Mkp/gLFl6H4WRQfkOKfUnxnil+/
erVP9n4LDpJnPcdnbGSxXKe6zctbhGVlyXu6djB4+kZLSaG5GZW1+knv5hbj
8+yTJ55EsOjZG9rx45EYc9NXaGefaoCL4PkL7VQWX38YyxUpSKAwwPuSpwef
V2oZxm7NYOE+su29zVQJVk9dtyE6vhGTPoTMDtDkMObrqPyhXxi4zXoZVb5Y
CI8kHePGxSwe6fZf9HO7CEPULH3c7f5792MHtIwmzeDPFfXmBVoqIgluXNK+
4RPejMzjxqPT53DIurpvuoUcvy+jG4sSjwtRUd59P7COzzekJilsz2/B9vjG
Ix3xFTh5IexGfIUEE6emyE1Z3IiBVkNTtT0zkGBl+8aqH4fYR8rb+9gz6Ly0
xj7rqQB307cYKPuwmJylO/Cnhhjr99T1llKoh3nW+OCgcRwuhj1MrL5Sg26p
Ia5Vkn/I+Eblb1R9St2/Uf0Fqn9KzYdQ82/UfC+lX6D0WZT+lNLXU/4hlD8S
5f9G+VtS/r2UPznFX6D4MhQ/i+IDkvxTgu9M8ev3PHjbZ/lSBtFz/hXqqjRj
548Hnw+sLIC7Q/jlfR4svLK6dhb3FkNbMc/kVEIdDoxIyC3kz/GycLHaeeV6
hAxarNVw2hePnPeEvkxmcM2tQ0PICZAwnW1zXfke2faJmxebs5i0Xe63yyUR
dgeq9r42tBZRapdyU+ewCFSrUbdcJMJ6r6lfl+z4jHUrY/rZ9+LX54LhFcnW
QtSf63pzraAK3/v62szj91VE/3SZs4eaYV+/rOPjxsK/Hlf+9PNaXPzG6pUs
vtuWrOuIFcGiIz3CeF0t0mzc1gx4x8KtW9+z6IAEM8J3mrUdacKgBEx4upcB
m/5mzGBZASZmdYv8c4pxKXLKlR4bFvPCitZMfyjC8ZXL43uV1mKaT9i21W18
PcL1FdwbwKCyvPLg1rZm7DPdswltEigZxw+ryGpE3Vn1gR8rnpDxjcrfqPqU
un+j+gtU/5SaD6Hm36j5Xkq/QOmzKP0ppa+n/EMofyTK/43yt6T8eyl/coq/
QPFlKH4WxQek+KcU35ni179a7B87T4ZFfP2CxU6eQky1cstN0KzG5Ny8g3c+
MSj21nGOy+Df5/sWE+HGCrDqmid+nufzZBOb9TNdOZy5MVI2U47By1EeU5PO
8r/PNc15jJsAVy4en3FKvxSnnYYJ5/Pxd+MpeQVGlcOT3gqGM9wk0D6y5Vry
VA6Hh/kPG17FwH6gTm1cfyEK9TcqJOpzeGm1TuueAgvvnqwMwVUhRh+527V3
M4fRBifd2EIWkpWZ2gePifHtTljKhmMsxPWmrdLbxVC7kfUl9MV/j1/5RHv3
XN3eHLSG31vNLOHrtr1NPglHBfBfv9TUJJqDae4/LvtCOATk/jI8c5o/B9PK
TkS2s0jvUps7diSfX7w+dzljmADPczYHB0vx30thRN76RQz0crxHyR4U4PKA
KzFlSQw0x3oNyBMLUBO5Xn8i3pPxjcrfqPqUun+j+gtU/5SaD6Hm36j5Xkq/
QOmzKP0ppa+n/EMofyTK/43yt6T8eyl/coq/QPFlKH4WxQek+KcU35ni1yeY
SrMGgzkIprZmbeDrv975EhtBlwDPdCwf9XnGonjouZlOVhIcu92onzu4CSts
Sh6Lq/n4dkNV5H1Xgsogv2V7pZuxVX5H5NyDHN7JtKWs5t+fku9PO69V/Dkv
5bp+XBAL+TD/+8U7xchPnGRe+6Ye/aKTB2wK42B3dZvbLV8OHsYml/8Fg9g1
20apeXBYXVRm0pzPf8/HQ9Pd94qRpJTndWQjh6jQhkfufH0p/WV+MWMmRsht
v0Rdaw6l4oDevXfzv29KUXARn3cMva5i1RrIYUWFpskUfl3fbwlJeBvw35vn
P3471vL4Hg43pU6sGyzN1/1fDm1PkZdA675l0Sttvj76POu49iwR+sYU7fk2
4zP6LGmesteKgU+3+gXBmmZ0tG9uNld6C5kc/X9/8XVIl98y7ZBFfH0nvWvX
lWtRZHyj8jeqPqXu36j+AtU/peZDqPk3ar6X0i9Q+ixKf0rp6yn/EMofifJ/
o/wtKf9eyp+c4i9QfBmKn0XxASn+KcV3pvj1jE/Aiw983vtd2Ttmn5ivKxUb
LXPHfMJE+WsO/R6wuPNKM3TYJAk0DPWSWy83wiNpnFj9KgPjD0rLD0YK8M6s
a7T2kDLcuFF8rbGEQXNv/zy/4BY81r5u4nH7AxZW57v6+3PQC+vd+kuBw10+
4zysJ4GNxfQ+pdUMCiwm/3P8bguW1ptPkTWqwIYpt8fp8fGwJHrrzMI7EkwJ
8K+82N2EmUcO3lo/loNth2OmHV93yol/3zoQ0YL+6sIeIxkO0xljVRNrBtu+
58tEJQkQ5ba66zi/P/u/H9jRtpyBieGi+48vCFCvN3nptBF8vTk1UbgzQ4jN
a9+Pk7X++Nfjyp9+1tltM/CpY7FPavRiZ37f73ItDm+e24xPyUVmvZazGGI2
5IHZERHaor/lMU9qUDl5znWpywxqYmeP/1hahxQvwVep9F1kfKPyN6o+pe7f
qP4C1T+l5kOo+TdqvpfSL1D6LEp/SunrKf8Qyh+J8n+j/C0p/17Kn5ziL1B8
GYqfRfEBKf4pxXem+PXiOU6J3V4sJi17+ePqCDGujit8e6OmDucKrk2zV2Qg
w7SmxZg1wXn9t9Gfa56jb5gmuDkMrq5MPlfW0IQ5MTHj5x/JxzaVPt9VKxgE
B1+M2xHdgp96O6Ky+1bgrotkwlK+/phlebx+g4MA+doeC0YMKYVvRHjETD7P
f8z677qzlsXjKcWJwlUi7N91wvTqRgZtt6YND0tsxsFQz/PRN9/Bsdti6IlD
fJzptfVJhqMYLlOOcz2X6rH069gJlbEsvr1bp1FQIYaZjaQzsLQBBZWZcw1u
spgbe15rKiPGx5TS9ADZRqxKiYrqP4GDtOqxW1syGWTnTQ9Mut+Cf0XTn5tM
Y5H3JeSO1xARogILvw1L+u9x36TzzJpMGRaniqOslVv5uiZNZsui5GaEjQ4c
un/e/841KWe6fGtCwXLfmOiefDK+UfkbVZ9S929Uf4Hqn1LzIdT8GzXfS+kX
KH0WpT+l9PWUfwjlj0T5v1H+lqR/L+FPTvEXKL4Mxc+i+IAU/5TiO1P8+m+O
Gz4kfGTx7yIpg8VpEnj333vvpVwzRmV6vg05wEHe8flt0SgOKW9/zJtkLsGK
wSdGf3DlcJJb0lN+n8WhfTcc5huJcX6A1ptTARyO1i5wWMPHg/Ak6+E+6yVw
lz3V/WAWi12zapmp6iL0Ebkkb5b7jMI+ix37rmPhkLq37coL/uejcsxyZPj8
+d2AcZ3g8FTxXtyKGSxM4nU07jUJMX64fX9p/ryLW6C+qGmOBHnZqWh43Qid
NsUEy7kcvivNTZmiyGJL6YAR5teF4HIUXRv5+lTO3ULvA5+X7dtk2qeNP/d+
35nyfClff3auEX5b0sMiIFXOd14fCWT7vFA7acfvi1exQZnn+b9rsnJPk0gE
RAb7yE3jkCmb7aZfw+Ba1+GTv4cL/3pc+dPPnspXB1/94uuX9zo61eoMpvVt
T48zEOB/ANMu+Zo=
   "], {{0, 0}, {51, 51}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{50.5, 
       FormBox["1", TraditionalForm]}, {41.5, 
       FormBox["10", TraditionalForm]}, {31.5, 
       FormBox["20", TraditionalForm]}, {21.5, 
       FormBox["30", TraditionalForm]}, {11.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["51", TraditionalForm]}}, {{50.5, 
       FormBox["1", TraditionalForm]}, {41.5, 
       FormBox["10", TraditionalForm]}, {31.5, 
       FormBox["20", TraditionalForm]}, {21.5, 
       FormBox["30", TraditionalForm]}, {11.5, 
       FormBox["40", TraditionalForm]}, {0.5, 
       FormBox["51", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {29.5, 
       FormBox["30", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {50.5, 
       FormBox["51", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {19.5, 
       FormBox["20", TraditionalForm]}, {29.5, 
       FormBox["30", TraditionalForm]}, {39.5, 
       FormBox["40", TraditionalForm]}, {50.5, 
       FormBox["51", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{524.58984375, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.771694421784465*^9, 3.771694436839675*^9}, 
   3.771694614094281*^9, 3.771694880734344*^9, 3.771703749525962*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"1312cb20-dca4-4ac5-8ae6-16771d511508"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"m", " ", "=", " ", 
   RowBox[{"FitRegression", "[", 
    RowBox[{
    "citiesFeaturesValues", ",", " ", "citiesPositivness", ",", " ", 
     "citiesFeaturesNames"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.771350791670023*^9, 3.771350804378113*^9}, {
   3.7713508524486303`*^9, 3.77135085577607*^9}, {3.771351033358552*^9, 
   3.771351048659725*^9}, {3.771351372288561*^9, 3.771351372558053*^9}, {
   3.771352353446257*^9, 3.771352432732538*^9}, {3.771355905146647*^9, 
   3.77135590634321*^9}, {3.771356050440531*^9, 3.7713560527164516`*^9}, {
   3.771356736256961*^9, 3.771356737540874*^9}, 3.771359010755967*^9, 
   3.771359171546298*^9, {3.771359211263359*^9, 3.771359234237255*^9}, {
   3.771359390294793*^9, 3.771359390770022*^9}, 3.771364051902135*^9, {
   3.771446959970146*^9, 3.771446960419052*^9}, {3.771447256988364*^9, 
   3.7714472578383904`*^9}, {3.7714486141367292`*^9, 3.771448616059444*^9}, 
   3.771448980094249*^9, {3.771494342712265*^9, 3.771494344069911*^9}, 
   3.771494429235093*^9, {3.771494529067401*^9, 3.771494544179295*^9}, 
   3.771495565394459*^9, 3.7714956915890503`*^9, 3.7716944908173656`*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"13fa3c08-5018-4d4d-92b5-cbbee4254ed2"],

Cell[BoxData[
 TemplateBox[{
  "Inverse","sing",
   "\"Matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"16.420259242473122`\\\", \\\",\\\", \\\"23.720315186212144`\\\", \
\\\",\\\", \\\"20.983445666611896`\\\", \\\",\\\", \
\\\"15.31470914936082`\\\", \\\",\\\", \\\"23.86900364878414`\\\", \\\",\\\", \
\\\"17.49129084605373`\\\", \\\",\\\", \\\"23.61467327187545`\\\", \\\",\\\", \
\\\"19.537753598663713`\\\", \\\",\\\", \\\"18.709658047083146`\\\", \
\\\",\\\", \\\"16.648613200997122`\\\", \\\",\\\", \
\\\"16.325242449246492`\\\", \\\",\\\", \\\"16.190343809726482`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"27\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \\\"15.160176346406137`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.314950411738696`\\\", \\\",\\\", \
\\\"14.314950411738696`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"49\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) is singular.\"",2,82,2,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77169114345396*^9, 3.771694491300901*^9, 
  3.771694645932941*^9, 3.771703749629182*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"3947acb4-583b-4f8f-a0e3-4fd079b8f2f5"],

Cell[BoxData[
 TemplateBox[{
  "Inverse","sing",
   "\"Matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"16.420259242473122`\\\", \\\",\\\", \\\"23.720315186212144`\\\", \
\\\",\\\", \\\"20.983445666611896`\\\", \\\",\\\", \
\\\"15.31470914936082`\\\", \\\",\\\", \\\"23.86900364878414`\\\", \\\",\\\", \
\\\"17.49129084605373`\\\", \\\",\\\", \\\"23.61467327187545`\\\", \\\",\\\", \
\\\"19.537753598663713`\\\", \\\",\\\", \\\"18.709658047083146`\\\", \
\\\",\\\", \\\"16.648613200997122`\\\", \\\",\\\", \
\\\"16.325242449246492`\\\", \\\",\\\", \\\"16.190343809726482`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"27\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \\\"15.160176346406137`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.314950411738696`\\\", \\\",\\\", \
\\\"14.314950411738696`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"49\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) is singular.\"",2,82,3,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77169114345396*^9, 3.771694491300901*^9, 
  3.771694645932941*^9, 3.7717037496728153`*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"fee6672d-87e5-4f31-8d73-731d0bd8895d"],

Cell[BoxData[
 TemplateBox[{
  "Inverse","sing",
   "\"Matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"16.420259242473122`\\\", \\\",\\\", \\\"23.720315186212144`\\\", \
\\\",\\\", \\\"20.983445666611896`\\\", \\\",\\\", \
\\\"15.31470914936082`\\\", \\\",\\\", \\\"23.86900364878414`\\\", \\\",\\\", \
\\\"17.49129084605373`\\\", \\\",\\\", \\\"23.61467327187545`\\\", \\\",\\\", \
\\\"19.537753598663713`\\\", \\\",\\\", \\\"18.709658047083146`\\\", \
\\\",\\\", \\\"16.648613200997122`\\\", \\\",\\\", \
\\\"16.325242449246492`\\\", \\\",\\\", \\\"16.190343809726482`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"27\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \\\"15.160176346406137`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \
\\\",\\\", \\\"14.314950411738696`\\\", \\\",\\\", \
\\\"14.314950411738696`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"49\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \
\\\"}\\\"}]\\) is singular.\"",2,82,4,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77169114345396*^9, 3.771694491300901*^9, 
  3.771694645932941*^9, 3.771703749703274*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"dfa36aa4-df0e-4085-909b-ae02f207fc83"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Inverse\\\", \
\\\"::\\\", \\\"sing\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,82,5,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77169114345396*^9, 3.771694491300901*^9, 
  3.771694645932941*^9, 3.7717037497424994`*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"6351f2c3-6918-45ac-a302-794fcc883f7a"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"Inverse\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"16.420259242473122`\\\", \\\",\\\", \\\
\"23.720315186212144`\\\", \\\",\\\", \\\"20.983445666611896`\\\", \\\",\\\", \
\\\"15.31470914936082`\\\", \\\",\\\", \\\"23.86900364878414`\\\", \\\",\\\", \
\\\"17.49129084605373`\\\", \\\",\\\", \\\"23.61467327187545`\\\", \\\",\\\", \
\\\"19.537753598663713`\\\", \\\",\\\", \\\"18.709658047083146`\\\", \
\\\",\\\", \\\"16.648613200997122`\\\", \\\",\\\", \
\\\"16.325242449246492`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"29\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.314950411738696`\\\", \\\",\\\", \\\"14.314950411738696`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"23.720315186212144`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"49\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"48\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\".\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]\\) \
is not a valid dataset or list of datasets.\"",2,82,6,18189128347026542710,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77169114345396*^9, 3.771694491300901*^9, 
  3.771694645932941*^9, 3.771703749846232*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"6dc768e0-6ecc-4aae-ae9d-c551784a01bf"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"Inverse\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"16.420259242473122`\\\", \\\",\\\", \\\
\"23.720315186212144`\\\", \\\",\\\", \\\"20.983445666611896`\\\", \\\",\\\", \
\\\"15.31470914936082`\\\", \\\",\\\", \\\"23.86900364878414`\\\", \\\",\\\", \
\\\"17.49129084605373`\\\", \\\",\\\", \\\"23.61467327187545`\\\", \\\",\\\", \
\\\"19.537753598663713`\\\", \\\",\\\", \\\"18.709658047083146`\\\", \
\\\",\\\", \\\"16.648613200997122`\\\", \\\",\\\", \
\\\"16.325242449246492`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"29\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.314950411738696`\\\", \\\",\\\", \\\"14.314950411738696`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"23.720315186212144`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"49\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"48\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\".\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]\\) \
is not a valid dataset or list of datasets.\"",2,82,7,18189128347026542710,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77169114345396*^9, 3.771694491300901*^9, 
  3.771694645932941*^9, 3.771703749977528*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"06863695-ba6b-47aa-87f2-28db37ff60f0"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"Inverse\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"16.420259242473122`\\\", \\\",\\\", \\\
\"23.720315186212144`\\\", \\\",\\\", \\\"20.983445666611896`\\\", \\\",\\\", \
\\\"15.31470914936082`\\\", \\\",\\\", \\\"23.86900364878414`\\\", \\\",\\\", \
\\\"17.49129084605373`\\\", \\\",\\\", \\\"23.61467327187545`\\\", \\\",\\\", \
\\\"19.537753598663713`\\\", \\\",\\\", \\\"18.709658047083146`\\\", \
\\\",\\\", \\\"16.648613200997122`\\\", \\\",\\\", \
\\\"16.325242449246492`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"29\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.31495041173869`\\\", \\\",\\\", \\\"14.31495041173869`\\\", \\\",\\\", \
\\\"14.314950411738696`\\\", \\\",\\\", \\\"14.314950411738696`\\\", \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"23.720315186212144`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"49\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"48\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\
\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\".\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}]\\) \
is not a valid dataset or list of datasets.\"",2,82,8,18189128347026542710,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77169114345396*^9, 3.771694491300901*^9, 
  3.771694645932941*^9, 3.771703750095603*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"ca5d4126-b0ee-4578-919a-2a2b911046b1"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"BarChart\\\", \
\\\"::\\\", \\\"ldata\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,82,9,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.77169114345396*^9, 3.771694491300901*^9, 
  3.771694645932941*^9, 3.7717037501361027`*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"5306f951-8b65-4b2d-bd7f-f172d9cf7000"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["m"], "Code",
 CellChangeTimes->{3.7716944999393044`*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"96017ae7-f811-4369-84f3-ccf0a0254f5b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            FractionBox["1", "49"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"0.5017676767676768`", "\[VeryThinSpace]", "-", 
                RowBox[{"RunRegression", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Inverse", "[", 
                    RowBox[{"{", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "}"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    "15.361585717739011`", ",", "22.807804835004404`", ",", 
                    "20.02229654814678`", ",", "14.734558801007466`", ",", 
                    "22.869732865163837`", ",", "16.56007919133564`", ",", 
                    "22.70037228060819`", ",", "18.643880856118624`", ",", 
                    TemplateBox[{"35"},
                    "OutputSizeLimit`Skeleton"], ",", "13.714136206701596`", 
                    ",", "13.714136206701596`", ",", "13.714136206701596`", 
                    ",", "13.714136206701596`", ",", "13.714136206701596`", 
                    ",", "13.714136206701596`", ",", "13.714136206701596`", 
                    ",", "18.10414925514301`"}], "}"}]}], ",", 
                  RowBox[{"{", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton"], "}"}]}], "]"}]}], "]"}], "+", 
              TemplateBox[{"47"},
               "OutputSizeLimit`Skeleton"], "+", 
              RowBox[{"Abs", "[", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "]"}]}], ")"}]}], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 18189128347026542710, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 18189128347026542710, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 18189128347026542710, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[18189128347026542710 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.771694500664877*^9, 3.77169465172803*^9, 
  3.771703750504766*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"6dbfda34-4f70-4f8d-9c97-327dd8880fdd"]
}, Open  ]],

Cell["Lets compare the land use across region", "Text",
 CellChangeTimes->{{3.7716230389171543`*^9, 
  3.7716230649283113`*^9}},ExpressionUUID->"13ca92df-031f-49fc-8d35-\
f0d7e45c8ee7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Lookup", "[", 
    RowBox[{
     RowBox[{"ImportAllFeatures", "[", "city", "]"}], ",", " ", 
     RowBox[{"Keys", "[", "statsAreaShareByPurpose", "]"}]}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Keys", "[", "statsAreaShareByPurpose", "]"}]}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.7716230389171543`*^9, 3.771623065802146*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"daeaff8c-13a2-42a2-89c0-cc2fb636c1af"],

Cell[BoxData[
 TemplateBox[{
  "$IterationLimit","itlim",
   "\"Iteration limit of \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) exceeded.\"",2,84,
   10,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.771703750903798*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"fcf2b548-1441-463d-a409-6408b0a58af7"],

Cell[BoxData[
 TemplateBox[{
  "Import","chtype",
   "\"First argument \\!\\(\\*RowBox[{\\\"Hold\\\", \\\"[\\\", \
RowBox[{\\\"CityDataPath\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"/Users/ashvardanian/CodeMine/WolframSummer19/Data/\
Features\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"CityName\\\", \\\"[\\\", \
RowBox[{\\\"EntityValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EntityValue\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"EntityValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"EntityValue\\\", \\\"[\\\", RowBox[{RowBox[{\\\"EntityValue\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"EntityValue\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\
\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"\\\\\\\
\"Name\\\\\\\"\\\"}], \\\"]\\\"}], \\\",\\\", \\\"\\\\\\\"Name\\\\\\\"\\\"}], \
\\\"]\\\"}], \\\",\\\", \\\"\\\\\\\"Name\\\\\\\"\\\"}], \\\"]\\\"}], \
\\\",\\\", \\\"\\\\\\\"Name\\\\\\\"\\\"}], \\\"]\\\"}], \\\",\\\", \\\"\\\\\\\
\"Name\\\\\\\"\\\"}], \\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"]\\\"}]\\) \
is not a valid file, directory, or URL specification.\"",2,84,11,
   18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.7717037510086327`*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"fc6e1d8f-c353-406c-9565-de89d9d0046d"],

Cell[BoxData[
 TemplateBox[{
  "Keys","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"statsAreaShareByPurpose\\\"}]\\) is \
not a valid Association or a list of rules.\"",2,84,12,18189128347026542710,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.771703751095154*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"7700580d-148f-4fdd-b5b3-1b708afb41f7"],

Cell[BoxData[
 TemplateBox[{
  "Lookup","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"$Failed\\\"}]\\) is not a valid \
Association or a list of rules.\"",2,84,13,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.771703751141522*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"5fb2be08-bde4-4f73-90b5-f964a5811d96"],

Cell[BoxData[
 TemplateBox[{
  "Keys","invrl",
   "\"The argument \\!\\(\\*RowBox[{\\\"statsAreaShareByPurpose\\\"}]\\) is \
not a valid Association or a list of rules.\"",2,84,14,18189128347026542710,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.771703751198744*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"f7c49205-94af-47c1-ba8f-434e6bfd9b73"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{\\\"Lookup\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ImportAllFeatures\\\", \\\"[\\\", \\\"city\\\", \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Keys\\\", \\\"[\\\", \
\\\"statsAreaShareByPurpose\\\", \\\"]\\\"}]}], \\\"]\\\"}]\\) is not a valid \
dataset or list of datasets.\"",2,84,15,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.771703751305294*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"b3bb90fa-55e6-48ff-8765-5c7bb7eac460"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{\\\"Lookup\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ImportAllFeatures\\\", \\\"[\\\", \\\"city\\\", \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Keys\\\", \\\"[\\\", \
\\\"statsAreaShareByPurpose\\\", \\\"]\\\"}]}], \\\"]\\\"}]\\) is not a valid \
dataset or list of datasets.\"",2,84,16,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.7717037513974743`*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"fad628d0-40fd-4a62-a174-663dea952f4a"],

Cell[BoxData[
 TemplateBox[{
  "BarChart","ldata",
   "\"\\!\\(\\*RowBox[{\\\"Lookup\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ImportAllFeatures\\\", \\\"[\\\", \\\"city\\\", \
\\\"]\\\"}], \\\",\\\", RowBox[{\\\"Keys\\\", \\\"[\\\", \
\\\"statsAreaShareByPurpose\\\", \\\"]\\\"}]}], \\\"]\\\"}]\\) is not a valid \
dataset or list of datasets.\"",2,84,17,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.771703751489972*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"37760be4-a4c3-4e25-86ba-29af4305f413"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"BarChart\\\", \
\\\"::\\\", \\\"ldata\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,84,18,18189128347026542710,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.771671001046298*^9, 3.771703751525071*^9},
 CellLabel->
  "During evaluation of \
In[84]:=",ExpressionUUID->"54a589df-6bca-4d26-8349-cd968ec2d0e2"],

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Lookup", "[", 
    RowBox[{
     RowBox[{"ImportAllFeatures", "[", "city", "]"}], ",", 
     RowBox[{"Keys", "[", "statsAreaShareByPurpose", "]"}]}], "]"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Keys", "[", "statsAreaShareByPurpose", "]"}]}], ",", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}]}], "]"}]], "Output",
 CellChangeTimes->{3.771671001693563*^9, 3.771703751554764*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"87c0c112-55d1-422d-92f6-59befa704018"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Are there correlations between cities topology and \
quality of life?", "Subtitle"]], "Chapter",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 
  3.7711017028966513`*^9}},ExpressionUUID->"6c1bcee3-7d57-470c-83c9-\
d43fb7fc74bf"],

Cell["wewe", "Text",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 3.77110170100001*^9}, {3.771101741395993*^9, 
  3.7711017424741297`*^9}},ExpressionUUID->"3283bbee-62a9-4fc6-b5fd-\
8bd09809fc32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Are there correlations between known features and \
quality of life?", "Subtitle"]], "Chapter",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
   3.771101487741495*^9, 3.771101697078874*^9}, 
   3.771101745126054*^9},ExpressionUUID->"ab3308a3-abcb-4b85-978f-\
770e36f58aa0"],

Cell["wewe", "Text",
 CellChangeTimes->{{3.771101273954318*^9, 3.7711014398267927`*^9}, {
  3.771101487741495*^9, 3.771101697078874*^9}, {3.7711017481709642`*^9, 
  3.7711017524833117`*^9}, {3.77160336959536*^9, 
  3.771603372464587*^9}},ExpressionUUID->"5e201699-c7fa-4448-9db3-\
a409c7f2831f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BuildDataset", "[", 
    RowBox[{"city_", ",", " ", "rating_Real", ",", " ", "imgs_"}], "]"}], " ",
    ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ratings", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"ratings", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{"rating", ",", " ", 
         RowBox[{"Length", "[", "imgs", "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "Same", " ", "for", " ", "all", " ", "images", " ", "within", " ", 
        "city"}], "*)"}], "\n", "\t", 
      RowBox[{"AssociationsFromPair", "[", 
       RowBox[{"imgs", ",", " ", "ratings"}], "]"}]}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.771695084462446*^9, 3.771695092612587*^9}, {
  3.771695420377442*^9, 3.7716954240693274`*^9}, {3.771695525490217*^9, 
  3.7716955427053223`*^9}, {3.77169557475178*^9, 3.771695608141577*^9}, {
  3.7717013125325403`*^9, 3.771701315713105*^9}, {3.7717013958100977`*^9, 
  3.771701472688505*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"b3ef612e-213d-4424-ab69-0f6a32ff097c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetMaps", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BuildDataset", "[", 
         RowBox[{"#1", ",", " ", "#2", ",", " ", 
          RowBox[{"ImportMaps", "[", "#1", "]"}]}], "]"}], " ", "&"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"citiesPopular", ",", " ", "citiesPositivness"}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetSatellites", " ", "=", " ", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"BuildDataset", "[", 
         RowBox[{"#1", ",", " ", "#2", ",", " ", 
          RowBox[{"ImportSatellites", "[", "#1", "]"}]}], "]"}], " ", "&"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"citiesPopular", ",", " ", "citiesPositivness"}], "}"}]}], 
      "]"}], "]"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.771695084462446*^9, 3.771695131022481*^9}, {
   3.771695179577177*^9, 3.771695215558429*^9}, {3.7716953433989143`*^9, 
   3.7716953529173613`*^9}, {3.771695495691889*^9, 3.771695521620345*^9}, {
   3.771695563051428*^9, 3.771695563864685*^9}, 3.7716969865035973`*^9, {
   3.771701456371614*^9, 3.771701489783415*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"3dc86f4f-ab41-4a3b-a7fc-d050a07843dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetTrain", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"datasetMaps", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetMaps", "]"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetValidate", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"datasetMaps", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetMaps", "]"}]}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771695084462446*^9, 3.7716951066201973`*^9}, {
   3.771701050881578*^9, 3.771701051706173*^9}, {3.771701577001584*^9, 
   3.771701581530403*^9}, {3.771701613310336*^9, 3.771701614358871*^9}, 
   3.771702026850885*^9, {3.77170385339028*^9, 3.771703857527769*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"c345457d-adc3-4886-82ee-570b19476758"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelMapsANN", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{"datasetTrain", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}], ",", " ", 
     RowBox[{"ValidationSet", "\[Rule]", "datasetValidate"}], ",", " ", 
     RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}]}], 
    "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.771695084462446*^9, 3.7716951066201973`*^9}, {
   3.771701050881578*^9, 3.771701051706173*^9}, {3.771701577001584*^9, 
   3.771701581530403*^9}, {3.771701613310336*^9, 3.771701614358871*^9}, 
   3.771702026850885*^9},ExpressionUUID->"fa821b18-598d-4969-a5ce-\
d0cc2bc295df"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetTrain", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"datasetSatellites", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetSatellites", "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetValidate", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"datasetSatellites", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetSatellites", "]"}]}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771695084462446*^9, 3.7716951066201973`*^9}, {
   3.771701050881578*^9, 3.77170106832066*^9}, {3.7717015871684303`*^9, 
   3.771701628612402*^9}, 3.771701836007718*^9, 3.771702025299842*^9, 
   3.771702128773827*^9, {3.771702475598556*^9, 3.771702475949767*^9}, {
   3.771703862173395*^9, 3.7717038631782417`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"dca30a8c-da2c-4c72-a317-5b189a17c869"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"modelSatellitesANN", " ", "=", " ", 
   RowBox[{"Predict", "[", 
    RowBox[{"datasetTrain", ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<NeuralNetwork\>\""}], ",", " ", 
     RowBox[{"ValidationSet", "\[Rule]", "datasetValidate"}], ",", " ", 
     RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Pwanel\>\""}]}], 
    "]"}]}], ";"}]], "Code",
 Evaluatable->False,
 CellChangeTimes->{{3.771695084462446*^9, 3.7716951066201973`*^9}, {
   3.771701050881578*^9, 3.77170106832066*^9}, {3.7717015871684303`*^9, 
   3.771701628612402*^9}, 3.771701836007718*^9, 
   3.771702025299842*^9},ExpressionUUID->"b52d97d1-1f12-4f4e-927c-\
7e474525430d"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.771701055607881*^9, 3.771701069093855*^9}, 
   3.7717017566127987`*^9},
 CellLabel->
  "Out[656]=",ExpressionUUID->"ce3936bf-979f-4a74-ae40-f19f41eb0104"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "model", "]"}]], "Code",
 CellChangeTimes->{3.771696127001232*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"a63cf4cf-2c05-410c-a7b7-f80e746dc6a5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`model\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`model\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`model\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> "Global`model", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`model"], True]]], "Output",
 CellChangeTimes->{3.7716961291480513`*^9, 3.771703764701326*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"e95e891e-0d79-402f-b496-23d0055cfcb8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cnnFull", " ", "=", " ", 
   RowBox[{
   "NetModel", "[", "\"\<ResNet-101 Trained on YFCC100m Geotagged Data\>\"", 
    "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.771697076399399*^9, 3.771697086936078*^9}, {
  3.771701157745332*^9, 3.771701163246292*^9}, {3.771701236513834*^9, 
  3.7717012371068773`*^9}, {3.771701284764735*^9, 3.77170128529869*^9}, {
  3.77170207100424*^9, 3.771702074100959*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"8eb4279a-1f74-4ac8-9b4d-7a561e752984"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelGeoCNN", " ", "=", " ", 
  RowBox[{"NetFlatten", "[", 
   RowBox[{
    RowBox[{"NetChain", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NetTake", "[", 
        RowBox[{"cnnFull", ",", " ", "\"\<pool1\>\""}], "]"}], ",", " ", 
       RowBox[{"LinearLayer", "[", 
        RowBox[{"{", "}"}], "]"}], ",", " ", "LogisticSigmoid"}], "}"}], 
     "]"}], ",", " ", "1"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.771701679489496*^9, 3.771701725723916*^9}, {
   3.771701952576314*^9, 3.771701958218424*^9}, 3.771702088913781*^9, {
   3.7717023018480253`*^9, 3.771702412505938*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"b8a763af-5bba-4ece-b071-a8d0de5d0cb1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["43", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{3}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 3,
                     "Interleaving" -> False, 
                    "$SpatialDimensions" -> {224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 7, 7}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{3, 3}, {3, 3}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 1,
                     1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Outputs", "Output"]}], 
                    "7" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Outputs", "Output"]}], 
                    "8" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Outputs", "Output"]}], 
                    "9" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Outputs", "Output"]}], 
                    "10" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Outputs", "Output"]}], 
                    "11" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Outputs", "Output"]}], 
                    "12" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Outputs", "Output"]}], 
                    "13" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Outputs", "Output"]}], 
                    "14" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Outputs", "Output"]}], 
                    "15" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Outputs", "Output"]}], 
                    "16" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Outputs", "Output"]}], 
                    "17" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit5" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Outputs", "Output"]}], 
                    "18" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit6" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Outputs", "Output"]}], 
                    "19" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit7" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Outputs", "Output"]}], 
                    "20" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit8" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Outputs", "Output"]}], 
                    "21" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit9" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Outputs", "Output"]}], 
                    "22" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit10" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Outputs", "Output"]}], 
                    "23" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit11" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Outputs", "Output"]}], 
                    "24" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit12" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Outputs", "Output"]}], 
                    "25" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit13" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Outputs", "Output"]}], 
                    "26" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit14" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Outputs", "Output"]}], 
                    "27" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit15" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Outputs", "Output"]}], 
                    "28" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit16" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Outputs", "Output"]}], 
                    "29" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit17" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Outputs", "Output"]}], 
                    "30" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit18" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Outputs", "Output"]}], 
                    "31" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit19" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Outputs", "Output"]}], 
                    "32" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit20" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Outputs", "Output"]}], 
                    "33" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit21" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Outputs", "Output"]}], 
                    "34" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit22" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Outputs", "Output"]}], 
                    "35" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit23" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Outputs", "Output"]}], 
                    "36" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Outputs", "Output"]}], 
                    "37" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 2048,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 2048],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Outputs", "Output"]}], 
                    "38" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 2048,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 2048],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Outputs", "Output"]}], 
                    "39" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "40" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "41" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]]], 
                    "42" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 2048}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2048, "$InputDimensions" -> {2048}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], "43" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "22", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "23", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "24", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "26", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "27", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "28", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "30", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "29", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "31", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "30", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "32", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "31", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "33", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "32", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "34", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "33", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "34", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "36", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "37", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "36", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "38", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "37", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "39", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "38", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "40", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "39", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "41", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "40", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "42", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "41", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "43", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "42", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "43", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10", "Interleaving" -> False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"22\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"23\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"24\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"25\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"26\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"27\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"28\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"29\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"30\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"31\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"32\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"33\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"34\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"35\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"36\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"37\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"38\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"39\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"40\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"41\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["AggregationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"42\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"43\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.771703769226363*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"29802e4b-1f63-4a06-87a6-570224182cb8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"datasetTrain", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"datasetSatellites", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetSatellites", "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"datasetValidate", " ", "=", " ", 
   RowBox[{"Drop", "[", 
    RowBox[{"datasetSatellites", ",", " ", 
     RowBox[{"constantShareTraining", " ", "*", " ", 
      RowBox[{"Length", "[", "datasetSatellites", "]"}]}]}], "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.771702051691362*^9, 3.771702057357749*^9}, {
   3.7717020944380827`*^9, 3.771702100249503*^9}, {3.77170219270057*^9, 
   3.7717022120480337`*^9}, 3.771703475495027*^9, {3.771703899626437*^9, 
   3.771703916305149*^9}},ExpressionUUID->"8a88b223-04b4-4d6c-a5e4-\
69fd1d284c5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"modelGeoCNN", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"modelGeoCNN", ",", " ", 
    RowBox[{"Association", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Input\>\"", "\[Rule]", 
        RowBox[{"Keys", "[", "datasetTrain", "]"}]}], ",", 
       RowBox[{"\"\<Output\>\"", "\[Rule]", 
        RowBox[{"Values", "[", "datasetTrain", "]"}]}]}], "}"}], "]"}], ",", 
    " ", "All"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.771702051691362*^9, 3.771702057357749*^9}, {
   3.7717020944380827`*^9, 3.771702100249503*^9}, {3.77170219270057*^9, 
   3.7717022120480337`*^9}, 3.771703475495027*^9, {3.771703646880005*^9, 
   3.771703704613678*^9}, {3.771703777811902*^9, 3.771703807402351*^9}, 
   3.7717038433808413`*^9, {3.771703926567396*^9, 3.7717039384147387`*^9}, {
   3.7717041901368637`*^9, 
   3.771704193396693*^9}},ExpressionUUID->"cb560b9a-b394-468c-a7ba-\
e55eca9218e1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["43", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{3}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{3}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 3,
                     "Interleaving" -> False, 
                    "$SpatialDimensions" -> {224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 7, 7}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {7, 7}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{3, 3}, {3, 3}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{1, 1}, {1, 1}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 1,
                     1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit1", "Outputs", "Output"]}], 
                    "7" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit2", "Outputs", "Output"]}], 
                    "8" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{64, 64, 3,
                     3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 64, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "_plus_stage1_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage1_unit3", "Outputs", "Output"]}], 
                    "9" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 256, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit1", "Outputs", "Output"]}], 
                    "10" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit2", "Outputs", "Output"]}], 
                    "11" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit3", "Outputs", "Output"]}], 
                    "12" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{128, 128, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{128}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 128, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "_plus_stage2_unit4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage2_unit4", "Outputs", "Output"]}], 
                    "13" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 512, 
                    1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit1", "Outputs", "Output"]}], 
                    "14" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit2", "Outputs", "Output"]}], 
                    "15" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit3", "Outputs", "Output"]}], 
                    "16" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit4", "Outputs", "Output"]}], 
                    "17" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit5" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit5", "Outputs", "Output"]}], 
                    "18" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit6" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit6", "Outputs", "Output"]}], 
                    "19" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit7" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit7", "Outputs", "Output"]}], 
                    "20" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit8" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit8", "Outputs", "Output"]}], 
                    "21" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit9" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit9", "Outputs", "Output"]}], 
                    "22" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit10" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit10", "Outputs", "Output"]}], 
                    "23" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit11" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit11", "Outputs", "Output"]}], 
                    "24" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit12" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit12", "Outputs", "Output"]}], 
                    "25" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit13" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit13", "Outputs", "Output"]}], 
                    "26" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit14" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit14", "Outputs", "Output"]}], 
                    "27" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit15" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit15", "Outputs", "Output"]}], 
                    "28" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit16" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit16", "Outputs", "Output"]}], 
                    "29" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit17" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit17", "Outputs", "Output"]}], 
                    "30" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit18" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit18", "Outputs", "Output"]}], 
                    "31" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit19" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit19", "Outputs", "Output"]}], 
                    "32" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit20" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit20", "Outputs", "Output"]}], 
                    "33" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit21" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit21", "Outputs", "Output"]}], 
                    "34" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit22" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit22", "Outputs", "Output"]}], 
                    "35" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{256, 256, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{256}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1024, 256,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "_plus_stage3_unit23" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage3_unit23", "Outputs", "Output"]}], 
                    "36" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{1024}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 1024,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "sc" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {2, 2}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 1024],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "sc", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "sc", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit1", "Outputs", "Output"]}], 
                    "37" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 2048,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 2048],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit2", "Outputs", "Output"]}], 
                    "38" -> Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn1" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 2048,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 2048],
                     "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{512, 512, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "bn3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "relu3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2048, 512,
                     1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {7, 7}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "_plus_stage4_unit3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus_stage4_unit3", "Outputs", "Output"]}], 
                    "39" -> Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{2048}],
                     "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{2048}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00002, "$Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "40" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 7, 7}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]]], "41" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]]], 
                    "42" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 2048}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2048, "$InputDimensions" -> {2048}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], "43" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "22", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "23", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "24", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "26", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "27", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "28", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "30", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "29", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "31", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "30", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "32", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "31", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "33", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "32", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "34", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "33", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "35", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "34", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "36", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "35", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "37", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "36", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "38", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "37", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "39", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "38", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "40", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "39", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "41", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "40", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "42", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "41", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "43", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "42", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "43", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10", "Interleaving" -> False]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"22\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"23\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"24\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"25\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"26\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"27\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"28\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"29\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"30\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "30"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"31\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "31"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"32\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "32"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"33\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "33"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"34\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "34"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"35\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "35"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"36\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "11", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "36"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"37\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "37"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"38\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "10", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "38"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"39\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "39"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"40\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "40"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"41\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["AggregationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2048\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "41"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"42\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "42"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"43\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LogisticSigmoid", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", Annotation[#, {"Nodes", "43"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"real\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.771703769934696*^9, 3.771703799237468*^9}, 
   3.7717038309802647`*^9, 3.771704200641663*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"13442e55-949d-4dac-8cac-bbd4b04ec8bb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1113, 832},
WindowMargins->{{Automatic, 131}, {Automatic, 50}},
TaggingRules->{"Salvaged" -> True},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 184, 3, 98, "Title",ExpressionUUID->"112c77e2-f45b-4372-906b-a938d28da3f8"],
Cell[CellGroupData[{
Cell[789, 29, 182, 3, 62, "Section",ExpressionUUID->"2f1f3b8e-3200-48b9-b773-a77a1c396b17"],
Cell[974, 34, 538, 8, 81, "Text",ExpressionUUID->"c6307c66-135d-4af1-918e-b52e229fb589"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1549, 47, 254, 4, 56, "Chapter",ExpressionUUID->"ac13fabb-576a-4a4b-8847-2bb61f653aef"],
Cell[1806, 53, 472, 8, 58, "Text",ExpressionUUID->"d7112578-2f96-4683-9976-1d246abd738b"],
Cell[2281, 63, 13501, 334, 984, "Code",ExpressionUUID->"20961709-7c7a-45d4-a981-9ac2574c6877"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15819, 402, 270, 5, 56, "Chapter",ExpressionUUID->"684ffadd-38af-4be8-83bf-99937c2f50b6"],
Cell[16092, 409, 346, 6, 35, "Text",ExpressionUUID->"2c0225ee-0b7c-4924-8b64-a72ab5040bfe"],
Cell[16441, 417, 8380, 207, 642, "Code",ExpressionUUID->"acdb5163-89af-4011-8610-a985ea22ddfc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24858, 629, 294, 4, 56, "Chapter",ExpressionUUID->"f13af7f9-8d60-4430-b05b-364fe3261edc"],
Cell[25155, 635, 1895, 39, 91, "Code",ExpressionUUID->"4c25a172-1f5e-4ece-a2a0-a28dcc91de33"],
Cell[27053, 676, 5819, 133, 395, "Code",ExpressionUUID->"28b7f604-9d20-43ee-9c76-9f66715d0077"],
Cell[32875, 811, 4116, 90, 395, "Code",ExpressionUUID->"2be1d42f-5581-456f-be78-898b6ec8f702"],
Cell[36994, 903, 17387, 372, 1383, "Code",ExpressionUUID->"ce916f56-0286-4291-9303-f08a2c807b22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54418, 1280, 369, 5, 56, "Chapter",ExpressionUUID->"31ec80d6-775d-4599-a9dc-de5307132f4f"],
Cell[54790, 1287, 2349, 55, 167, "Code",ExpressionUUID->"b390a3c8-0279-4919-a9b9-ecf0cf3957f6"],
Cell[57142, 1344, 834, 18, 91, "Code",ExpressionUUID->"c766c488-b0f2-40dd-b6b0-55ce54d425cf"],
Cell[57979, 1364, 263, 6, 35, "Text",ExpressionUUID->"13349771-2cbd-4640-86e0-2a496adaad4a"],
Cell[58245, 1372, 2520, 44, 91, "Code",ExpressionUUID->"1ba0fedf-ebcf-47e3-8705-8f2f4c11ea50"],
Cell[CellGroupData[{
Cell[60790, 1420, 2593, 45, 91, "Code",ExpressionUUID->"dd94b0a0-2b74-462f-8d54-573d698ec4b3"],
Cell[63386, 1467, 65959, 1256, 362, "Output",ExpressionUUID->"49fbb9e6-ced3-44ae-a53d-168fc530af80"]
}, Open  ]],
Cell[129360, 2726, 498, 9, 58, "Text",ExpressionUUID->"04da58f6-384a-4c46-83b1-c68f03702b2d"],
Cell[129861, 2737, 1115, 22, 52, "Code",ExpressionUUID->"a58ae607-e3f4-479d-9dc6-6664faa1cf71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131013, 2764, 266, 5, 56, "Chapter",ExpressionUUID->"8a65fa07-75ab-4cd8-9e92-75fdfaaad169"],
Cell[131282, 2771, 293, 5, 35, "Text",ExpressionUUID->"1e314e11-051b-4643-8db0-01d456f6b7b3"],
Cell[131578, 2778, 8708, 178, 585, "Code",ExpressionUUID->"d54f38e5-c079-43b6-a6e9-599471a76047"],
Cell[140289, 2958, 1053, 18, 52, "Code",ExpressionUUID->"7b906042-07a2-4091-9985-37c02a3bdd1a"],
Cell[141345, 2978, 1492, 29, 72, "Code",ExpressionUUID->"be32058e-de7f-49c4-9930-e83a1bd14d48"],
Cell[142840, 3009, 611, 15, 52, "Code",ExpressionUUID->"796626e7-9229-4ab3-b59e-8111135ac5f3"],
Cell[143454, 3026, 597, 13, 52, "Code",ExpressionUUID->"8be1f01a-8445-4672-9c86-0e6bc45bdd45"],
Cell[CellGroupData[{
Cell[144076, 3043, 340, 6, 52, "Code",ExpressionUUID->"a1ee4fab-ca0a-476a-939e-0d3ea134d579"],
Cell[144419, 3051, 35219, 589, 545, "Output",ExpressionUUID->"1312cb20-dca4-4ac5-8ae6-16771d511508"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179675, 3645, 1249, 20, 52, "Code",ExpressionUUID->"13fa3c08-5018-4d4d-92b5-cbbee4254ed2"],
Cell[180927, 3667, 1735, 28, 59, "Message",ExpressionUUID->"3947acb4-583b-4f8f-a0e3-4fd079b8f2f5"],
Cell[182665, 3697, 1737, 28, 59, "Message",ExpressionUUID->"fee6672d-87e5-4f31-8d73-731d0bd8895d"],
Cell[184405, 3727, 1735, 28, 59, "Message",ExpressionUUID->"dfa36aa4-df0e-4085-909b-ae02f207fc83"],
Cell[186143, 3757, 514, 11, 24, "Message",ExpressionUUID->"6351f2c3-6918-45ac-a302-794fcc883f7a"],
Cell[186660, 3770, 2084, 33, 59, "Message",ExpressionUUID->"6dc768e0-6ecc-4aae-ae9d-c551784a01bf"],
Cell[188747, 3805, 2084, 33, 59, "Message",ExpressionUUID->"06863695-ba6b-47aa-87f2-28db37ff60f0"],
Cell[190834, 3840, 2084, 33, 59, "Message",ExpressionUUID->"ca5d4126-b0ee-4578-919a-2a2b911046b1"],
Cell[192921, 3875, 516, 11, 24, "Message",ExpressionUUID->"5306f951-8b65-4b2d-bd7f-f172d9cf7000"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193474, 3891, 149, 2, 52, "Code",ExpressionUUID->"96017ae7-f811-4369-84f3-ccf0a0254f5b"],
Cell[193626, 3895, 10518, 264, 147, "Output",ExpressionUUID->"6dbfda34-4f70-4f8d-9c97-327dd8880fdd"]
}, Open  ]],
Cell[204159, 4162, 185, 3, 35, "Text",ExpressionUUID->"13ca92df-031f-49fc-8d35-f0d7e45c8ee7"],
Cell[CellGroupData[{
Cell[204369, 4169, 546, 11, 52, "Code",ExpressionUUID->"daeaff8c-13a2-42a2-89c0-cc2fb636c1af"],
Cell[204918, 4182, 383, 9, 24, "Message",ExpressionUUID->"fcf2b548-1441-463d-a409-6408b0a58af7"],
Cell[205304, 4193, 1319, 22, 59, "Message",ExpressionUUID->"fc6e1d8f-c353-406c-9565-de89d9d0046d"],
Cell[206626, 4217, 424, 10, 24, "Message",ExpressionUUID->"7700580d-148f-4fdd-b5b3-1b708afb41f7"],
Cell[207053, 4229, 406, 9, 24, "Message",ExpressionUUID->"5fb2be08-bde4-4f73-90b5-f964a5811d96"],
Cell[207462, 4240, 424, 10, 24, "Message",ExpressionUUID->"f7c49205-94af-47c1-ba8f-434e6bfd9b73"],
Cell[207889, 4252, 592, 12, 24, "Message",ExpressionUUID->"b3bb90fa-55e6-48ff-8765-5c7bb7eac460"],
Cell[208484, 4266, 594, 12, 24, "Message",ExpressionUUID->"fad628d0-40fd-4a62-a174-663dea952f4a"],
Cell[209081, 4280, 592, 12, 24, "Message",ExpressionUUID->"37760be4-a4c3-4e25-86ba-29af4305f413"],
Cell[209676, 4294, 469, 10, 24, "Message",ExpressionUUID->"54a589df-6bca-4d26-8349-cd968ec2d0e2"],
Cell[210148, 4306, 539, 11, 56, "Output",ExpressionUUID->"87c0c112-55d1-422d-92f6-59befa704018"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[210736, 4323, 299, 5, 56, "Chapter",ExpressionUUID->"6c1bcee3-7d57-470c-83c9-d43fb7fc74bf"],
Cell[211038, 4330, 244, 4, 35, "Text",ExpressionUUID->"3283bbee-62a9-4fc6-b5fd-8bd09809fc32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211319, 4339, 320, 5, 56, "Chapter",ExpressionUUID->"ab3308a3-abcb-4b85-978f-770e36f58aa0"],
Cell[211642, 4346, 295, 5, 35, "Text",ExpressionUUID->"5e201699-c7fa-4448-9db3-a409c7f2831f"],
Cell[211940, 4353, 1122, 26, 110, "Code",ExpressionUUID->"b3ef612e-213d-4424-ab69-0f6a32ff097c"],
Cell[213065, 4381, 1436, 34, 72, "Code",ExpressionUUID->"3dc86f4f-ab41-4a3b-a7fc-d050a07843dd"],
Cell[214504, 4417, 885, 19, 72, "Code",ExpressionUUID->"c345457d-adc3-4886-82ee-570b19476758"],
Cell[215392, 4438, 699, 14, 36, "Code",ExpressionUUID->"fa821b18-598d-4969-a5ce-d0cc2bc295df",
 Evaluatable->False],
Cell[216094, 4454, 964, 21, 72, "Code",ExpressionUUID->"dca30a8c-da2c-4c72-a317-5b189a17c869"],
Cell[CellGroupData[{
Cell[217083, 4479, 683, 14, 36, "Code",ExpressionUUID->"b52d97d1-1f12-4f4e-927c-7e474525430d",
 Evaluatable->False],
Cell[217769, 4495, 212, 4, 34, "Output",ExpressionUUID->"ce3936bf-979f-4a74-ae40-f19f41eb0104"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218018, 4504, 188, 3, 52, "Code",ExpressionUUID->"a63cf4cf-2c05-410c-a7b7-f80e746dc6a5"],
Cell[218209, 4509, 8143, 205, 130, "Output",ExpressionUUID->"e95e891e-0d79-402f-b496-23d0055cfcb8"]
}, Open  ]],
Cell[226367, 4717, 517, 10, 52, "Code",ExpressionUUID->"8eb4279a-1f74-4ac8-9b4d-7a561e752984"],
Cell[CellGroupData[{
Cell[226909, 4731, 691, 15, 52, "Code",ExpressionUUID->"b8a763af-5bba-4ece-b071-a8d0de5d0cb1"],
Cell[227603, 4748, 569419, 10426, 75, "Output",ExpressionUUID->"29802e4b-1f63-4a06-87a6-570224182cb8"]
}, Open  ]],
Cell[797037, 15177, 842, 19, 72, "Code",ExpressionUUID->"8a88b223-04b4-4d6c-a5e4-69fd1d284c5d"],
Cell[CellGroupData[{
Cell[797904, 15200, 924, 19, 52, "Code",ExpressionUUID->"cb560b9a-b394-468c-a7ba-e55eca9218e1"],
Cell[798831, 15221, 568742, 10406, 75, "Output",ExpressionUUID->"13442e55-949d-4dac-8cac-bbd4b04ec8bb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

